{"version":3,"sources":["middleware/logger.js","middleware/index.js","reducers/user.js","reducers/escapeRooms.js","reducers/escapeRoom.js","reducers/index.js","components/Dashboard.js","components/Profile.js","models/Component.js","models/Area.js","models/Puzzle.js","models/Prop.js","models/Lock.js","models/Event.js","models/Music.js","models/EscapeRoom.js","components/EscapeRoomDesigner.js","components/Details.js","components/Design.js","components/ComponentDnDTarget.js","components/ComponentDnDSource.js","components/AreaDnDTarget.js","components/AreaDnDSource.js","components/Pallet.js","components/ComponentArranger.js","components/ComponentDetails.js","components/Accessibility.js","components/Login.js","components/SignUp.js","components/About.js","components/Tutorials.js","components/ProtectedRoute.js","components/NotFound.js","components/BusinessLogic.js","components/Main.js","actions/user.js","actions/escapeRooms.js","actions/escapeRoom.js","components/App.js","serviceWorker.js","index.js","stores/store.js"],"names":["logger","store","next","action","console","groupCollapsed","type","info","result","log","getState","groupEnd","middleware","reduxThunk","reduxPromiseMiddleware","user","state","arguments","length","undefined","Object","objectSpread","escapeRooms","i","push","escapeRoom","slice","indexOf","pop","findIndex","_id","reducers","reduxifiedServices","combineReducers","usersService","users","reducer","escapeRoomsService","routing","routerReducer","Dashboard","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleToggle","e","dropdownOpen","setState","handleClick","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","newEscapeRoom","stop","_x","apply","handleItemClick","editEscapeRoom","saveJSON","savePDF","deleteEscapeRoom","mapEscapeRoomToList","react_default","createElement","ListGroupItem","key","details","name","Dropdown","style","display","position","right","isOpen","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","onClick","blob","Blob","JSON","stringify","saveAs","doc","jsPDF","text","save","Container","Row","Col","Button","block","ListGroup","map","Component","Profile","handleSubmit","event","preventDefault","updateUser","email","password","handleChange","defineProperty","target","id","value","handleDismiss","errorMessage","_ref2","_callee2","_context2","t0","edit","abrupt","sent","_x2","oldProps","newProps","profile","Card","CardImg","height","src","avatar","alt","CardBody","CardTitle","className","editProfile","Form","onSubmit","FormGroup","Label","for","Input","onChange","Alert","color","uniqid","description","inputComponents","outputComponents","top","left","Area","Puzzle","puzzleType","Prop","Lock","lockType","Event","eventType","Music","startTime","endTime","EscapeRoom","userId","designers","theme","minPlayers","maxPlayers","targetTime","difficulty","objective","accessibility","protanomaly","protanopia","deuteranomaly","deuteranopia","tritanomaly","tritanopia","coneMonochromacy","rodMonochromacy","largeFonts","highContrast","components","EscapeRoomDesigner","saveEscapeRoom","handleDetailsChange","newState","handleAccessibilityChange","handleDesignChange","toConsumableArray","handleNav","tab","activeTab","history","xs","md","lg","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","components_Details","components_Accessibility","components_Design","Details","placeholder","min","max","Design","handlePalletItemClick","item","handleComponentClick","component","callback","stopPropagation","selected","handleComponentDrop","parentId","isInput","searchResult","findComponent","addRelationship","area","find","comp","com","updateComponent","handleDidNotDrop","removeComponent","handleComponentDetailsChange","newComponent","forEach","index","found","list","lists","componentId","componentIds","removeRelationship","ids","components_Pallet","components_ComponentArranger","components_ComponentDetails","ComponentDnDTarget","classNames","isOver","canDrop","connectDropTarget","DropTarget","drop","monitor","didDrop","getItem","moved","connect","dropTarget","isOverCurrent","shallow","itemType","getItemType","componentSource","canDrag","isDragging","beginDrag","endDrag","ComponentDnDSource","mapRelationships","label","strokeColor","targetId","targetAnchor","sourceAnchor","nextProps","nextState","_this2","isTarget","components_ComponentDnDTarget","archer","react_archer","relations","concat","connectDragSource","DragSource","dragSource","componentTarget","clientOffset","getClientOffset","targetRect","ReactDOM","findDOMNode","getBoundingClientRect","y","x","width","delta","getDifferenceFromInitialOffset","Math","round","AreaDnDTarget","components_ComponentDnDSource","areaSource","AreaDnDSource","components_AreaDnDTarget","Pallet","components_AreaDnDSource","areaArrangerTarget","AreaModel","ComponentArranger","mapAreas","render","ComponentDetails","mapDetailToInput","handleOnClick","filter","oldId","mapIDToP","properties","inputs","outputs","inputRelationships","outputRelationships","keys","margin-bottom","Accessibility","CustomInput","checked","wheelchairAccessible","motorAccessible","Login","err","authenticateCredentials","strategy","FormText","Link","to","Signup","signUp","About","href","Tutorials","dist_default","api_key","process","youtubeAPIKey","playlist_id","scrolling","ProtectedRoute","window","localStorage","condition","Route","Redirect","redirect","location","NotFound","BusinessLogic","credentials","queryResult","feathersClient","authenticate","services","query","includes","total","data","token","redux","actions","login","message","create","setEscapeRoom","_callee3","response","_context3","addEscapeRoom","remove","removeEscapeRoom","_ref4","_callee4","update","_context4","patch","_x3","_ref5","_callee5","_context5","updateEscapeRoom","_x4","Switch","exact","from","components_ProtectedRoute","path","routeProps","components_Dashboard","components_Profile","components_EscapeRoomDesigner","components_Login","SignUp","Main","jwt","authenticateJWT","populateUserFromJWT","populateEscapeRooms","accessToken","logout","_ref3","setProfile","passport","verifyJWT","get","updateEscapeRooms","loading","removeItem","prevProps","loggedIn","isLoading","LoadingOverlay_default","spinner","components_BusinessLogic","clearEscapeRoom","App","dispatch","userFuncs","bindActionCreators","userActionCreators","escapeRoomsFuncs","escapeRoomsActionCreators","escapeRoomFuncs","escapeRoomActionCreators","stateProps","dispatchProps","ownProps","withRouter","Boolean","hostname","match","__webpack_require__","d","__webpack_exports__","pipline","backends","backend","HTML5Backend","TouchBackend","enableMouseEvents","preview","transition","TouchTransition","MultiBackend","feathers","configure","socketio","io","hooks","authentication","storage","rawServices","reduxifyServices","initialState","createStoreWithDevTools","devToolsExtension","createStore","applyMiddleware","middlewares","createStoreWithMiddlewares","rootReducer","configureStore","bindWithDispatch","router","react_dnd_lib","es","BrowserRouter","components_App","getServicesStatus","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6469bf8c.chunk.js","sourcesContent":["/*\r\n A basic middleware logger\r\n See http://redux.js.org/docs/advanced/Middleware.html\r\n */\r\n\r\nconst logger = store => next => action => {\r\n    console.groupCollapsed(action.type); // eslint-disable-line no-console\r\n    console.info('dispatching', action); // eslint-disable-line no-console\r\n    const result = next(action);\r\n    console.log('next state', store.getState()); // eslint-disable-line no-console\r\n    console.groupEnd(action.type); // eslint-disable-line no-console\r\n    return result;\r\n  };\r\n  \r\n  export default logger;","// eslint no-unused-vars: 0,\r\n\r\nimport reduxThunk from 'redux-thunk';\r\nimport reduxPromiseMiddleware from 'redux-promise-middleware';\r\n// import { routerMiddleware } from 'react-router-redux';\r\n// import { browserHistory } from 'react-router';\r\nimport logger from './logger'; // eslint-disable-line no-unused-vars\r\n\r\nexport default [\r\n  reduxThunk, // Thunk middleware for Redux\r\n  reduxPromiseMiddleware(), // Resolve, reject promises with conditional optimistic updates\r\n  // routerMiddleware(browserHistory), // !! IMPORTANT for location.href changes\r\n  logger, // A basic middleware logger\r\n];","function user(state={},action){\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            return {...action.user};\r\n        case 'LOGOUT':\r\n            return {};\r\n        default:\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default user;","function escapeRooms(state=[],action){\r\n    let i;\r\n    switch(action.type){\r\n        case 'ADD_ESCAPE_ROOM':\r\n            state.push(action.escapeRoom);\r\n            return state.slice();\r\n        case 'REMOVE_ESCAPE_ROOM':\r\n            i = state.indexOf(action.escapeRoom);\r\n            state.pop(i);\r\n            return state.slice();\r\n        case 'UPDATE_ESCAPE_ROOM':\r\n            i = state.findIndex((escapeRoom)=>{\r\n                return escapeRoom._id === action.escapeRoom._id\r\n            });\r\n            state[i] = action.escapeRoom;\r\n            return state.slice(); \r\n        case 'UPDATE_ESCAPE_ROOMS':\r\n            return action.escapeRooms.slice();\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default escapeRooms;","function escapeRoom(state={},action){\r\n    switch(action.type){\r\n        case 'SET_ESCAPE_ROOM':\r\n            return {...action.escapeRoom};\r\n        case 'CLEAR_ESCAPE_ROOM':\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default escapeRoom;","import { combineReducers } from 'redux';\r\nimport { routerReducer } from 'react-router-redux';\r\n\r\nimport user from './user';\r\nimport escapeRooms from './escapeRooms';\r\nimport escapeRoom from './escapeRoom';\r\n\r\nexport default function(reduxifiedServices){\r\n    return combineReducers({\r\n        usersService: reduxifiedServices.users.reducer,\r\n        escapeRoomsService: reduxifiedServices['escape-rooms'].reducer,\r\n        routing: routerReducer,\r\n        user,\r\n        escapeRooms,\r\n        escapeRoom\r\n    })\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Dropdown, DropdownToggle, DropdownMenu, DropdownItem , ListGroup, ListGroupItem , Button } from 'reactstrap';\r\nimport { saveAs } from 'file-saver';\r\nimport jsPDF from 'jspdf';\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: [false,false]\r\n        }\r\n    }\r\n    handleToggle = (i) => (e) => {\r\n        var dropdownOpen = this.state.dropdownOpen;\r\n        dropdownOpen[i] = !dropdownOpen[i];\r\n        this.setState({dropdownOpen});\r\n    }\r\n    handleClick = async (e) => {\r\n        if(this.props.newEscapeRoom)\r\n            this.props.newEscapeRoom();\r\n    }\r\n    saveJSON(escapeRoom) {\r\n        const blob = new Blob([JSON.stringify(escapeRoom)],{type:'text/plain;charset=utf-8'});\r\n        saveAs(blob, escapeRoom.details.name+\".json\");\r\n    }\r\n    savePDF(escapeRoom) {\r\n        var doc = new jsPDF();\r\n        doc.text(JSON.stringify(escapeRoom),10,10);\r\n        doc.save(escapeRoom.details.name+'.pdf');\r\n    }\r\n    handleItemClick = (i, action) => (e) => {\r\n        const escapeRoom = this.props.escapeRooms[i];\r\n        switch(action){\r\n            case 'EDIT':\r\n                if(this.props.editEscapeRoom)   \r\n                    this.props.editEscapeRoom(escapeRoom);\r\n                break;\r\n            case 'JSON':\r\n                this.saveJSON(escapeRoom);\r\n                break;\r\n            case 'PDF':\r\n                this.savePDF(escapeRoom);\r\n                break;\r\n            case 'DELETE':\r\n                if(this.props.deleteEscapeRoom)\r\n                    this.props.deleteEscapeRoom(escapeRoom);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    mapEscapeRoomToList = (escapeRoom,i) => {\r\n        return (\r\n        <ListGroupItem key={i}>{escapeRoom.details.name}\r\n            <Dropdown style={{display:'inline', position: 'absolute', right:'20px'}} isOpen={this.state.dropdownOpen[i]} toggle={this.handleToggle(i)}>\r\n                <DropdownToggle caret/>\r\n                <DropdownMenu right>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'EDIT')}>Edit</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'JSON')}>Export as JSON</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'PDF')}>Export as PDF</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'DELETE')}>Delete</DropdownItem>\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        </ListGroupItem>)\r\n    };\r\n    render() {\r\n        const escapeRooms = this.props.escapeRooms;\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Button block onClick={this.handleClick}>NEW</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <ListGroup>\r\n                            {escapeRooms.map(this.mapEscapeRoomToList)}\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Dashboard;","import React, {Component}  from 'react';\r\nimport { Container, Row, Col, Card, CardImg, CardBody,\r\n    CardTitle, Alert, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nclass Profile extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            edit: false,\r\n            errorMessage: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            _id: \"\"\r\n        };\r\n    }\r\n    //Handles login form submit event\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(this.props.updateUser)\r\n            this.props.updateUser({email:this.state.email,password:this.state.password});\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    //Handles error dismiss\r\n    handleDismiss = (event) => {\r\n        this.setState({errorMessage: \"\"});\r\n    }\r\n\r\n    handleClick = async (event) => {\r\n        switch (event.target.id) {\r\n            case 'editButton':\r\n                this.setState({edit:true});\r\n                break;\r\n            case 'saveButton':\r\n                let user = this.props.user;\r\n                if(this.state.email===\"\"){\r\n                    this.setState({errorMessage:\"Email Required\"});\r\n                    return;\r\n                } else {\r\n                    user.email = this.state.email;\r\n                }\r\n                if(this.state.password!==\"\")\r\n                    user.password = this.state.password;\r\n                if(this.props.updateUser!==undefined){\r\n                    let response = await this.props.updateUser(user);\r\n                    if(response===true){\r\n                        this.setState({edit:false});\r\n                    } else {\r\n                        this.setState({errorMessage:\"Error, Please Try Again Later\"});\r\n                    }\r\n                }\r\n                    \r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const user = this.props.user;\r\n        this.setState({\r\n            email: user.email\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(oldProps){\r\n        const newProps = this.props;\r\n        if(oldProps.user.email !== newProps.user.email){\r\n            const user = this.props.user;\r\n            this.setState({\r\n                email: user.email,\r\n                _id: user._id\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.profile = \r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <CardImg height=\"50%\" src={this.props.user.avatar} alt=\"Profile Image\" />\r\n                        <CardBody>\r\n                        <CardTitle className=\"text-center\">{this.props.user.email}</CardTitle>\r\n                        <Button id=\"editButton\" block={true} className=\"text-center\" onClick={this.handleClick}>Edit Profile</Button>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        this.editProfile = \r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup>\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"password\">Password</Label>\r\n                            <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <Button id=\"saveButton\" onClick={this.handleClick}>Save</Button>\r\n                        <Alert isOpen={this.state.errorMessage !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.errorMessage}</Alert>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        if(this.state.edit)\r\n            return this.editProfile;\r\n        else \r\n            return this.profile;\r\n    }\r\n};\r\n\r\nexport default Profile;","import uniqid from 'uniqid';\r\n\r\nexport default class Component {\r\n    constructor(){\r\n        this._id = uniqid();\r\n        this.name = \"\";\r\n        this.description = \"\";\r\n        this.inputComponents = [];\r\n        this.outputComponents = [];\r\n        this.type = \"Component\";\r\n        this.position = {top:0,left:0};\r\n    }\r\n}","import Component from './Component';\r\nexport default class Area extends Component {\r\n    constructor(){\r\n        super();\r\n        this.type=\"Area\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Puzzle extends Component {\r\n    constructor(){\r\n        super();\r\n        this.puzzleType=\"\";\r\n        this.type=\"Puzzle\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Prop extends Component {\r\n    constructor(){\r\n        super();\r\n        this.type=\"Prop\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Lock extends Component {\r\n    constructor(){\r\n        super();\r\n        this.lockType=\"\";\r\n        this.type=\"Lock\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Event extends Component {\r\n    constructor(){\r\n        super();\r\n        this.eventType=\"\";\r\n        this.type=\"Event\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Music extends Component {\r\n    constructor(){\r\n        super();\r\n        this.startTime=\"\";\r\n        this.endTime=\"\"\r\n        this.type=\"Music\";\r\n    }   \r\n}","import { Area } from \".\";\r\nexport default class EscapeRoom {\r\n    constructor(userId){\r\n        this.userId = userId;\r\n        this.details = {\r\n            name: \"Unnamed\",\r\n            designers: \"\",\r\n            theme: \"\",\r\n            minPlayers: \"\",\r\n            maxPlayers: \"\",\r\n            targetTime: \"\",\r\n            difficulty: \"3\",\r\n            objective: \"\",\r\n            description: \"\"\r\n        }\r\n        this.accessibility = {\r\n            protanomaly: false,\r\n            protanopia: false,\r\n            deuteranomaly: false,\r\n            deuteranopia: false,\r\n            tritanomaly: false,\r\n            tritanopia: false,\r\n            coneMonochromacy: false,\r\n            rodMonochromacy: false,\r\n            largeFonts: false,\r\n            highContrast: false\r\n        }\r\n        this.components = [new Area()]\r\n    }  \r\n}","import React, {Component}  from 'react';\r\nimport { Container, Dropdown, DropdownToggle , DropdownMenu , DropdownItem , Row, Col, Nav, NavItem, NavLink, TabContent, TabPane , Button } from 'reactstrap';\r\nimport { Details, Accessibility, Design } from './index';\r\nimport classnames from 'classnames';\r\nimport { saveAs } from 'file-saver';\r\nimport jsPDF from 'jspdf';\r\nimport EscapeRoom from '../models/EscapeRoom';\r\n\r\nclass EscapeRoomDesigner extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {activeTab:'details', dropdownOpen: false, escapeRoom:new EscapeRoom()};\r\n    }\r\n    saveJSON(escapeRoom) {\r\n        const blob = new Blob([JSON.stringify(escapeRoom)],{type:'text/plain;charset=utf-8'});\r\n        saveAs(blob, escapeRoom.details.name+\".json\");\r\n    }\r\n    savePDF(escapeRoom) {\r\n        var doc = new jsPDF();\r\n        doc.text(JSON.stringify(escapeRoom),10,10);\r\n        doc.save(escapeRoom.details.name+'.pdf');\r\n    }\r\n    handleClick = (action) => (e) => {\r\n        switch(action){\r\n            case 'EXIT':\r\n                if(this.props.saveEscapeRoom)\r\n                    this.props.saveEscapeRoom(this.state.escapeRoom);\r\n                break;\r\n            case 'JSON':\r\n                if(this.props.saveEscapeRoom)\r\n                    this.props.saveEscapeRoom(this.state.escapeRoom);\r\n                this.saveJSON(this.state.escapeRoom);\r\n                break;\r\n            case 'PDF':\r\n                if(this.props.saveEscapeRoom)\r\n                    this.props.saveEscapeRoom(this.state.escapeRoom);\r\n                this.savePDF(this.state.escapeRoom);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        })\r\n    }\r\n    //Changes state on input change\r\n    handleDetailsChange = (state) => { \r\n        var escapeRoom = {...this.state.escapeRoom};\r\n        var newState = {...escapeRoom.details, ...state};\r\n        escapeRoom.details = newState;\r\n        this.setState({escapeRoom});\r\n    }\r\n    //Changes state on input change\r\n    handleAccessibilityChange = (state) => { \r\n        var escapeRoom = {...this.state.escapeRoom};\r\n        var newState = {...this.state.escapeRoom.accessibility, ...state};\r\n        escapeRoom.accessibility = newState;\r\n        this.setState({escapeRoom});\r\n    }\r\n    //Changes state on input change\r\n    handleDesignChange = (state) => { \r\n        var escapeRoom = {...this.state.escapeRoom};\r\n        var newState = [...state];\r\n        escapeRoom.components = newState;\r\n        this.setState({escapeRoom});\r\n    }\r\n    handleToggle = (e) => {\r\n        this.setState({dropdownOpen: !this.state.dropdownOpen});\r\n    }\r\n    handleNav = (tab) => (e) => {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const escapeRoom = this.props.escapeRoom;\r\n        if(escapeRoom===undefined){\r\n            this.props.history.push('/');\r\n        }\r\n        this.setState({escapeRoom: escapeRoom},()=>{\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col xs=\"6\" md=\"3\" lg=\"3\"><Button block onClick={this.handleClick('EXIT')}>Save and Exit</Button></Col>\r\n                    <Col xs=\"6\" md=\"3\" lg=\"3\">\r\n                        <Dropdown block isOpen={this.state.dropdownOpen} toggle={this.handleToggle}>\r\n                            <DropdownToggle caret>Save and Export</DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem onClick={this.handleClick('JSON')}>Export as JSON</DropdownItem>\r\n                                <DropdownItem onClick={this.handleClick('PDF')}>Export as PDF</DropdownItem>\r\n                            </DropdownMenu>\r\n                        </Dropdown>\r\n                    </Col>\r\n                    <Col xs=\"6\"/>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Nav tabs>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'details'})}\r\n                                    onClick={this.handleNav('details')}    \r\n                                >\r\n                                    Details\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'accessibility'})}\r\n                                    onClick={this.handleNav('accessibility')}    \r\n                                >\r\n                                    Accessibility\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'design'})}\r\n                                    onClick={this.handleNav('design')}    \r\n                                >\r\n                                    Design\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <TabContent activeTab={this.state.activeTab}>\r\n                            <TabPane tabId=\"details\">\r\n                                <Details state={this.state.escapeRoom.details} handleChange={this.handleDetailsChange}/>\r\n                            </TabPane>\r\n                            <TabPane tabId=\"accessibility\">\r\n                                <Accessibility state={this.state.escapeRoom.accessibility} handleChange={this.handleAccessibilityChange}/>\r\n                            </TabPane>\r\n                            <TabPane tabId=\"design\">\r\n                                <Design state={{components:this.state.escapeRoom.components}} handleChange={this.handleDesignChange}/>\r\n                            </TabPane>\r\n                        </TabContent>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default EscapeRoomDesigner;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Form, FormGroup, Label, Input} from 'reactstrap';\r\n\r\nclass Details extends Component {\r\n    //Changes state on input change\r\n    handleChange = (event) => { \r\n        var state = {};\r\n        state[event.target.id] = event.target.value;    \r\n        this.props.handleChange(state);\r\n    }\r\n    render(){\r\n        return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Room Name</Label>\r\n                            <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Room Name\" value={this.props.state.name} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"designers\">Designers</Label>\r\n                            <Input type=\"text\" name=\"designers\" id=\"designers\" placeholder=\"Designer(s)\" value={this.props.state.designers} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"theme\">Theme</Label>\r\n                            <Input type=\"text\" name=\"theme\" id=\"theme\" placeholder=\"theme\" value={this.props.state.theme} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label>Players</Label>\r\n                            <Input type=\"text\" name=\"minPlayers\" id=\"minPlayers\" placeholder=\"Min\" value={this.props.state.minPlayers} onChange={this.handleChange}/>\r\n                            <Input type=\"text\" name=\"maxPlayers\" id=\"maxPlayers\" placeholder=\"Max\" value={this.props.state.maxPlayers} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"targetTime\">Target Time</Label>\r\n                            <Input type=\"text\" name=\"targetTime\" id=\"targetTime\" placeholder=\"Time\" value={this.props.state.targetTime} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"difficulty\">Difficulty</Label>\r\n                            <Input type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" id=\"difficulty\" value={this.props.state.difficulty} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </Col>\r\n                <Col>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"objective\">Objective</Label>\r\n                            <Input type=\"text\" name=\"objective\" id=\"objective\" placeholder=\"Main Objective\" value={this.props.state.objective} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"description\">Description</Label>\r\n                            <Input type=\"textarea\" name=\"description\" id=\"description\" placeholder=\"Description\" value={this.props.state.description} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>)\r\n    }\r\n}\r\n\r\nexport default Details;","import React, {Component} from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Pallet, ComponentArranger, ComponentDetails } from './index';\r\nimport Area from '../models/Area';\r\n\r\nclass Design extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {selected: {}};\r\n    }\r\n    handlePalletItemClick = (item) => {\r\n        switch(item){\r\n            case 'Area':\r\n                var components = this.props.state.components;\r\n                components.push(new Area());\r\n                this.props.handleChange(components);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    handleComponentClick = (component,callback) => (e) => {\r\n        e.stopPropagation();\r\n        this.setState({selected:component});\r\n        if(callback!=null){\r\n            callback();\r\n        }\r\n    }\r\n    handleComponentDrop = (component, parentId, isInput = true) => {\r\n        let components = [...this.props.state.components];\r\n        let searchResult = this.findComponent(component._id);\r\n        if(parentId != null){\r\n            components = this.addRelationship(component._id,parentId,isInput)\r\n            if(searchResult==null){\r\n                let parent = this.findComponent(parentId);\r\n                if(parent.type!=='Area'){\r\n                    let area = components.find((comp)=>{\r\n                        if(comp.type==='Area'){\r\n                            return comp.outputComponents.find((com)=>{\r\n                                return com === parentId;\r\n                            });\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    });\r\n                    if(area!==undefined){\r\n                        components = this.addRelationship(component._id,area._id,false);\r\n                    }\r\n                }\r\n                components.push(component);\r\n            } else {\r\n                components = this.updateComponent(component);\r\n            }\r\n            this.props.handleChange(components);\r\n        } else {\r\n            components.push(component);\r\n            this.props.handleChange(components);\r\n        }\r\n    }\r\n    handleDidNotDrop = (component) => {\r\n        var components = this.removeComponent(component._id);\r\n        this.props.handleChange(components);\r\n    }\r\n    //Changes state on input change\r\n    handleComponentDetailsChange = (state) => { \r\n        var newComponent = {...this.state.selected, ...state};\r\n        var components = [...this.props.state.components];\r\n        components = this.updateComponent(newComponent);\r\n        this.props.handleChange(components);\r\n        this.setState({selected:newComponent});\r\n    }\r\n    updateComponent = (newComponent) => {\r\n        let id = newComponent._id;\r\n        let components = [...this.props.state.components];\r\n        components.forEach((component,index,components)=>{\r\n            if(component._id===id){\r\n                components[index] = newComponent;\r\n            }\r\n        });\r\n        return components;\r\n    }\r\n    findComponent = (id)=>{\r\n        let components = [...this.props.state.components];\r\n        let found = null;\r\n        components.forEach((component,index,components)=>{\r\n            if(component._id===id){\r\n                found = component;\r\n                return found;\r\n            }\r\n        });\r\n        return found;\r\n    }\r\n    removeComponent = (id)=>{\r\n        let components = [...this.props.state.components];\r\n        components.forEach((component,index,components)=>{\r\n            if(component._id===id){\r\n                components.pop(index);\r\n            } else {\r\n                let relationships = [component.inputComponents,component.outputComponents];\r\n                relationships.forEach((list,index,lists)=>{\r\n                    list.forEach((componentId,index,componentIds)=>{\r\n                        if(componentId===id){\r\n                            componentIds.pop(index);\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        });\r\n        return components;\r\n    }\r\n    removeRelationship = (componentId,parentId,isInput)=>{\r\n        let components = [...this.props.state.components];\r\n        components.forEach((component,index,components)=>{\r\n            if(component._id===parentId){\r\n                if(isInput){\r\n                    component.inputComponents.forEach((id,index,ids)=>{\r\n                        if(id===componentId){\r\n                            ids.pop(index);\r\n                        }\r\n                    })\r\n                } else {\r\n                    component.outputComponents.forEach((id,index,ids)=>{\r\n                        if(id===componentId){\r\n                            ids.pop(index);\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        return components;\r\n    }\r\n    addRelationship = (componentId,parentId,isInput)=>{\r\n        let components = [...this.props.state.components];\r\n        components.forEach((component,index,components)=>{\r\n            if(component._id===parentId){\r\n                if(isInput){\r\n                    if(component.inputComponents.indexOf(componentId)===-1)\r\n                        component.inputComponents.push(componentId);\r\n                } else {\r\n                    if(component.outputComponents.indexOf(componentId)===-1)\r\n                        component.outputComponents.push(componentId);\r\n                }\r\n            }\r\n        })\r\n        return components;\r\n    }\r\n    render(){\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col md=\"2\">\r\n                        <Pallet handleClick={this.handlePalletItemClick}/>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                        <ComponentArranger findComponent={this.findComponent} handleDidNotDrop={this.handleDidNotDrop} handleComponentDrop={this.handleComponentDrop} handleComponentClick={this.handleComponentClick} components={this.props.state.components}/>            \r\n                    </Col>\r\n                    <Col md=\"2\">\r\n                        <ComponentDetails selected={this.state.selected} handleChange={this.handleComponentDetailsChange}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Design;","import React, {Component}  from 'react';\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport { DropTarget } from 'react-dnd';\r\nimport { Puzzle, Event, Music, Lock } from '../models/index';\r\n\r\nconst Types = {\r\n    COMPONENT: 'COMPONENT'\r\n}\r\n\r\nconst componentTarget = {\r\n    drop(props,monitor,component){\r\n        if (monitor.didDrop()){\r\n            return;\r\n        }\r\n        const item = monitor.getItem();\r\n        const isInput = props.isInput;\r\n        component.handleComponentDrop(item,isInput);\r\n        return {moved:true};\r\n    }\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        isOverCurrent: monitor.isOver({shallow:true}),\r\n        canDrop: monitor.canDrop(),\r\n        itemType: monitor.getItemType()\r\n    }\r\n}\r\n\r\nclass ComponentDnDTarget extends Component {\r\n    handleComponentDrop(item,isInput=true){\r\n        var component = null;\r\n        if (item.id!==undefined){\r\n            switch(item.id){\r\n                case 'Puzzle':\r\n                    component = new Puzzle();\r\n                    break;\r\n                case 'Lock':\r\n                    component = new Lock();\r\n                    break;\r\n                case 'Event':\r\n                    component = new Event();\r\n                    break;\r\n                case 'Music':\r\n                    component = new Music();\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        } else {\r\n            component = item;\r\n        }\r\n        this.props.handleComponentDrop(component,this.props.component._id,isInput);\r\n    }\r\n    handleDidNotDrop = (component) => {\r\n        this.props.handleDidNotDrop(component);\r\n    }\r\n    render() {\r\n        var classNames;\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames=\"canDrop\";\r\n        } else if(this.props.isOver){\r\n            classNames=\"cantDrop\";\r\n        }\r\n        return this.props.connectDropTarget(\r\n            <div className={classNames} key={this.props.component._id}>\r\n                <Card onClick={this.props.handleComponentClick(this.props.component)}>\r\n                    <CardBody>\r\n\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DropTarget(Types.COMPONENT, componentTarget, collect)(ComponentDnDTarget);","import React, {Component} from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport ComponentDnDTarget from './ComponentDnDTarget';\r\nimport { Row, Col } from 'reactstrap'\r\nimport '../styles/Component.css';\r\nimport { ArcherElement } from 'react-archer';\r\n\r\n// Drag sources and drop targets only interact\r\n// if they have the same string type.\r\n// You want to keep types in a separate file with\r\n// the rest of your app's constants.\r\nconst Types = {\r\n  COMPONENT: 'COMPONENT'\r\n};\r\n\r\n/**\r\n * Specifies the drag source contract.\r\n * Only `beginDrag` function is required.\r\n */\r\nconst componentSource = {\r\n  canDrag(props) {\r\n    // You can disallow drag based on props\r\n    return true;\r\n  },\r\n\r\n  isDragging(props, monitor) {\r\n    return monitor.getItem().id === props.id;\r\n  },\r\n\r\n  beginDrag(props, monitor, component) {\r\n    // Return the data describing the dragged item\r\n    var item\r\n    if(props.component === undefined){\r\n      item = {id: props.id}\r\n    } else {\r\n      item = {...props.component};\r\n    }\r\n    return item;\r\n  },\r\n\r\n  endDrag(props, monitor, component) {\r\n    if (!monitor.didDrop()) {\r\n      if(props.component!==undefined||props.component!==null)\r\n        component.handleDidNotDrop(props.component);\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    // Call this function inside render()\r\n    // to let React DnD handle the drag events:\r\n    connectDragSource: connect.dragSource(),\r\n    // You can ask the monitor about the current drag state:\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nclass ComponentDnDSource extends Component{\r\n  handleDidNotDrop = (component)=>{\r\n    if(this.props.handleDidNotDrop!==undefined)\r\n      this.props.handleDidNotDrop(component);\r\n  }\r\n  mapRelationships = (componentId,type) => {\r\n    let style;\r\n    let label=\"\";\r\n    switch(type){\r\n      case 'input':\r\n        style = {\r\n          strokeColor:'blue'\r\n        }\r\n        label='input';\r\n        break;\r\n      case 'output':\r\n        style = {\r\n          strokeColor:'green'\r\n        }\r\n        label=\"output\"\r\n      break;\r\n      default:\r\n        style={};\r\n    }\r\n    return ({\r\n      targetId: componentId,\r\n      targetAnchor: 'top',\r\n      sourceAnchor: 'bottom',\r\n      style,\r\n      label,\r\n    });\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    return true;\r\n  }\r\n  findComponent(component){\r\n    if(this.props.findComponent!==undefined){\r\n      return this.props.findComponent(component);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  render() {\r\n      var target;\r\n      if (this.props.isTarget){\r\n        target = (\r\n          <Row>\r\n              <Col xs=\"6\"><ComponentDnDTarget isInput={true} component={this.props.component} handleDidNotDrop={this.props.handleDidNotDrop} handleComponentDrop={this.props.handleComponentDrop} handleComponentClick={this.props.handleComponentClick}/></Col>\r\n              <Col xs=\"6\"><ComponentDnDTarget isInput={false} component={this.props.component} handleDidNotDrop={this.props.handleDidNotDrop} handleComponentDrop={this.props.handleComponentDrop} handleComponentClick={this.props.handleComponentClick}/></Col>\r\n          </Row>  \r\n        );\r\n      }\r\n      var style = {};\r\n      let inputComponents;\r\n      let outputComponents; \r\n      let id=\"\";\r\n      let classNames = \"component\";\r\n      let archer;\r\n      if(this.props.component!==undefined){\r\n        style.top = this.props.component.position.top;\r\n        style.left = this.props.component.position.left;\r\n        style.position = 'relative';\r\n        classNames += \" \" + this.props.component.type + \" \" + this.props.component._id;\r\n        id=this.props.component._id;\r\n        inputComponents = this.props.component.inputComponents.map(id=>this.mapRelationships(id,'input'));\r\n        outputComponents = this.props.component.outputComponents.map(id=>this.mapRelationships(id,'output'));\r\n        archer = (\r\n          <ArcherElement id={id} relations={[...outputComponents,...inputComponents]}>\r\n            <span>{id}</span>\r\n          </ArcherElement>\r\n        );\r\n      } \r\n      return this.props.connectDragSource(\r\n          <div className={classNames} style={style} onClick={this.props.handleComponentClick(this.props.component)}>\r\n            <span>{this.props.id}</span>\r\n            {target}\r\n            {archer}\r\n          </div>\r\n      )\r\n  }\r\n};\r\n\r\nexport default DragSource(Types.COMPONENT, componentSource, collect)(ComponentDnDSource);","import React, {Component}  from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Card, CardBody ,CardTitle } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport { DropTarget } from 'react-dnd';\r\nimport ComponentDnDSource from './ComponentDnDSource';\r\nimport { Puzzle, Prop, Lock, Music, Event } from '../models/index.js';\r\nimport { ArcherContainer } from 'react-archer';\r\n\r\nconst Types = {\r\n    COMPONENT: 'COMPONENT'\r\n}\r\n\r\nconst componentTarget = {\r\n    drop(props,monitor,component){\r\n        if (monitor.didDrop() || !component || typeof props.component===undefined){\r\n            return;\r\n        }\r\n        const item = monitor.getItem();\r\n        if (item.position === undefined){\r\n            let clientOffset = monitor.getClientOffset();\r\n            let targetRect = ReactDOM.findDOMNode(component).getBoundingClientRect();\r\n            console.log(clientOffset);\r\n            console.log(targetRect);\r\n            item.position = {top:clientOffset.y-targetRect.y-(targetRect.height*0.20),left:clientOffset.x-targetRect.x-(targetRect.width*0.10)};\r\n            console.log(item);\r\n        } else {\r\n            const delta = monitor.getDifferenceFromInitialOffset()\r\n            item.position.left = Math.round(item.position.left + delta.x);\r\n            item.position.top = Math.round(item.position.top + delta.y);\r\n        }\r\n        component.handleComponentDrop(item);\r\n        return {moved:true};\r\n    }\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        isOverCurrent: monitor.isOver(),\r\n        canDrop: monitor.canDrop(),\r\n        itemType: monitor.getItemType()\r\n    }\r\n}\r\n\r\nclass AreaDnDTarget extends Component {\r\n    handleComponentDrop(item,isInput=false){\r\n        var component = null;\r\n        if (item.id!==undefined && item._id === undefined){\r\n            switch(item.id){\r\n                case 'Puzzle':\r\n                    component = new Puzzle();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Prop':\r\n                    component = new Prop();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Lock':\r\n                    component = new Lock();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Event':\r\n                    component = new Event();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Music':\r\n                    component = new Music();\r\n                    component.position = item.position;\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        } else {\r\n            component = item;\r\n        }\r\n        this.props.handleComponentDrop(component,this.props.component._id,isInput);\r\n    }\r\n    render() {\r\n        var classNames;\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames=\"canDrop\";\r\n        } else if(this.props.isOver){\r\n            classNames=\"cantDrop\";\r\n        }\r\n        return this.props.connectDropTarget(\r\n            <div className={classNames} key={this.props.component._id}>                \r\n                <Card className={this.props.component.type} onClick={this.props.handleComponentClick(this.props.component)}>\r\n                    <CardBody>\r\n                        <CardTitle>{this.props.component.type}</CardTitle>\r\n                        <ArcherContainer>   \r\n                            {this.props.outputComponents.map((component,i)=>{\r\n                                return(<ComponentDnDSource key={component._id} isTarget handleComponentDrop={this.props.handleComponentDrop} handleComponentClick={this.props.handleComponentClick} handleDidNotDrop={this.props.handleDidNotDrop} component={component} findComponent={this.props.findComponent} id={component.type}/>)\r\n                            })}\r\n                            </ArcherContainer>\r\n                    </CardBody>\r\n                </Card>   \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DropTarget(Types.COMPONENT, componentTarget, collect)(AreaDnDTarget);","import React, {Component} from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport AreaDnDTarget from './AreaDnDTarget';\r\nimport '../styles/Component.css';\r\nimport { Card } from 'reactstrap';\r\n\r\n// Drag sources and drop targets only interact\r\n// if they have the same string type.\r\n// You want to keep types in a separate file with\r\n// the rest of your app's constants.\r\nconst Types = {\r\n  AREA: 'AREA'\r\n};\r\n\r\n/**\r\n * Specifies the drag source contract.\r\n * Only `beginDrag` function is required.\r\n */\r\nconst areaSource = {\r\n  canDrag(props) {\r\n    // You can disallow drag based on props\r\n    return true;\r\n  },\r\n\r\n  isDragging(props, monitor) {\r\n    // If your component gets unmounted while dragged\r\n    // (like a card in Kanban board dragged between lists)\r\n    // you can implement something like this to keep its\r\n    // appearance dragged:\r\n    return monitor.getItem().id === props.id;\r\n  },\r\n\r\n  beginDrag(props, monitor, component) {\r\n    // Return the data describing the dragged item\r\n    var item = null;\r\n    if (props.id!==undefined){\r\n       item = { id: props.id };\r\n    } else {\r\n       item = { component: props.component };\r\n    }\r\n    return item;\r\n  },\r\n\r\n  endDrag(props, monitor, component) {\r\n    if (!monitor.didDrop()) {\r\n      if (props.handleDidNotDrop){\r\n        props.handleDidNotDrop(props.component);\r\n      }\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    // Call this function inside render()\r\n    // to let React DnD handle the drag events:\r\n    connectDragSource: connect.dragSource(),\r\n    // You can ask the monitor about the current drag state:\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nclass AreaDnDSource extends Component{\r\n    render() {\r\n      var target;\r\n      if (this.props.isTarget){\r\n        target = (\r\n          <AreaDnDTarget findComponent={this.props.findComponent} outputComponents={this.props.outputComponents} component={this.props.component} handleDidNotDrop={this.props.handleDidNotDrop} handleComponentDrop={this.props.handleComponentDrop} handleComponentClick={this.props.handleComponentClick}/>\r\n        );\r\n      }\r\n\r\n      return this.props.connectDragSource(\r\n          <div onClick={this.props.handleComponentClick(this.props.component)}>\r\n            <Card className={\"component\"}>\r\n              {this.props.id}\r\n              {target}\r\n            </Card>\r\n          </div>\r\n      )\r\n    }\r\n};\r\n\r\nexport default DragSource(Types.AREA, areaSource, collect)(AreaDnDSource);","import React, {Component}  from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport AreaDnD from './AreaDnDSource';\r\nimport ComponentDnD from './ComponentDnDSource';\r\n\r\nclass Pallet extends Component {\r\n    handleComponentClick = (e) => {\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h3>Pallet</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <AreaDnD id=\"Area\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <ComponentDnD id=\"Puzzle\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <ComponentDnD id=\"Prop\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <ComponentDnD id=\"Lock\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <ComponentDnD id=\"Event\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <ComponentDnD id=\"Music\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Pallet;","import React, {Component}  from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport '../styles/ComponentArranger.css';\r\nimport Area from './AreaDnDSource';\r\nimport AreaModel from '../models/Area';\r\nimport { DropTarget } from 'react-dnd';\r\n\r\nconst Types = {\r\n    AREA: 'AREA'\r\n}\r\n\r\nconst areaArrangerTarget = {\r\n    drop(props, monitor, component){\r\n        const item = monitor.getItem();\r\n        if(item.component===undefined || item.component===null){\r\n            component.props.handleComponentDrop(new AreaModel());\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n    return {\r\n      // Call this function inside render()\r\n      // to let React DnD handle the drag events:\r\n      connectDropTarget: connect.dropTarget(),\r\n      // You can ask the monitor about the current drag state:\r\n      isOver: monitor.isOver(),\r\n      isOverCurrent: monitor.isOver({ shallow: true }),\r\n      canDrop: monitor.canDrop(),\r\n      itemType: monitor.getItemType()\r\n    };\r\n  }\r\n\r\nclass ComponentArranger extends Component {\r\n    mapAreas = (area,i)=>{\r\n        if(area.type==='Area'){\r\n            let outputComponents = area.outputComponents.map((componentId,i)=>{\r\n                return this.props.findComponent(componentId);\r\n            })\r\n            return (\r\n                <Col key={i} xs=\"12\"> \r\n                    <Area isTarget findComponent={this.props.findComponent} component={area} outputComponents={outputComponents} handleDidNotDrop={this.props.handleDidNotDrop} handleComponentDrop={this.props.handleComponentDrop} handleComponentClick={this.props.handleComponentClick}/>\r\n                </Col>\r\n            )  \r\n        }\r\n    }\r\n    componentDidUpdate(props){\r\n        if(JSON.stringify(this.props.components)!==JSON.stringify(props.components)){\r\n            this.setState({render:true});\r\n        }\r\n    }\r\n    render() {\r\n        var classNames;\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames=\"canDrop\"\r\n        } else if (this.props.isOver){\r\n            classNames=\"cantDrop\"\r\n        }\r\n        return this.props.connectDropTarget(\r\n            <div className={classNames}>\r\n                <Container className=\"component-arranger\">\r\n                <Row>\r\n                    <Col>\r\n                        <h3>Components</h3>\r\n                    </Col>\r\n                </Row>\r\n                    <Row>\r\n                        {this.props.components.map(this.mapAreas)}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DropTarget(Types.AREA, areaArrangerTarget,collect)(ComponentArranger);","import React, {Component}  from 'react';\r\nimport { Container, Row, Col, Input, Label, ListGroupItem, Button, ListGroup } from 'reactstrap';\r\n\r\nclass ComponentDetails extends Component {\r\n    //Changes state on input change\r\n    handleChange = (event) => { \r\n        let state = {};\r\n        state[event.target.id] = event.target.value;  \r\n        state._id = this.props.selected._id;  \r\n        this.props.handleChange(state);\r\n    }\r\n    mapDetailToInput = (key,i) => {\r\n        if(typeof this.props.selected[key] === \"string\" && key!==\"_id\"){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{key}</Label>\r\n                        <Input type=\"text\" name={key} id={key} placeholder={key} value={this.props.selected[key]} onChange={this.handleChange}/>\r\n                    </Col>\r\n                </Row>)\r\n        } else {\r\n            return;\r\n        }\r\n    };\r\n    handleOnClick = (id,isInput)=> (e) => {\r\n        let component = {...this.props.selected};\r\n        let state = {};\r\n        state._id = component._id;\r\n        if(isInput){\r\n            state.inputComponents = component.inputComponents.filter(oldId => oldId!==id);\r\n        } else {\r\n            state.outputComponents = component.outputComponents.filter(oldId => oldId!==id);\r\n        }\r\n        this.props.handleChange(state);\r\n    }\r\n    mapIDToP = (id,i,isInput) => {\r\n        return (\r\n            <ListGroupItem key={i}>\r\n                {id}\r\n                <Button onClick={this.handleOnClick(id,isInput)} color=\"danger\" style={{display:'inline', position: 'absolute', right:'2px', top:'0.3rem'}}>\r\n                    X\r\n                </Button>\r\n            </ListGroupItem>\r\n        )\r\n    }\r\n    render() {\r\n        let component = this.props.selected;\r\n        let type;\r\n        let properties;\r\n        let inputs;\r\n        let outputs;\r\n        let inputRelationships;\r\n        let outputRelationships;\r\n        if(component!==undefined || component!==null){\r\n            properties = Object.keys(component).map(this.mapDetailToInput)\r\n            type = this.props.selected.type;\r\n            if(component.type!=='Area'&&component.inputComponents!==undefined&&component.outputComponents!==undefined&&(component.inputComponents.length>0||component.outputComponents.length>0)){\r\n                inputs = component.inputComponents.map((id,i)=>this.mapIDToP(id,i,true));\r\n                outputs = component.outputComponents.map((id,i)=>this.mapIDToP(id,i,false));\r\n                inputRelationships = (\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>Inputs</h4>\r\n                            <ListGroup>\r\n                                {inputs}\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n                outputRelationships = (\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>Outputs</h4>\r\n                            <ListGroup>\r\n                                {outputs}\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            }\r\n        }\r\n        return (\r\n            <Container style={{\"margin-bottom\":\"5vh\"}}>\r\n                <Row>\r\n                    <Col>\r\n                        <h3>Details</h3>\r\n                        <h4>{type}</h4>\r\n                    </Col>\r\n                </Row>\r\n                {properties}\r\n                {inputRelationships}\r\n                {outputRelationships}\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ComponentDetails;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Card, CustomInput } from 'reactstrap';\r\n\r\nclass Accessibility extends Component {\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        var state = {};\r\n        state[event.target.id] = event.target.value;    \r\n        this.props.handleChange(state);\r\n    }\r\n    render(){\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 className=\"text-center\">Visual Accessibility</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h2>Colour Blindness</h2>\r\n                                <p>\r\n                                    Please select the types of colour blindness your design must take into account\r\n                                </p>\r\n                            </Col>\r\n                            <Col>\r\n                                <h2>Other</h2>\r\n                                <p>\r\n                                    These are options to indicate restrictions on the design related to visual impairments such as blindness \r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card>\r\n                                   <CustomInput type=\"checkbox\" name=\"protanomaly\" id=\"protanomaly\" label=\"Protanomaly\" checked={this.props.state.protanomaly} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"protanopia\" id=\"protanopia\" label=\"Protanopia\" checked={this.props.state.protanopia} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"deuteranomaly\" id=\"deuteranomaly\" label=\"Deuteranomaly\" checked={this.props.state.deuteranomaly} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"deuteranopia\" id=\"deuteranopia\" label=\"Deuteranopia\" checked={this.props.state.deuteranopia} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"tritanomaly\" id=\"tritanomaly\" label=\"Tritanomaly\" checked={this.props.state.tritanomaly} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"tritanopia\" id=\"tritanopia\" label=\"Tritanopia\" checked={this.props.state.tritanopia} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"coneMonochromacy\" id=\"coneMonochromacy\" label=\"Cone Monochromacy\" checked={this.props.state.coneMonochromacy} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"rodMonochromacy\" id=\"rodMonochromacy\" label=\"Rod Monochromacy\" checked={this.props.state.rodMonochromacy} onChange={this.handleChange}/>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col>\r\n                                <Card>\r\n                                   <CustomInput type=\"checkbox\" name=\"largeFonts\" id=\"largeFonts\" label=\"Large Fonts\" value={this.props.state.largeFonts} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"highContrast\" id=\"highContrast\" label=\"High Contrast\" value={this.props.state.highContrast} onChange={this.handleChange}/>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 className=\"text-center\">Physical Accessibility</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <p>\r\n                                    These options are to indicate restrictions on the design related to physical impairments for example wheelchair accessibility and motor functions\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card>\r\n                                   <CustomInput type=\"checkbox\" name=\"Wheelchair Accessible\" id=\"heelchairAccessible\" label=\"wheelchairAccessible\" value={this.props.state.wheelchairAccessible} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"motorAccessible\" id=\"motorAccessible\" label=\"Accessible for players with motor function issues\" value={this.props.state.motorAccessible} onChange={this.handleChange}/>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <p>\r\n                            These options are designed to indicate the attempted accessibility of your design. These options will flag puzzles in your design that do not meet these restrictions\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Accessibility;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Alert, Button, Form, FormGroup, Label, Input, FormText} from 'reactstrap';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            errorMessage: \"\"\r\n        }\r\n    }\r\n\r\n    //Handles login form submit event\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        //Authenticate credentials \r\n        if(this.props.authenticateCredentials){\r\n            var err = await this.props.authenticateCredentials({strategy:'local',email:this.state.email,password:this.state.password});\r\n            this.setState({errorMessage:err});\r\n        }\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    //Handles error dismiss\r\n    handleDismiss = (event) => {\r\n        this.setState({errorMessage: \"\"});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"full-container verticaly-center-content\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup>\r\n                                    <Label for=\"email\">Email</Label>\r\n                                    <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"password\">Password</Label>\r\n                                    <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <Button>Login</Button>\r\n                                <FormText>\r\n                                    Don't have an account? Sign Up <Link to=\"/signup\">Here</Link>\r\n                                </FormText>\r\n                                <Alert isOpen={this.state.errorMessage !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.errorMessage}</Alert>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Alert, Button, Form, FormGroup, Label, Input, FormText} from 'reactstrap';\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            errorMessage: \"\"\r\n        }\r\n    }\r\n\r\n    //Handles login form submit event\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(this.props.signUp){\r\n            let err = await this.props.signUp({email:this.state.email,password:this.state.password});\r\n            this.setState({errorMessage:err});\r\n        }\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    //Handles error dismiss\r\n    handleDismiss = (event) => {\r\n        this.setState({errorMessage: \"\"});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"full-container verticaly-center-content\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup>\r\n                                    <Label for=\"email\">Email</Label>\r\n                                    <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"password\">Password</Label>\r\n                                    <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <Button>Sign Up</Button>\r\n                                <FormText>\r\n                                    Have an account? Log In <Link to=\"/login\">Here</Link>\r\n                                </FormText>\r\n                                <Alert isOpen={this.state.errorMessage !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.errorMessage}</Alert>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Signup;","import React, {Component}  from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <p>\r\n                            This is my honours project for BsC(Hons) Computing: Application Software Development at Robert Gordon University\r\n                            This is a web app for designing an escape room using drag and drop components\r\n                        </p>       \r\n                    </Col>\r\n                    <Col>\r\n                        <ul>\r\n                            <li><a href=\"https://github.com/AldoAbdn/Escape-Room-Generator/\">Github Repo</a></li>\r\n                            <li><a href=\"https://ninjamock.com/s/KCMW2Tx\">Wireframe</a></li>\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default About;","import React, {Component}  from 'react';\r\nimport YouTubePlaylist from 'react-youtube-playlist';\r\n\r\nclass Tutorials extends Component {\r\n    render() {\r\n        return (\r\n            <YouTubePlaylist\r\n                width={'85%'}\r\n                height={'100%'}\r\n                api_key={process.env.youtubeAPIKey}\r\n                playlist_id=\"PLWRRwFEmEuDKX5sobzWeb50xD14cpfkk3\"\r\n                scrolling={true}\r\n            />\r\n        )\r\n    }\r\n};\r\n\r\nexport default Tutorials;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass ProtectedRoute extends Component {\r\n    render(){\r\n        if (window.localStorage.getItem('feathers-jwt')){\r\n            if(this.props.condition!==undefined){\r\n                if(!this.props.condition){\r\n                    return(<Redirect to={this.props.redirect} state={this.props.location}/>)\r\n                } else {\r\n                    return (<Route {...this.props}/>)\r\n                }\r\n            } else {\r\n                return (<Route {...this.props}/>)\r\n            }\r\n        } else {\r\n            return (<Redirect to='/login' state={this.props.location}/>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default ProtectedRoute;","import React, {Component}  from 'react';\r\nimport { Container, Row } from 'reactstrap';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <h1>404 Page Not Found</h1>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default NotFound;","import React, {Component}  from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\n//Components\r\nimport { Dashboard, EscapeRoomDesigner, Login, Signup, Tutorials, About, ProtectedRoute, Profile, NotFound } from '../components/index.js';\r\nimport EscapeRoom from '../models/EscapeRoom.js';\r\n/**\r\n * Business logic of app \r\n * handles creating and updating of data \r\n * handles navigation \r\n * @class\r\n * @author Alistair Quinn\r\n */\r\nclass BusinessLogic extends Component {\r\n    /**\r\n     * Main construcutor\r\n     * handles initialising state\r\n     * @constructor\r\n     */\r\n    constructor(){\r\n        super();\r\n        this.state = {profile:null};\r\n    }\r\n    /**\r\n     * Authenticates login credentials \r\n     * @function\r\n     * @param {Object} credentials \r\n     */\r\n    authenticateCredentials = async(credentials)=>{\r\n        try {\r\n            await this.props.feathersClient.authenticate(credentials);\r\n            let queryResult = await this.props.services.users.find({query:{email:credentials.email}});\r\n            if(queryResult.action.type.includes('FULFILLED')&&queryResult.value.total>0){\r\n                var user = queryResult.value.data[0];\r\n                user.token = window.localStorage.getItem('feathers-jwt');\r\n                this.props.redux.actions.login(user);\r\n                this.props.history.push('/dashboard');\r\n            } else {\r\n                this.setState({})\r\n            }\r\n        } catch(err){\r\n            return err.message;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a new user \r\n     * @function\r\n     * @param {Object} credentials \r\n     */\r\n    signUp = async(credentials)=>{\r\n        //Create a new user \r\n        try{\r\n            await this.props.services.users.create(credentials);\r\n            //Authenticate with feathersjs\r\n            await this.props.feathersClient.authenticate({strategy:'local',email:credentials.email,password:credentials.password});\r\n            //Get User Details and Update Redux Store\r\n            let queryResult = await this.props.services.users.find({query:{email:credentials.email}});\r\n            if(queryResult.action.type.includes('FULFILLED')){\r\n                var user = queryResult.value.data[0];\r\n                user.token = window.localStorage.getItem('feathers-jwt');\r\n                this.props.redux.actions.login(user);\r\n                this.props.history.push('/dashboard');\r\n            }\r\n        } catch(error){\r\n            return error.message;\r\n        }\r\n    }\r\n    /**\r\n     * Opens escape room designer\r\n     * @function\r\n     * @param {EscapeRoom} escapeRoom\r\n     */\r\n    editEscapeRoom = (escapeRoom) => {\r\n        this.props.redux.actions.setEscapeRoom(escapeRoom);\r\n        this.props.history.push('/designer');\r\n    }\r\n    /**\r\n     * Creates a new escape room \r\n     * then opens designer\r\n     * @function\r\n     */\r\n    newEscapeRoom = async() => {\r\n        const userId = this.props.redux.state.user._id;\r\n        const newEscapeRoom = new EscapeRoom(userId);\r\n        let response = await this.props.services['escape-rooms'].create(newEscapeRoom)\r\n        if(response.action.type.includes('FULFILLED')){\r\n            const escapeRoom = response.value;\r\n            if (escapeRoom!==null){\r\n                this.props.redux.actions.addEscapeRoom(escapeRoom);\r\n                this.props.redux.actions.setEscapeRoom(escapeRoom);\r\n                this.props.history.push('/designer');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Deletes an escape room\r\n     * @function\r\n     * @param {EscapeRoom} escapeRoom\r\n     */\r\n    deleteEscapeRoom = (escapeRoom) => {\r\n        this.props.services['escape-rooms'].remove(escapeRoom._id);\r\n        this.props.redux.actions.removeEscapeRoom(escapeRoom);\r\n    }\r\n    /**\r\n     * Updates users details \r\n     * @function\r\n     * @param {Object} update\r\n     */\r\n    updateUser = async (update) => {\r\n        try{\r\n            const user = this.props.redux.state.user;\r\n            let response = await this.props.services.users.patch(user._id,update);\r\n            this.props.redux.actions.login(response.value);\r\n            this.props.history.push('/profile');\r\n            return true;\r\n        }catch(error){\r\n            return error.message;\r\n        }\r\n    }\r\n    /**\r\n     * Saves an escape room\r\n     * @function\r\n     * @param {EscapeRoom} escapeRoom\r\n     */\r\n    saveEscapeRoom = async(escapeRoom) => {\r\n        if(escapeRoom._id!==undefined){\r\n            await this.props.services['escape-rooms'].update(escapeRoom._id,escapeRoom);\r\n            await this.props.redux.actions.updateEscapeRoom(escapeRoom);\r\n        }\r\n        this.props.history.push('/');\r\n    }\r\n    /**\r\n     * React lifecycle method\r\n     * Renders navigation \r\n     * @function\r\n     */\r\n    render() {\r\n        const escapeRooms = this.props.redux.state.escapeRooms;\r\n        const escapeRoom = this.props.redux.state.escapeRoom;\r\n        const user = this.props.redux.state.user;\r\n        return (\r\n            <Switch>\r\n                <Redirect exact from=\"/\" to=\"dashboard\"/>\r\n                <ProtectedRoute path=\"/dashboard\" render={(routeProps) => (<Dashboard escapeRooms={escapeRooms} editEscapeRoom={this.editEscapeRoom} newEscapeRoom={this.newEscapeRoom} deleteEscapeRoom={this.deleteEscapeRoom}/>)}/>\r\n                <ProtectedRoute path=\"/profile\" condition={Object.keys(user).length > 0 && user!==undefined} redirect={'/login'} render={(routeProps) => (<Profile user={user} updateUser={this.updateUser}/>)}/>\r\n                <ProtectedRoute path=\"/designer\" condition={Object.keys(escapeRoom).length > 0 &&escapeRoom!==undefined} redirect={'/'} render={(routeProps) =>(<EscapeRoomDesigner escapeRoom={escapeRoom} saveEscapeRoom={this.saveEscapeRoom}/>)}/>\r\n                <Route path=\"/login\" render={(routeProps) => (<Login authenticateCredentials={this.authenticateCredentials}/>)}/>\r\n                <Route path=\"/signup\" render={(routeProps) => (<Signup signUp={this.signUp}/>)}/>\r\n                <Route path=\"/about\" component={About}/>\r\n                <Route path=\"/tutorials\" component={Tutorials}/>\r\n                <Route component={NotFound}/>\r\n            </Switch> \r\n        )\r\n    }\r\n};\r\n\r\nexport default BusinessLogic;","import React, {Component}  from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport '../styles/Main.css';\r\n\r\n/**\r\n * Defines main layout of app \r\n * Handles re-authentication of logged in user \r\n * Renders business logic \r\n * @class Main \r\n * @author Alistair Quinn\r\n */\r\nimport BusinessLogic from './BusinessLogic.js';\r\nclass Main extends Component {\r\n    /**\r\n     * Main constructor to set initial state\r\n     * @constructor\r\n     */\r\n    constructor(){\r\n        super();\r\n        this.state = {profile:null};\r\n    }\r\n    /**\r\n     * React lifecycle method\r\n     * Updates profile if user has changed\r\n     * @function\r\n     * @param {Object} prevProps \r\n     */\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.redux.state.user.email!==this.props.redux.state.user.email){\r\n            this.populateEscapeRooms(this.props.redux.state.user._id);\r\n            if(this.props.redux.state.user.email !== undefined){\r\n                this.setProfile(true);\r\n            } else {\r\n                this.setProfile(false);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * React lifecycle method \r\n     * Updates profile is logged in\r\n     * @function\r\n     */\r\n    componentDidMount() {\r\n        if (window.localStorage.getItem('feathers-jwt') && this.props.redux.state.user.email!==undefined){\r\n            this.setProfile(true);\r\n        } else if (window.localStorage.getItem('feathers-jwt') && this.props.redux.state.user.email===undefined){\r\n            this.authenticate();\r\n        }\r\n    }\r\n    /**\r\n     * Authentication\r\n     * @function\r\n     */\r\n    authenticate = async() => {\r\n        //Authenticates JWT and then populates user/escapeRooms\r\n        let jwt = await this.authenticateJWT();\r\n        let user = await this.populateUserFromJWT(jwt);\r\n        if(user!=null)\r\n            await this.populateEscapeRooms(user._id);\r\n    }\r\n    /**\r\n     * Authenticates JWT \r\n     * @function \r\n     * @returns string\r\n     */\r\n    authenticateJWT = async() => {\r\n        try {\r\n            let response = await this.props.feathersClient.authenticate();\r\n            return response.accessToken;\r\n        } catch(error) {\r\n            this.logout();\r\n        }\r\n    }\r\n    /**\r\n     * Populates user from a jwt\r\n     * @function\r\n     * @param {String} jwt \r\n     * @returns {Object}\r\n     */\r\n    populateUserFromJWT = async(jwt) => {\r\n        if(jwt===undefined||jwt===null||jwt===\"\"){\r\n            this.setProfile(false);\r\n            return null;\r\n        }\r\n        let response = await this.props.feathersClient.passport.verifyJWT(jwt);\r\n        response = await this.props.services.users.get(response.userId);\r\n        var user = response.value;\r\n        if(user.email===undefined||user.email===\"\"){\r\n            this.setProfile(false);\r\n            return null;\r\n        }\r\n        user.token = window.localStorage.getItem('feathers-jwt');\r\n        this.props.redux.actions.login(user);\r\n        this.setProfile(true);\r\n        return user;\r\n    }\r\n    /**\r\n     * Popultes escape rooms by user ID\r\n     * @function\r\n     * @param {String} userId\r\n     * @returns {Array}\r\n     */\r\n    populateEscapeRooms = async (userId) => {\r\n        //Get User Details and Update Redux Store\r\n        if (userId !== null && userId !== undefined){\r\n            let queryResult = await this.props.services['escape-rooms'].find({query:{userId:userId}});\r\n            if(queryResult.action.type.includes('FULFILLED')){\r\n                const escapeRooms = queryResult.value.data;\r\n                if (escapeRooms!==null && escapeRooms!==undefined)\r\n                    this.props.redux.actions.updateEscapeRooms(escapeRooms);\r\n                    this.setState({loading:false});\r\n                }\r\n        }\r\n    }\r\n    /**\r\n     * Logs out user, tidys up\r\n     * @function\r\n     */\r\n    logout = () => {\r\n        window.localStorage.removeItem('feathers-jwt');\r\n        this.setState({profile:null});\r\n        this.props.redux.actions.logout();\r\n        this.props.history.push('/');\r\n    }\r\n    /**\r\n     * Hides/shows user profile \r\n     * dependent on login status\r\n     * @param {Boolean} loggedIn \r\n     */\r\n    setProfile(loggedIn){\r\n        let state;\r\n        if(loggedIn){\r\n            state = \r\n            <div className=\"profile\" >\r\n                <Link to=\"/profile\">Profile</Link>\r\n                <Button onClick={this.logout}>Logout</Button>\r\n            </div>\r\n        } else {\r\n            state = null;\r\n        }\r\n        this.setState({profile:state});\r\n    }\r\n    /**\r\n     * React lifecycle method \r\n     * Renders main layout\r\n     * @function\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        const loading = this.state.loading || this.props.redux.state.usersService.isLoading || this.props.redux.state.escapeRoomsService.isLoading;\r\n        return (\r\n                <div>   \r\n                    <LoadingOverlay className={'loading-overlay'} active={loading} spinner>       \r\n                        <header>\r\n                            <h1 className=\"title\">\r\n                                <Link to=\"/\">Escape Room Generator</Link>\r\n                            </h1>\r\n                        {this.state.profile}\r\n                        </header>\r\n                        \r\n                        <main>\r\n                            <BusinessLogic history={this.props.history} feathersClient={this.props.feathersClient} redux={this.props.redux} services={this.props.services}/>\r\n                        </main>\r\n                        <footer>\r\n                            <Link to=\"/about\">About</Link>\r\n                            <Link to=\"/tutorials\">Tutorials</Link>\r\n                        </footer>\r\n                    </LoadingOverlay>\r\n                </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Main;","export function login(user) {\r\n    return {\r\n        type: 'LOGIN', user\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return {\r\n        type: 'LOGOUT'\r\n    }\r\n}\r\n\r\n","export function addEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'ADD_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function removeEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'REMOVE_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function updateEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'UPDATE_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function updateEscapeRooms(escapeRooms){\r\n    return {\r\n        type: 'UPDATE_ESCAPE_ROOMS',\r\n        escapeRooms\r\n    }\r\n}","export function setEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'SET_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function clearEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'CLEAR_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}","/**\r\n * Connects redux state and actions to the whole app,\r\n * makes sure routing is possible,\r\n * @class App\r\n * @author Alistair Quinn  \r\n */\r\n\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router'\r\nimport '../styles/App.css';\r\nimport Main from './Main';\r\nimport * as userActionCreators from '../actions/user';\r\nimport * as escapeRoomsActionCreators from '../actions/escapeRooms';\r\nimport * as escapeRoomActionCreators from '../actions/escapeRoom';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    redux: state\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  const userFuncs = bindActionCreators(userActionCreators,dispatch);\r\n  const escapeRoomsFuncs = bindActionCreators(escapeRoomsActionCreators,dispatch);\r\n  const escapeRoomFuncs = bindActionCreators(escapeRoomActionCreators, dispatch);\r\n  return {...userFuncs, ...escapeRoomsFuncs, ...escapeRoomFuncs};\r\n}\r\n\r\nfunction mergeProps(stateProps, dispatchProps, ownProps) {\r\n  return {\r\n    ...ownProps,\r\n    redux: {\r\n      state: stateProps.redux,\r\n      actions: dispatchProps\r\n    }\r\n  }\r\n}\r\n\r\nconst App = connect(mapStateToProps, mapDispatchToProps, mergeProps)(Main);\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\r\n * Main file, starts front end and renders App \r\n * @author Alistair Quinn\r\n */\r\n\r\n//React Imports \r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n//Redux Imports\r\nimport { Provider } from 'react-redux';\r\n//Store \r\nimport configureStore from './stores/store'\r\n//Feathers\r\nimport io from 'socket.io-client';\r\nimport feathers from 'feathers-client';\r\n//Feathers-Redux\r\nimport reduxifyServices, {getServicesStatus, bindWithDispatch} from 'feathers-redux';\r\n//CSS\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//Components\r\nimport App from './components/App';\r\n//Service Worker \r\nimport * as serviceWorker from './serviceWorker';\r\n//ReactDnD\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport TouchBackend from 'react-dnd-touch-backend';\r\nimport MultiBackend, { TouchTransition } from 'react-dnd-multi-backend';\r\nimport { DragDropContextProvider } from 'react-dnd';\r\nlet pipline = {\r\n    backends: [\r\n        {backend: HTML5Backend},\r\n        {\r\n            backend: TouchBackend({enableMouseEvents:true}),\r\n            preview: true,\r\n            transition: TouchTransition\r\n        }\r\n    ]\r\n};\r\nlet backend = MultiBackend(pipline);\r\n\r\n//Feathers Configuration \r\nexport const feathersClient = feathers()\r\n    .configure(feathers.socketio(io()))\r\n    .configure(feathers.hooks())\r\n    .configure(feathers.authentication({\r\n        storage:window.localStorage\r\n    }));\r\n\r\n//Configure Redux\r\nconst rawServices = reduxifyServices(feathersClient, ['users', 'escape-rooms']);\r\nconst store = configureStore(rawServices,{user:{},escapeRooms:[],escapeRoom:{}});\r\nconst services = bindWithDispatch(store.dispatch, rawServices);\r\n\r\n//Router\r\nconst router = (\r\n    <DragDropContextProvider backend={backend}>\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <App feathersClient={feathersClient} services={services} getServicesStatus={getServicesStatus}/>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    </DragDropContextProvider>\r\n);\r\n\r\n//Render Router \r\nReactDOM.render(router, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport middlewares from '../middleware';\r\nimport rootReducer from '../reducers';\r\n\r\nexport default function configureStore(reduxifiedServices, initialState) {\r\n    const createStoreWithDevTools = window.devToolsExtension ? window.devToolsExtension()(createStore) : createStore;\r\n    const createStoreWithMiddlewares = applyMiddleware(...middlewares)(createStoreWithDevTools);\r\n    return createStoreWithMiddlewares(rootReducer(reduxifiedServices),initialState);\r\n}"],"sourceRoot":""}