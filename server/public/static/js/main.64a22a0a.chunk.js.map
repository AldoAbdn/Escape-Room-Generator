{"version":3,"sources":["middleware/logger.js","middleware/index.js","reducers/user.js","reducers/escapeRooms.js","models/Component.js","models/Area.js","models/Puzzle.js","models/Prop.js","models/Lock.js","models/Event.js","models/Music.js","models/EscapeRoom.js","reducers/escapeRoom.js","models/Modal.js","reducers/modal.js","reducers/index.js","components/Profile.js","components/Dashboard.js","components/EscapeRoomDesigner.js","components/Details.js","components/Design.js","components/ComponentDnDTarget.js","components/ComponentDnDSource.js","components/AreaDnDTarget.js","components/AreaDnDSource.js","components/PalletItem.js","components/Pallet.js","components/ComponentArranger.js","components/ComponentDetails.js","components/Accessibility.js","components/Login.js","components/SignUp.js","components/About.js","components/Tutorials.js","components/ProtectedRoute.js","components/NotFound.js","generators/lock.js","components/LockGenerator.js","generators/puzzle.js","components/ListCreator.js","components/PuzzleGenerator.js","components/BusinessLogic.js","components/Main.js","actions/user.js","actions/escapeRooms.js","actions/escapeRoom.js","actions/modal.js","components/App.js","serviceWorker.js","index.js","stores/store.js"],"names":["logger","store","next","action","console","groupCollapsed","type","info","result","log","getState","groupEnd","middleware","reduxThunk","reduxPromiseMiddleware","user","state","arguments","length","undefined","Object","objectSpread","escapeRooms","i","push","escapeRoom","slice","findIndex","_id","concat","toConsumableArray","Component","classCallCheck","this","uniqid","name","description","output","inputComponents","outputComponents","position","top","left","estimatedCost","resources","Area","_this","possibleConstructorReturn","getPrototypeOf","call","Puzzle","puzzle","puzzleType","Prop","Lock","lockType","Event","eventType","Music","startTime","endTime","EscapeRoom","userId","details","designers","theme","minPlayers","maxPlayers","targetTime","difficulty","objective","accessibility","protanomaly","protanopia","deuteranomaly","deuteranopia","tritanomaly","tritanopia","coneMonochromacy","rodMonochromacy","largeFonts","highContrast","components","cost","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","value","isNaN","parseFloat","parseInt","err","return","newState","component","areaId","calculateCost","componentId","forEach","index","filter","inputId","outputId","indexOf","parentId","isInput","id","Modal","header","body","confirmText","confirmCallback","cancelText","cancelCallback","isOpen","confirm","text","cancel","modal","reducers","reduxifiedServices","combineReducers","usersService","users","reducer","escapeRoomsService","routing","routerReducer","Profile","handleSubmit","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","event","wrap","_context","prev","preventDefault","props","updateUser","email","password","stop","_x","apply","handleChange","setState","defineProperty","target","handleDismiss","errorMessage","handleClick","_ref2","_callee2","_context2","t0","edit","abrupt","sent","_x2","oldProps","newProps","profile","react_default","createElement","Container","fluid","Row","Col","className","src","avatar","alt","Button","block","onClick","editProfile","Form","onSubmit","FormGroup","Label","for","Input","onChange","Alert","toggle","color","Dashboard","handleToggle","e","dropdownOpen","newEscapeRoom","handleItemClick","editEscapeRoom","saveJSON","savePDF","deleteEscapeRoom","showModal","mapEscapeRoomToList","ListGroupItem","key","Dropdown","style","display","right","DropdownToggle","caret","DropdownMenu","DropdownItem","blob","Blob","JSON","stringify","saveAs","doc","jsPDF","save","ListGroup","map","EscapeRoomDesigner","saveEscapeRoom","handleNav","tab","activeTab","history","xs","md","lg","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","components_Details","updateDetails","components_Accessibility","updateAccessibility","components_Design","addComponent","removeComponent","updateComponent","addRelationship","removeRelationship","Details","placeholder","min","max","Design","handleComponentClick","stopPropagation","selected","findComponent","find","components_Pallet","components_ComponentArranger","renderTrigger","components_ComponentDetails","ComponentDnDTarget","item","classNames","isOver","canDrop","connectDropTarget","Card","CardBody","DropTarget","drop","monitor","didDrop","getItem","handleComponentDrop","moved","connect","dropTarget","isOverCurrent","shallow","itemType","getItemType","componentSource","canDrag","isDragging","beginDrag","endDrag","ComponentDnDSource","update","forceUpdate","addRef","ref","prevProps","window","addEventListener","removeEventListener","isTarget","components_ComponentDnDTarget","title","connectDragSource","class","DragSource","dragSource","componentTarget","clientOffset","getClientOffset","targetRect","ReactDOM","findDOMNode","getBoundingClientRect","y","height","x","width","AreaDnDTarget","render","_this2","CardTitle","origComponent","components_ComponentDnDSource","areaSource","AreaDnDSource","components_AreaDnDTarget","PalletItem","Pallet","components_AreaDnDSource","components_PalletItem","areaArrangerTarget","AreaModel","ComponentArranger","mapAreas","area","includes","refs","lines","array","inputComponent","react_lineto_default","from","to","borderColor","outputComponent","ComponentDetails","handleOutputChange","handlePuzzleChange","mapDetailToInput","generator","components_LockGenerator","components_PuzzleGenerator","generateFromInputs","keys","property","detail","toString","mapKeysToRow","handleOnClick","oldId","mapIDToP","properties","inputs","outputs","inputRelationships","outputRelationships","Accessibility","CustomInput","label","checked","wheelchairAccessible","motorAccessible","Login","authenticateCredentials","strategy","FormText","Link","Signup","password2","signUp","About","href","Tutorials","dist_default","api_key","process","youtubeAPIKey","playlist_id","scrolling","ProtectedRoute","localStorage","condition","Route","Redirect","redirect","location","NotFound","LockGenerator","number","Math","floor","random","amount","wordsPerString","RandomWords","exactly","sequence","directions","join","handleNumericClick","lockGenerator","generateNumericCombination","handleWordClick","generateWords","handleDirectionalClick","generateDirectionSequence","lockGen","step","PuzzleGenerator","cipher","decoder","options","words","hints","answers","crossword","CrosswordGenerator","word","hiddenWord","generateHiddenWord","riddle","riddles","answer","num2","num1","num3","num4","numbers","colour","matrix","ListCreator","items","addItem","removeItem","mapItemsToInputs","InputGroup","InputGroupAddon","InputGroupText","addonType","handleListChange","list","generateWord","handleRiddleClick","handleCipherClick","generateCipher","puzzleGenerator","components_ListCreator","BusinessLogic","credentials","queryResult","feathersClient","authenticate","services","query","total","data","token","redux","actions","login","message","create","setSelectedEscapeRoom","_callee3","response","_context3","addEscapeRoom","remove","removeEscapeRoom","_ref4","_callee4","_context4","updateEscapeRoom","_x3","escapeRoomActions","Switch","exact","components_ProtectedRoute","path","routeProps","components_Dashboard","components_EscapeRoomDesigner","components_Login","SignUp","Main","toggleProfile","isProfileOpen","jwt","authenticateJWT","populateUserFromJWT","populateEscapeRooms","accessToken","logout","_ref3","passport","verifyJWT","get","updateEscapeRooms","loading","_ref5","_callee5","_context5","patch","tooltipOpen","isLoading","hideModal","nav","inNavbar","components_Profile","LoadingOverlay_default","spinner","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","components_BusinessLogic","es_Modal","ModalHeader","ModalBody","ModalFooter","clearSelectedEscapeRoom","App","dispatch","bindActionCreators","userActionCreators","escapeRoomsActionCreators","escapeRoomActionCreators","modalActionCreators","stateProps","dispatchProps","ownProps","withRouter","Boolean","hostname","match","__webpack_require__","d","__webpack_exports__","pipline","backends","backend","HTML5Backend","TouchBackend","enableMouseEvents","preview","transition","TouchTransition","MultiBackend","feathers","configure","socketio","io","hooks","authentication","storage","rawServices","reduxifyServices","initialState","createStoreWithDevTools","devToolsExtension","createStore","applyMiddleware","middlewares","createStoreWithMiddlewares","rootReducer","configureStore","bindWithDispatch","router","react_dnd_lib","es","BrowserRouter","components_App","getServicesStatus","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.64a22a0a.chunk.js","sourcesContent":["/*\r\n A basic middleware logger\r\n See http://redux.js.org/docs/advanced/Middleware.html\r\n */\r\n\r\nconst logger = store => next => action => {\r\n    console.groupCollapsed(action.type); // eslint-disable-line no-console\r\n    console.info('dispatching', action); // eslint-disable-line no-console\r\n    const result = next(action);\r\n    console.log('next state', store.getState()); // eslint-disable-line no-console\r\n    console.groupEnd(action.type); // eslint-disable-line no-console\r\n    return result;\r\n  };\r\n  \r\n  export default logger;","// eslint no-unused-vars: 0,\r\n\r\nimport reduxThunk from 'redux-thunk';\r\nimport reduxPromiseMiddleware from 'redux-promise-middleware';\r\n// import { routerMiddleware } from 'react-router-redux';\r\n// import { browserHistory } from 'react-router';\r\nimport logger from './logger'; // eslint-disable-line no-unused-vars\r\n\r\nexport default [\r\n  reduxThunk, // Thunk middleware for Redux\r\n  reduxPromiseMiddleware(), // Resolve, reject promises with conditional optimistic updates\r\n  // routerMiddleware(browserHistory), // !! IMPORTANT for location.href changes\r\n  logger, // A basic middleware logger\r\n];","function user(state={},action){\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            return {...action.user};\r\n            \r\n        case 'LOGOUT':\r\n            return {};\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default user;","function escapeRooms(state=[],action){\r\n    let i;\r\n    switch(action.type){\r\n        case 'ADD_ESCAPE_ROOM':\r\n            state.push(action.escapeRoom);\r\n            return state.slice();\r\n            \r\n        case 'REMOVE_ESCAPE_ROOM':\r\n            i = state.findIndex(escapeRoom => escapeRoom._id === action.escapeRoom._id);\r\n            return [...state.slice(0,i),...state.slice(i+1)];\r\n            \r\n        case 'UPDATE_ESCAPE_ROOM':\r\n            i = state.findIndex(escapeRoom=>escapeRoom._id === action.escapeRoom._id);\r\n            state[i] = action.escapeRoom;\r\n            return state.slice(); \r\n            \r\n        case 'UPDATE_ESCAPE_ROOMS':\r\n            return action.escapeRooms.slice();\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default escapeRooms;","import uniqid from 'uniqid';\r\n\r\nexport default class Component {\r\n    constructor(){\r\n        this._id = uniqid();\r\n        this.name = \"\";\r\n        this.description = \"\";\r\n        this.output = \"\";\r\n        this.inputComponents = [];\r\n        this.outputComponents = [];\r\n        this.type = \"Component\";\r\n        this.position = {top:0,left:0};\r\n        this.estimatedCost = \"\";\r\n        this.resources = [];\r\n    }\r\n}","import Component from './Component';\r\nexport default class Area extends Component {\r\n    constructor(){\r\n        super();\r\n        this.type=\"Area\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Puzzle extends Component {\r\n    constructor(){\r\n        super();\r\n        this.puzzle = {};\r\n        this.puzzleType=\"Cipher\";\r\n        this.type=\"Puzzle\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Prop extends Component {\r\n    constructor(){\r\n        super();\r\n        this.type=\"Prop\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Lock extends Component {\r\n    constructor(){\r\n        super();\r\n        this.lockType=\"Numeric\";\r\n        this.type=\"Lock\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Event extends Component {\r\n    constructor(){\r\n        super();\r\n        this.eventType=\"Sound Effect\";\r\n        this.type=\"Event\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Music extends Component {\r\n    constructor(){\r\n        super();\r\n        this.startTime=\"\";\r\n        this.endTime=\"\"\r\n        this.type=\"Music\";\r\n    }   \r\n}","import { Area } from \".\";\r\nexport default class EscapeRoom {\r\n    constructor(userId){\r\n        this.userId = userId;\r\n        this.details = {\r\n            name: \"Unnamed\",\r\n            designers: \"\",\r\n            theme: \"\",\r\n            minPlayers: \"\",\r\n            maxPlayers: \"\",\r\n            targetTime: \"\",\r\n            difficulty: \"3\",\r\n            objective: \"\",\r\n            description: \"\",\r\n            estimatedCost: \"\"\r\n        }\r\n        this.accessibility = {\r\n            protanomaly: false,\r\n            protanopia: false,\r\n            deuteranomaly: false,\r\n            deuteranopia: false,\r\n            tritanomaly: false,\r\n            tritanopia: false,\r\n            coneMonochromacy: false,\r\n            rodMonochromacy: false,\r\n            largeFonts: false,\r\n            highContrast: false\r\n        }\r\n        this.components = [new Area()]\r\n    }  \r\n\r\n    static calculateCost(escapeRoom){\r\n        let components = escapeRoom.components;\r\n        let cost = 0;\r\n        for (let component of components){\r\n            let estimatedCost = component.estimatedCost;\r\n            if(!isNaN(parseFloat(estimatedCost))){\r\n                cost += parseFloat(estimatedCost);\r\n            } else if (!isNaN(parseFloat(estimatedCost))){\r\n                cost += parseInt(estimatedCost);\r\n            }\r\n        }\r\n        return cost;\r\n    }\r\n}","import EscapeRoom from '../models/EscapeRoom';\r\nfunction escapeRoom(state={},action){\r\n    let newState = {};\r\n    let i;\r\n    switch(action.type){\r\n        case 'SET_SELECTED_ESCAPE_ROOM':\r\n            return {...action.escapeRoom};\r\n        case 'CLEAR_SELECTED_ESCAPE_ROOM':\r\n            return {}\r\n        case 'UPDATE_DETAILS':\r\n            newState = {...state};\r\n            newState.details = {...newState.details, ...action.details};\r\n            return newState;\r\n        case 'UPDATE_ACCESSIBILITY':\r\n            newState = {...state};\r\n            newState.accessibility = {...newState.accessibility, ...action.accessibility};\r\n            return newState;\r\n        case 'ADD_COMPONENT':\r\n            newState = {...state};\r\n            newState.components.push(action.component);\r\n            if(action.areaId!==undefined){\r\n                i = newState.components.findIndex(component=>component._id===action.areaId);\r\n                newState.components[i].outputComponents.push(action.component._id);\r\n            }\r\n            newState.details.estimatedCost = EscapeRoom.calculateCost(newState);\r\n            return newState;\r\n        case 'REMOVE_COMPONENT':\r\n            newState = {...state};\r\n            i = newState.components.findIndex(component=>component._id===action.componentId);\r\n            newState.components = [...newState.components.slice(0,i),...newState.components.slice(i+1)]\r\n            newState.components.forEach((component,index,components)=>{\r\n                components[index].inputComponents = component.inputComponents.filter(inputId=>inputId!==action.componentId);\r\n                components[index].outputComponents = component.outputComponents.filter(outputId=>outputId!==action.componentId);\r\n            })\r\n            newState.details.estimatedCost = EscapeRoom.calculateCost(newState);\r\n            return newState;\r\n        case 'UPDATE_COMPONENT':\r\n            newState = {...state};\r\n            i = newState.components.findIndex(component=>component._id===action.component._id);\r\n            newState.components[i] = {...newState.components[i],...action.component};\r\n            if(action.areaId!=null){\r\n                newState.components.forEach((component,index,components)=>{\r\n                    if(component.type===\"Area\")\r\n                        components[index].outputComponents = component.outputComponents.filter(outputId=>outputId!==action.component._id);\r\n                });\r\n                i = newState.components.findIndex(component=>component._id===action.areaId);\r\n                if(newState.components[i].outputComponents.indexOf(action.component._id)===-1)\r\n                    newState.components[i].outputComponents.push(action.component._id);\r\n            }\r\n            newState.details.estimatedCost = EscapeRoom.calculateCost(newState);\r\n            return newState;\r\n        case 'ADD_RELATIONSHIP':\r\n            newState = {...state};\r\n            newState.components.forEach((component,index,components)=>{\r\n                if(component._id===action.parentId){\r\n                    if(action.isInput){\r\n                        if(component.inputComponents.indexOf(action.componentId)===-1)\r\n                            component.inputComponents.push(action.componentId);\r\n                    } else {\r\n                        if(component.outputComponents.indexOf(action.componentId)===-1)\r\n                            component.outputComponents.push(action.componentId);\r\n                    }\r\n                }\r\n            });\r\n            return newState;\r\n        case 'REMOVE_RELATIONSHIP':\r\n            newState = {...state};\r\n            newState.components.forEach((component,index,components)=>{\r\n                if(component._id===action.parentId){\r\n                    if(action.isInput){\r\n                        if(component.inputComponents.indexOf(action.componentId)===-1)\r\n                            component.inputComponents = component.inputComponents.filter(id=>id!==action.componentId);\r\n                    } else {\r\n                        if(component.outputComponents.indexOf(action.componentId)===-1)\r\n                            component.outputComponents = component.outputComponents.filter(id=>id!==action.componentId);\r\n                    }\r\n                }\r\n            });\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default escapeRoom;","class Modal {\r\n    constructor(header,body,confirmText,confirmCallback,cancelText,cancelCallback,isOpen=true){\r\n        this.header = header;\r\n        this.body = body;\r\n        this.confirm = {text:confirmText,action:confirmCallback}; //Converts callback to a string, because redux can't store funcs\r\n        this.cancel = {text:cancelText,action:cancelCallback};\r\n        this.isOpen = isOpen;\r\n    }\r\n}\r\n\r\nexport default Modal","import Modal from \"../models/Modal\";\r\n\r\nfunction modal(state=new Modal(\"\",\"\",\"\",()=>{},\"\",()=>{},false),action){\r\n    switch(action.type){\r\n        case 'SHOW_MODAL':\r\n            return {...action.modal,isOpen:true};\r\n        case 'HIDE_MODAL':\r\n            return new Modal(\"\",\"\",\"\",()=>{},\"\",()=>{},false)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default modal;","import { combineReducers } from 'redux';\r\nimport { routerReducer } from 'react-router-redux';\r\n\r\nimport user from './user';\r\nimport escapeRooms from './escapeRooms';\r\nimport escapeRoom from './escapeRoom';\r\nimport modal from './modal';\r\n\r\nexport default function(reduxifiedServices){\r\n    return combineReducers({\r\n        usersService: reduxifiedServices.users.reducer,\r\n        escapeRoomsService: reduxifiedServices['escape-rooms'].reducer,\r\n        routing: routerReducer,\r\n        user,\r\n        escapeRooms,\r\n        escapeRoom,\r\n        modal\r\n    })\r\n}\r\n","import React, {Component}  from 'react';\r\nimport { Container, Row, Col, Card, CardImg, CardBody,\r\n    CardTitle, Alert, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nclass Profile extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            edit: false,\r\n            errorMessage: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            _id: \"\"\r\n        };\r\n    }\r\n    //Handles login form submit event\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(this.props.updateUser)\r\n            this.props.updateUser({email:this.state.email,password:this.state.password});\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    //Handles error dismiss\r\n    handleDismiss = (event) => {\r\n        this.setState({errorMessage: \"\"});\r\n    }\r\n\r\n    handleClick = async (event) => {\r\n        event.preventDefault();\r\n        switch (event.target.id) {\r\n            case 'editButton':\r\n                this.setState({edit:true});\r\n                break;\r\n            case 'saveButton':\r\n                let user = this.props.user;\r\n                if(this.state.email===\"\"){\r\n                    this.setState({errorMessage:\"Email Required\"});\r\n                    return;\r\n                } else {\r\n                    user.email = this.state.email;\r\n                }\r\n                if(this.state.password!==\"\")\r\n                    user.password = this.state.password;\r\n                if(this.props.updateUser!==undefined){\r\n                    let response = await this.props.updateUser(user);\r\n                    if(response===true){\r\n                        this.setState({edit:false});\r\n                    } else {\r\n                        this.setState({errorMessage:\"Error, Please Try Again Later\"});\r\n                    }\r\n                }\r\n                    \r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const user = this.props.user;\r\n        this.setState({\r\n            email: user.email\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(oldProps){\r\n        const newProps = this.props;\r\n        if(oldProps.user.email !== newProps.user.email){\r\n            const user = this.props.user;\r\n            this.setState({\r\n                email: user.email,\r\n                _id: user._id\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.profile = \r\n            <Container fluid>\r\n                <Row>\r\n                    <Col>\r\n                        <img id=\"ProfileImage\" className=\"img-fluid\" src={this.props.user.avatar} alt=\"Profile Image\" />\r\n                        <p className=\"text-center\">{this.props.user.email}</p>\r\n                        <Button id=\"editButton\" block className=\"text-center\" onClick={this.handleClick}>Edit Profile</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        this.editProfile = \r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup>\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"password\">Password</Label>\r\n                            <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <Button id=\"saveButton\" onClick={this.handleClick} block>Save</Button>\r\n                        <Alert isOpen={this.state.errorMessage !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.errorMessage}</Alert>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        if(this.state.edit)\r\n            return this.editProfile;\r\n        else \r\n            return this.profile;\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Dropdown, DropdownToggle, DropdownMenu, DropdownItem , ListGroup, ListGroupItem , Button } from 'reactstrap';\r\nimport { saveAs } from 'file-saver';\r\nimport jsPDF from 'jspdf';\r\nimport Modal from '../models/Modal';\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: [false,false]\r\n        }\r\n    }\r\n    handleToggle = (i) => (e) => {\r\n        var dropdownOpen = this.state.dropdownOpen;\r\n        dropdownOpen[i] = !dropdownOpen[i];\r\n        this.setState({dropdownOpen});\r\n    }\r\n    handleClick = async (e) => {\r\n        if(this.props.newEscapeRoom)\r\n            this.props.newEscapeRoom();\r\n    }\r\n    saveJSON(escapeRoom) {\r\n        const blob = new Blob([JSON.stringify(escapeRoom)],{type:'text/plain;charset=utf-8'});\r\n        saveAs(blob, escapeRoom.details.name+\".json\");\r\n    }\r\n    savePDF(escapeRoom) {\r\n        var doc = new jsPDF();\r\n        doc.text(JSON.stringify(escapeRoom),10,10);\r\n        doc.save(escapeRoom.details.name+'.pdf');\r\n    }\r\n    handleItemClick = (i, action) => (e) => {\r\n        const escapeRoom = this.props.escapeRooms[i];\r\n        switch(action){\r\n            case 'EDIT':\r\n                if(this.props.editEscapeRoom)   \r\n                    this.props.editEscapeRoom(escapeRoom);\r\n                break;\r\n            case 'JSON':\r\n                this.saveJSON(escapeRoom);\r\n                break;\r\n            case 'PDF':\r\n                this.savePDF(escapeRoom);\r\n                break;\r\n            case 'DELETE':\r\n                if(this.props.deleteEscapeRoom)\r\n                    this.props.showModal(new Modal(\"Warning\",\"Are you sure you want to delete \"+escapeRoom.details.name+\"?\",\"Yes\",()=>{this.props.deleteEscapeRoom(escapeRoom)},\"No\",()=>{}));\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    mapEscapeRoomToList = (escapeRoom,i) => {\r\n        return (\r\n        <ListGroupItem key={i}>{escapeRoom.details.name}\r\n            <Dropdown style={{display:'inline', position: 'absolute', right:'20px'}} isOpen={this.state.dropdownOpen[i]} toggle={this.handleToggle(i)}>\r\n                <DropdownToggle caret/>\r\n                <DropdownMenu right>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'EDIT')}>Edit</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'JSON')}>Export as JSON</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'PDF')}>Export as PDF</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'DELETE')}>Delete</DropdownItem>\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        </ListGroupItem>)\r\n    };\r\n    render() {\r\n        const escapeRooms = this.props.escapeRooms;\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Button block onClick={this.handleClick}>NEW</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <ListGroup>\r\n                            {escapeRooms.map(this.mapEscapeRoomToList)}\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Dashboard;","import React, {Component}  from 'react';\r\nimport { Container, Dropdown, DropdownToggle , DropdownMenu , DropdownItem , Row, Col, Nav, NavItem, NavLink, TabContent, TabPane , Button } from 'reactstrap';\r\nimport { Details, Accessibility, Design } from './index';\r\nimport classnames from 'classnames';\r\nimport { saveAs } from 'file-saver';\r\nimport jsPDF from 'jspdf';\r\nimport '../styles/EscapeRoomDesigner.css';\r\n\r\nclass EscapeRoomDesigner extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {activeTab:'design', dropdownOpen: false};\r\n    }\r\n    saveJSON(escapeRoom) {\r\n        const blob = new Blob([JSON.stringify(escapeRoom)],{type:'text/plain;charset=utf-8'});\r\n        saveAs(blob, escapeRoom.details.name+\".json\");\r\n    }\r\n    savePDF(escapeRoom) {\r\n        var doc = new jsPDF();\r\n        doc.text(JSON.stringify(escapeRoom),10,10);\r\n        doc.save(escapeRoom.details.name+'.pdf');\r\n    }\r\n    handleClick = (action) => (e) => {\r\n        switch(action){\r\n            case 'EXIT':\r\n                if(this.props.saveEscapeRoom)\r\n                    this.props.saveEscapeRoom(this.props.escapeRoom);\r\n                break;\r\n            case 'JSON':\r\n                if(this.props.saveEscapeRoom)\r\n                    this.props.saveEscapeRoom(this.props.escapeRoom);\r\n                this.saveJSON(this.props.escapeRoom);\r\n                break;\r\n            case 'PDF':\r\n                if(this.props.saveEscapeRoom)\r\n                    this.props.saveEscapeRoom(this.props.escapeRoom);\r\n                this.savePDF(this.props.escapeRoom);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    handleToggle = (e) => {\r\n        this.setState({dropdownOpen: !this.state.dropdownOpen});\r\n    }\r\n    handleNav = (tab) => (e) => {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const escapeRoom = this.props.escapeRoom;\r\n        if(escapeRoom===undefined){\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Row className=\"save-options\">\r\n                    <Col xs=\"6\" md=\"3\" lg=\"3\"><Button block onClick={this.handleClick('EXIT')}>Save and Exit</Button></Col>\r\n                    <Col xs=\"6\" md=\"3\" lg=\"3\">\r\n                        <Dropdown block isOpen={this.state.dropdownOpen} toggle={this.handleToggle}>\r\n                            <DropdownToggle  className=\"full-width\" caret>Save and Export</DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem onClick={this.handleClick('JSON')}>Export as JSON</DropdownItem>\r\n                                <DropdownItem onClick={this.handleClick('PDF')}>Export as PDF</DropdownItem>\r\n                            </DropdownMenu>\r\n                        </Dropdown>\r\n                    </Col>\r\n                    <Col xs=\"6\"/>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Nav tabs>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'details'})}\r\n                                    onClick={this.handleNav('details')}    \r\n                                >\r\n                                    Details\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'accessibility'})}\r\n                                    onClick={this.handleNav('accessibility')}    \r\n                                >\r\n                                    Accessibility\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'design'})}\r\n                                    onClick={this.handleNav('design')}    \r\n                                >\r\n                                    Design\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <TabContent activeTab={this.state.activeTab}>\r\n                            <TabPane tabId=\"details\">\r\n                                <Details details={this.props.escapeRoom.details} updateDetails={this.props.updateDetails}/>\r\n                            </TabPane>\r\n                            <TabPane tabId=\"accessibility\">\r\n                                <Accessibility accessibility={this.props.escapeRoom.accessibility} updateAccessibility={this.props.updateAccessibility}/>\r\n                            </TabPane>\r\n                            <TabPane tabId=\"design\">\r\n                                <Design components={{components:this.props.escapeRoom.components}} showModal={this.props.showModal} accessibility={this.props.escapeRoom.accessibility} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} updateComponent={this.props.updateComponent} addRelationship={this.props.addRelationship} removeRelationship={this.props.removeRelationship}/>\r\n                            </TabPane>\r\n                        </TabContent>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default EscapeRoomDesigner;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport '../styles/details.css';\r\n\r\nclass Details extends Component {\r\n    //Changes state on input change\r\n    handleChange = (event) => { \r\n        var state = {};\r\n        state[event.target.id] = event.target.value;    \r\n        this.props.updateDetails(state);\r\n    }\r\n    render(){\r\n        return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Room Name</Label>\r\n                            <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Room Name\" value={this.props.details.name} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"designers\">Designers</Label>\r\n                            <Input type=\"text\" name=\"designers\" id=\"designers\" placeholder=\"Designer(s)\" value={this.props.details.designers} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"theme\">Theme</Label>\r\n                            <Input type=\"text\" name=\"theme\" id=\"theme\" placeholder=\"theme\" value={this.props.details.theme} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label>Players</Label>\r\n                            <Input type=\"text\" name=\"minPlayers\" id=\"minPlayers\" placeholder=\"Min\" value={this.props.details.minPlayers} onChange={this.handleChange}/>\r\n                            <Input type=\"text\" name=\"maxPlayers\" id=\"maxPlayers\" placeholder=\"Max\" value={this.props.details.maxPlayers} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"targetTime\">Target Time</Label>\r\n                            <Input type=\"text\" name=\"targetTime\" id=\"targetTime\" placeholder=\"Time\" value={this.props.details.targetTime} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"difficulty\">Difficulty</Label>\r\n                            <Input type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" id=\"difficulty\" value={this.props.details.difficulty} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </Col>\r\n                <Col>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"objective\">Objective</Label>\r\n                            <Input type=\"text\" name=\"objective\" id=\"objective\" placeholder=\"Main Objective\" value={this.props.details.objective} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"description\">Description</Label>\r\n                            <Input type=\"textarea\" name=\"description\" id=\"description\" placeholder=\"Description\" value={this.props.details.description} onChange={this.handleChange}/>\r\n                        </FormGroup>       \r\n                        <FormGroup>\r\n                            <Label for=\"estimatedCost\">Estimated Cost</Label>\r\n                            <p>{this.props.details.estimatedCost}</p>    \r\n                        </FormGroup>             \r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>)\r\n    }\r\n}\r\n\r\nexport default Details;","import React, {Component} from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Pallet, ComponentArranger, ComponentDetails } from './index';\r\n\r\nclass Design extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {selected: {}};\r\n    }\r\n    handleComponentClick = (component) => (e) => {\r\n        e.stopPropagation();\r\n        this.setState({selected:component});\r\n    }\r\n    updateComponent = (component) => {\r\n        this.props.updateComponent(component);\r\n        this.setState({selected:{...this.state.selected,...component}});\r\n    }\r\n    findComponent = (id) => {\r\n        return this.props.components.components.find(component=>component._id===id);\r\n    }\r\n    render(){\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md=\"2\">\r\n                        <Pallet/>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                        <ComponentArranger renderTrigger={JSON.stringify(this.props.components.components)} findComponent={this.findComponent} showModal={this.props.showModal} handleComponentClick={this.handleComponentClick} updateComponent={this.props.updateComponent} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship} components={this.props.components.components}/>            \r\n                    </Col>\r\n                    <Col md=\"2\">\r\n                        <ComponentDetails selected={this.state.selected} updateComponent={this.updateComponent}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Design;","import React, {Component}  from 'react';\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport { DropTarget } from 'react-dnd';\r\nimport { Puzzle, Event, Music, Lock, Prop } from '../models/index';\r\n\r\nconst Types = {\r\n    COMPONENT: 'COMPONENT'\r\n}\r\n\r\nconst componentTarget = {\r\n    drop(props,monitor,component){\r\n        if (monitor.didDrop()){\r\n            return;\r\n        }\r\n        const item = monitor.getItem();\r\n        const isInput = props.isInput;\r\n        component.handleComponentDrop(item,isInput);\r\n        return {moved:true};\r\n    }\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        isOverCurrent: monitor.isOver({shallow:true}),\r\n        canDrop: monitor.canDrop(),\r\n        itemType: monitor.getItemType()\r\n    }\r\n}\r\n\r\nclass ComponentDnDTarget extends Component {\r\n    handleComponentDrop(item,isInput=true){\r\n        var component = null;\r\n        if (item.id!==undefined){\r\n            switch(item.id){\r\n                case 'Puzzle':\r\n                    component = new Puzzle();\r\n                    break;\r\n                case 'Lock':\r\n                    component = new Lock();\r\n                    break;\r\n                case 'Event':\r\n                    component = new Event();\r\n                    break;\r\n                case 'Music':\r\n                    component = new Music();\r\n                    break;\r\n                case 'Prop':\r\n                    component = new Prop();\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            this.props.addComponent(component,this.props.component._id);\r\n        }else {\r\n            component = item;\r\n            if(component._id!==this.props.component._id)\r\n                this.props.addRelationship(component._id,this.props.component._id,isInput);\r\n        }\r\n\r\n    }\r\n    render() {\r\n        var classNames = \"hide-border\";\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames+=\" canDrop\";\r\n        } else if(this.props.isOver && !this.props.canDrop){\r\n            classNames+=\" cantDrop\";\r\n        } else if(this.props.canDrop){\r\n            classNames+=\" couldDrop\"\r\n        }\r\n        return this.props.connectDropTarget(\r\n            <div key={this.props.component._id}>\r\n                <Card className={classNames} onClick={this.props.handleComponentClick(this.props.component)}>\r\n                    <CardBody>\r\n\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DropTarget(Types.COMPONENT, componentTarget, collect)(ComponentDnDTarget);","import React, {Component} from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport ComponentDnDTarget from './ComponentDnDTarget';\r\nimport { Row, Col } from 'reactstrap'\r\nimport '../styles/Component.css';\r\nimport { ArcherElement } from 'react-archer';\r\nimport Modal from '../models/Modal';\r\n\r\n// Drag sources and drop targets only interact\r\n// if they have the same string type.\r\n// You want to keep types in a separate file with\r\n// the rest of your app's constants.\r\nconst Types = {\r\n  COMPONENT: 'COMPONENT'\r\n};\r\n\r\n/**\r\n * Specifies the drag source contract.\r\n * Only `beginDrag` function is required.\r\n */\r\nconst componentSource = {\r\n  canDrag(props) {\r\n    // You can disallow drag based on props\r\n    return true;\r\n  },\r\n\r\n  isDragging(props, monitor) {\r\n    return monitor.getItem().id === props.id;\r\n  },\r\n\r\n  beginDrag(props, monitor, component) {\r\n    // Return the data describing the dragged item\r\n    var item = {...props.component};\r\n    return item;\r\n  },\r\n\r\n  endDrag(props, monitor, component) {\r\n    if (!monitor.didDrop()) {\r\n      if((props.component!==undefined||props.component!==null)&&props.showModal)\r\n        props.showModal(new Modal(\"Warning\", \"Are you sure you want to delete this component?\",\"Yes\",component.removeComponent,\"No\",()=>{}));\r\n        return;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    // Call this function inside render()\r\n    // to let React DnD handle the drag events:\r\n    connectDragSource: connect.dragSource(),\r\n    // You can ask the monitor about the current drag state:\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nclass ComponentDnDSource extends Component{\r\n  removeComponent = ()=>{\r\n    this.props.removeComponent(this.props.component._id);\r\n  }\r\n  componentDidMount(){\r\n    if(this.props.addRef)\r\n      this.props.addRef(this.ref);\r\n  }\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.renderTrigger!=prevProps.renderTrigger)\r\n      this.forceUpdate();\r\n  }\r\n  findComponent(component){\r\n    if(this.props.findComponent!==undefined){\r\n      return this.props.findComponent(component);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  update = () => this.forceUpdate()\r\n  componentDidMount() {\r\n    window.addEventListener('click', this.update, true);\r\n    window.addEventListener('scroll', this.update, true);\r\n    window.addEventListener('resize', this.update);\r\n}\r\n  \r\ncomponentWillUnmount() {\r\n  window.removeEventListener('click', this.update);\r\n    window.removeEventListener('scroll', this.update);\r\n    window.removeEventListener('resize', this.update)\r\n}\r\n  render() {\r\n      var target;\r\n      if (this.props.isTarget){\r\n        target = (\r\n          <Row>\r\n              <Col xs=\"6\"><ComponentDnDTarget isInput={true} component={this.props.component} handleComponentClick={this.props.handleComponentClick} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/></Col>\r\n              <Col xs=\"6\"><ComponentDnDTarget isInput={false} component={this.props.component} handleComponentClick={this.props.handleComponentClick} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/></Col>\r\n          </Row>  \r\n        );\r\n      }\r\n      var style = {};\r\n      let title;\r\n      let name;\r\n      let classNames = \"component\";\r\n      if(this.props.component!==undefined){\r\n        title=this.props.component.type;\r\n        style.top = this.props.component.position.top;\r\n        style.left = this.props.component.position.left;\r\n        classNames += \" \" + this.props.component.type + \" \" + this.props.component._id;\r\n        title+= \" (\"+this.props.component._id+\")\";\r\n        name = this.props.component.name;\r\n      } \r\n      return this.props.connectDragSource(\r\n          <div className={classNames} id={this.props.component._id} style={style} onClick={this.props.handleComponentClick(this.props.component)}>\r\n            <span>{title}</span>\r\n            <span class=\"hide-overflow\">{name}</span>\r\n            {target}\r\n          </div>\r\n      )\r\n  }\r\n};\r\n\r\nexport default DragSource(Types.COMPONENT, componentSource, collect)(ComponentDnDSource);","import React, {Component}  from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Card, CardBody ,CardTitle } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport { DropTarget } from 'react-dnd';\r\nimport ComponentDnDSource from './ComponentDnDSource';\r\nimport { Puzzle, Prop, Lock, Music, Event } from '../models/index.js';\r\nimport { ArcherContainer } from 'react-archer';\r\n\r\nconst Types = {\r\n    COMPONENT: 'COMPONENT'\r\n}\r\n\r\nconst componentTarget = {\r\n    drop(props,monitor,component){\r\n        if (monitor.didDrop() || !component || typeof props.component===undefined){\r\n            return;\r\n        }\r\n        const item = monitor.getItem();\r\n\r\n        let clientOffset = monitor.getClientOffset();\r\n        let targetRect = ReactDOM.findDOMNode(component).getBoundingClientRect();\r\n        item.position = {top:(((clientOffset.y-targetRect.y)/targetRect.height)*100)+\"%\",left:(((clientOffset.x-targetRect.x)/targetRect.width)*100)+\"%\"};\r\n        component.handleComponentDrop(item);\r\n        return {moved:true};\r\n    }\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        isOverCurrent: monitor.isOver(),\r\n        canDrop: monitor.canDrop(),\r\n        itemType: monitor.getItemType()\r\n    }\r\n}\r\n\r\nclass AreaDnDTarget extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={render:true};\r\n    }\r\n    handleComponentDrop(item,isInput=false){\r\n        var component = null;\r\n        if (item.id!==undefined && item._id === undefined){\r\n            switch(item.id){\r\n                case 'Puzzle':\r\n                    component = new Puzzle();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Prop':\r\n                    component = new Prop();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Lock':\r\n                    component = new Lock();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Event':\r\n                    component = new Event();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Music':\r\n                    component = new Music();\r\n                    component.position = item.position;\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            this.props.addComponent(component,this.props.component._id);\r\n        } else {\r\n            component = item;\r\n            this.props.updateComponent(component,this.props.component._id);\r\n        }\r\n    }\r\n    render() {\r\n        var classNames = \"Area\";\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames+=\" canDrop\";\r\n        } else if(this.props.isOver && !this.props.canDrop){\r\n            classNames+=\" cantDrop\";\r\n        } else if(this.props.canDrop){\r\n            classNames+=\" couldDrop\"\r\n        }\r\n        return this.props.connectDropTarget(\r\n            <div className={this.props.component.type} key={this.props.component._id}>                \r\n                <Card className={classNames} onClick={this.props.handleComponentClick(this.props.component)}>\r\n                    <CardBody>\r\n                        <CardTitle>{this.props.component.type + \" (\" + this.props.component._id + \")\" + \" \" + this.props.component.name}</CardTitle>  \r\n                            {this.props.outputComponents.map((origComponent,i)=>{\r\n                                let component;\r\n                                component = this.props.findComponent(origComponent._id);\r\n                                return(<ComponentDnDSource addRef={this.props.addRef} key={i} renderTrigger={JSON.stringify(this.props.outputComponents)} isTarget handleComponentClick={this.props.handleComponentClick}  component={component} findComponent={this.props.findComponent} id={component.type} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/>)\r\n                            })}\r\n                    </CardBody>\r\n                </Card>   \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DropTarget(Types.COMPONENT, componentTarget, collect)(AreaDnDTarget);","import React, {Component} from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport AreaDnDTarget from './AreaDnDTarget';\r\nimport '../styles/Component.css';\r\nimport { Card } from 'reactstrap';\r\nimport Modal from '../models/Modal';\r\n\r\n// Drag sources and drop targets only interact\r\n// if they have the same string type.\r\n// You want to keep types in a separate file with\r\n// the rest of your app's constants.\r\nconst Types = {\r\n  AREA: 'AREA'\r\n};\r\n\r\n/**\r\n * Specifies the drag source contract.\r\n * Only `beginDrag` function is required.\r\n */\r\nconst areaSource = {\r\n  canDrag(props) {\r\n    // You can disallow drag based on props\r\n    return true;\r\n  },\r\n\r\n  isDragging(props, monitor) {\r\n    // If your component gets unmounted while dragged\r\n    // (like a card in Kanban board dragged between lists)\r\n    // you can implement something like this to keep its\r\n    // appearance dragged:\r\n    return monitor.getItem().id === props.id;\r\n  },\r\n\r\n  beginDrag(props, monitor, component) {\r\n    // Return the data describing the dragged item\r\n    var item = null;\r\n    if (props.id!==undefined){\r\n       item = { id: props.id };\r\n    } else {\r\n       item = { component: props.component };\r\n    }\r\n    return item;\r\n  },\r\n\r\n  endDrag(props, monitor, component) {\r\n    if (!monitor.didDrop() && component!=null) {\r\n      props.showModal(new Modal(\"Warning\", \"Are you sure you want to delete this component?\",\"Yes\",component.removeComponent,\"No\",()=>{}));\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    // Call this function inside render()\r\n    // to let React DnD handle the drag events:\r\n    connectDragSource: connect.dragSource(),\r\n    // You can ask the monitor about the current drag state:\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nclass AreaDnDSource extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state={render:true};\r\n  }\r\n  removeComponent = ()=>{\r\n    this.props.removeComponent(this.props.component._id);\r\n  }\r\n  addComponent = (component,parentId)=>{\r\n    this.props.addComponent(component,this.props.component._id);\r\n    this.props.addRelationship(component._id,parentId);\r\n  }  \r\n  componentDidUpdate(prevProps){\r\n    if(this.props.renderTrigger!=prevProps.renderTrigger)\r\n      this.forceUpdate();\r\n  }\r\n  render() {\r\n    var target;\r\n    if (this.props.isTarget){\r\n      target = (\r\n        <AreaDnDTarget renderTrigger={JSON.stringify(this.props.component)} addRef={this.props.addRef} findComponent={this.props.findComponent} handleComponentClick={this.props.handleComponentClick} outputComponents={this.props.outputComponents} component={this.props.component} showModal={this.props.showModal} addComponent={this.addComponent} updateComponent={this.props.updateComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/>\r\n      );\r\n    }\r\n    return this.props.connectDragSource(\r\n        <div onClick={this.props.handleComponentClick(this.props.component)}>\r\n          <Card className={\"component\"}>\r\n            {this.props.id}\r\n            {target}\r\n          </Card>\r\n        </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default DragSource(Types.AREA, areaSource, collect)(AreaDnDSource);","import React, {Component} from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport '../styles/Component.css';\r\n\r\n// Drag sources and drop targets only interact\r\n// if they have the same string type.\r\n// You want to keep types in a separate file with\r\n// the rest of your app's constants.\r\nconst Types = {\r\n  COMPONENT: 'COMPONENT'\r\n};\r\n\r\n/**\r\n * Specifies the drag source contract.\r\n * Only `beginDrag` function is required.\r\n */\r\nconst componentSource = {\r\n  beginDrag(props, monitor, component) {\r\n    // Return the data describing the dragged item\r\n    var item = {id: props.id}\r\n    return item;\r\n  }\r\n};\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    // Call this function inside render()\r\n    // to let React DnD handle the drag events:\r\n    connectDragSource: connect.dragSource(),\r\n    // You can ask the monitor about the current drag state:\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nclass PalletItem extends Component{\r\n  render() {\r\n      let id=this.props.id || \"\";\r\n      let classNames = id + \" \" + \"component\" + \" \" + \"pallet-item\"\r\n      return this.props.connectDragSource(\r\n          <div className={classNames} id={id} >\r\n            <span>{id}</span>\r\n          </div>\r\n      )\r\n  }\r\n};\r\n\r\nexport default DragSource(Types.COMPONENT, componentSource, collect)(PalletItem);","import React, {Component}  from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport AreaDnD from './AreaDnDSource';\r\nimport PalletItem from './PalletItem';\r\nimport '../styles/Pallet.css';\r\n\r\nclass Pallet extends Component {\r\n    handleComponentClick = (e) => {\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col>\r\n                        <h3>Pallet</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <AreaDnD id=\"Area\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <PalletItem id=\"Puzzle\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <PalletItem id=\"Prop\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <PalletItem id=\"Lock\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <PalletItem id=\"Event\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <PalletItem id=\"Music\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Pallet;","import React, {Component}  from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport '../styles/ComponentArranger.css';\r\nimport Area from './AreaDnDSource';\r\nimport AreaModel from '../models/Area';\r\nimport { DropTarget } from 'react-dnd';\r\nimport LineTo from 'react-lineto';\r\n\r\nconst Types = {\r\n    AREA: 'AREA'\r\n}\r\n\r\nconst areaArrangerTarget = {\r\n    drop(props, monitor, component){\r\n        const item = monitor.getItem();\r\n        if(item.component===undefined || item.component===null){\r\n            component.props.addComponent(new AreaModel());\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n    return {\r\n      // Call this function inside render()\r\n      // to let React DnD handle the drag events:\r\n      connectDropTarget: connect.dropTarget(),\r\n      // You can ask the monitor about the current drag state:\r\n      isOver: monitor.isOver(),\r\n      isOverCurrent: monitor.isOver({ shallow: true }),\r\n      canDrop: monitor.canDrop(),\r\n      itemType: monitor.getItemType()\r\n    };\r\n  }\r\n\r\nclass ComponentArranger extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {refs:[]}\r\n    }\r\n    mapAreas = (area,i)=>{\r\n        if(area.type==='Area'){\r\n            let outputComponents = this.props.components.filter((component)=>{\r\n                return area.outputComponents.includes(component._id);\r\n            });\r\n            return (\r\n                <Row>\r\n                    <Col key={area._id} xs=\"12\"> \r\n                        <Area renderTrigger={JSON.stringify(area)} addRef={this.addRef} isTarget findComponent={this.props.findComponent} handleComponentClick={this.props.handleComponentClick} component={area} outputComponents={outputComponents} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} updateComponent={this.props.updateComponent} addRelationship={this.props.addRelationship}/>\r\n                    </Col>\r\n                </Row>\r\n            )  \r\n        }\r\n    }\r\n    addRef = (ref)=>{\r\n        if(ref!=undefined){\r\n            this.setState({refs:[...this.state.refs,ref]});\r\n        }\r\n    }\r\n    componentDidUpdate(props,state) {\r\n        if(JSON.stringify(this.props.components)!==JSON.stringify(props.components)){\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n    update = () => this.forceUpdate()\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.update, true);\r\n        window.addEventListener('resize', this.update);\r\n    }\r\n      \r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.update);\r\n        window.removeEventListener('resize', this.update)\r\n    }\r\n\r\n    render() {\r\n        var classNames = \"row\";\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames+=\" canDrop\"\r\n        } else if (this.props.isOver){\r\n            classNames+=\" cantDrop\"\r\n        }\r\n        let lines = [];\r\n        this.props.components.forEach((component,index,array)=>{\r\n            if(component!=undefined && component.inputComponents!=undefined && component.type!=\"Area\"){\r\n                let inputComponents = component.inputComponents;\r\n                let outputComponents = component.outputComponents;\r\n                inputComponents.forEach((inputComponent,index,array)=>{\r\n                    inputComponent = this.props.findComponent(inputComponent);\r\n                    lines.push(<LineTo key={index} from={component._id} to={inputComponent._id} borderColor={\"#007bff\"}/>);\r\n                });\r\n                outputComponents.forEach((outputComponent,index,array)=>{\r\n                    outputComponent = this.props.findComponent(outputComponent);\r\n                    lines.push(<LineTo key={index} from={component._id} to={outputComponent._id} borderColor={\"#28a745\"}/>)\r\n                });\r\n            }\r\n        });\r\n        return this.props.connectDropTarget(\r\n            <div className={classNames}>\r\n                {lines}\r\n                    <Col xs=\"12\">\r\n                        <Row>\r\n                            <h3>Components</h3>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                {this.props.components.map(this.mapAreas)}\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DropTarget(Types.AREA, areaArrangerTarget,collect)(ComponentArranger);","import React, {Component}  from 'react';\r\nimport { Container, Row, Col, Input, Label, ListGroupItem, Button, ListGroup } from 'reactstrap';\r\nimport {LockGenerator,PuzzleGenerator} from './index';\r\nimport '../styles/ComponentDetails.css';\r\n\r\nclass ComponentDetails extends Component {\r\n    //Changes state on input change\r\n    handleChange = (event) => { \r\n        let state = {};\r\n        state[event.target.id] = event.target.value;  \r\n        if(event.target.id===\"puzzleType\")\r\n            state.puzzle = {}\r\n        if(event.target.id===\"lockType\")\r\n            state.output = \"\"\r\n        state._id = this.props.selected._id;  \r\n        this.props.updateComponent(state);\r\n    }\r\n    handleOutputChange = (output)=>{\r\n        this.props.updateComponent({output});\r\n    }\r\n    handlePuzzleChange = (puzzle)=>{\r\n        if(puzzle.output===undefined){\r\n            puzzle.output = \"\";\r\n        } \r\n        this.props.updateComponent({_id:this.props.selected._id,puzzle,output:puzzle.output});\r\n        this.forceUpdate();\r\n    }\r\n    mapDetailToInput = (key,i) => {\r\n        if(key==='output') {\r\n            let generator;\r\n            if(this.props.selected.type==='Lock')\r\n                generator = <LockGenerator lockType={this.props.selected.lockType} handleOutputChange={this.handleOutputChange}></LockGenerator>\r\n            else if(this.props.selected.type==='Puzzle') {\r\n                generator = <PuzzleGenerator puzzleType={this.props.selected.puzzleType} handlePuzzleChange={this.handlePuzzleChange}></PuzzleGenerator>\r\n            }\r\n            return (<Row key={i}>\r\n                <Col>\r\n                    <Label for={key}>{key}</Label>\r\n                    <Input type=\"text\" name={key} id={key} placeholder={key} value={this.props.selected[key]} onChange={this.handleChange}/>\r\n                    <Button color=\"primary\" onClick={this.generateFromInputs}>Generate From Inputs</Button>\r\n                    <br/>\r\n                    <br/>\r\n                    {generator}\r\n                    <br/>\r\n                </Col>\r\n            </Row>)\r\n        } else if (key==='lockType'){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{key}</Label>\r\n                        <Input type=\"select\" name={key} id={key} placeholder={key} value={this.props.selected[key]} onChange={this.handleChange}>\r\n                            <option>Numeric</option>\r\n                            <option>Word</option>\r\n                            <option>Directional</option>\r\n                            <option>Contactless</option>\r\n                            <option>Key</option>\r\n                        </Input>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        } else if (key==='eventType'){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{key}</Label>\r\n                        <Input type=\"select\" name={key} id={key} placeholder={key} value={this.props.selected[key]} onChange={this.handleChange}>\r\n                            <option>Sound Effect</option>\r\n                            <option>New Area</option>\r\n                            <option>Objective Complete</option>\r\n                            <option>Custom</option>\r\n                        </Input>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        } else if (key==='puzzleType'){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{key}</Label>\r\n                        <Input type=\"select\" name={key} id={key} placeholder={key} value={this.props.selected[key]} onChange={this.handleChange}>\r\n                            <option>Cipher</option>\r\n                            <option>Word</option>\r\n                            <option>Colour</option>\r\n                            <option>Hidden Word</option>\r\n                            <option>Hidden Object</option>\r\n                            <option>Riddle</option>\r\n                            <option>Custom</option>\r\n                        </Input>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        } else if (key==='puzzle'){\r\n            let component = this.props.selected;\r\n            let details = Object.keys(component[key]).map((property,index,array)=>{\r\n                let detail;\r\n                if(typeof component[key][property] === 'object')\r\n                    detail = component[key][property].toString();\r\n                else \r\n                    detail = component[key][property];\r\n                return(\r\n                <Row id={key}>\r\n                    <Col>\r\n                        <p>{\" \" + property+ \": \"+detail}</p>\r\n                    </Col>\r\n                </Row>\r\n                )\r\n            });\r\n            if(Object.keys(component[key]).length>0){\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Label>{key}</Label>\r\n                            {details}\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }else{\r\n                return null;\r\n            } \r\n        }else if(typeof this.props.selected[key] === \"string\" && key!==\"_id\" && key!==\"type\"){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{key}</Label>\r\n                        <Input type=\"text\" name={key} id={key} placeholder={key} value={this.props.selected[key]} onChange={this.handleChange}/>\r\n                    </Col>\r\n                </Row>)\r\n        }\r\n    };\r\n    mapKeysToRow = (property,index,array)=>{\r\n        \r\n    }\r\n    handleOnClick = (id,isInput)=> (e) => {\r\n        let component = {...this.props.selected};\r\n        let state = {};\r\n        state._id = component._id;\r\n        if(isInput){\r\n            state.inputComponents = component.inputComponents.filter(oldId => oldId!==id);\r\n        } else {\r\n            state.outputComponents = component.outputComponents.filter(oldId => oldId!==id);\r\n        }\r\n        this.props.updateComponent(state);\r\n    }\r\n    mapIDToP = (id,i,isInput) => {\r\n        return (\r\n            <ListGroupItem key={i}>\r\n                {id}\r\n                <Button onClick={this.handleOnClick(id,isInput)} color=\"danger\" style={{display:'inline', position: 'absolute', right:'2px', top:'0.3rem'}}>\r\n                    X\r\n                </Button>\r\n            </ListGroupItem>\r\n        )\r\n    }\r\n    \r\n    render() {\r\n        let component = this.props.selected;\r\n        let id=\"\";\r\n        let type=\"\";\r\n        let properties;\r\n        let inputs;\r\n        let outputs;\r\n        let inputRelationships;\r\n        let outputRelationships;\r\n        if(component!==undefined || component!==null){\r\n            if(component._id!=undefined)\r\n                id = \" (\"+component._id+\")\";\r\n            else \r\n                id=\"\";\r\n            properties = Object.keys(component).map(this.mapDetailToInput)\r\n            type = component.type||\"\";\r\n            if(component.type!=='Area'&&component.inputComponents!==undefined&&component.outputComponents!==undefined&&(component.inputComponents.length>0||component.outputComponents.length>0)){\r\n                inputs = component.inputComponents.map((id,i)=>this.mapIDToP(id,i,true));\r\n                outputs = component.outputComponents.map((id,i)=>this.mapIDToP(id,i,false));\r\n                inputRelationships = (\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>Inputs</h4>\r\n                            <ListGroup>\r\n                                {inputs}\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n                outputRelationships = (\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>Outputs</h4>\r\n                            <ListGroup>\r\n                                {outputs}\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            }\r\n        }\r\n        return (\r\n            <Container fluid className=\"container-fluid component-details\">\r\n                <Row>\r\n                    <Col>\r\n                        <h3>Details</h3>\r\n                        <h4>{type + id}</h4>\r\n                    </Col>\r\n                </Row>\r\n                {properties}\r\n                {inputRelationships}\r\n                {outputRelationships}\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ComponentDetails;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Card, CustomInput } from 'reactstrap';\r\nimport '../styles/accessibility.css';\r\n\r\nclass Accessibility extends Component {\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        var state = {};\r\n        state[event.target.id] = event.target.value;    \r\n        this.props.updateAccessibility(state);\r\n    }\r\n    render(){\r\n        return (\r\n            <Container fluid className=\"accessibility\">\r\n                <Row>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 className=\"text-center\">Visual Accessibility</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h2>Colour Blindness</h2>\r\n                                <p>\r\n                                    Please select the types of colour blindness your design must take into account\r\n                                </p>\r\n                            </Col>\r\n                            <Col>\r\n                                <h2>Other</h2>\r\n                                <p>\r\n                                    These are options to indicate restrictions on the design related to visual impairments such as blindness \r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card>\r\n                                   <CustomInput type=\"checkbox\" name=\"protanomaly\" id=\"protanomaly\" label=\"Protanomaly\" checked={this.props.accessibility.protanomaly} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"protanopia\" id=\"protanopia\" label=\"Protanopia\" checked={this.props.accessibility.protanopia} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"deuteranomaly\" id=\"deuteranomaly\" label=\"Deuteranomaly\" checked={this.props.accessibility.deuteranomaly} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"deuteranopia\" id=\"deuteranopia\" label=\"Deuteranopia\" checked={this.props.accessibility.deuteranopia} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"tritanomaly\" id=\"tritanomaly\" label=\"Tritanomaly\" checked={this.props.accessibility.tritanomaly} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"tritanopia\" id=\"tritanopia\" label=\"Tritanopia\" checked={this.props.accessibility.tritanopia} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"coneMonochromacy\" id=\"coneMonochromacy\" label=\"Cone Monochromacy\" checked={this.props.accessibility.coneMonochromacy} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"rodMonochromacy\" id=\"rodMonochromacy\" label=\"Rod Monochromacy\" checked={this.props.accessibility.rodMonochromacy} onChange={this.handleChange}/>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col>\r\n                                <Card>\r\n                                   <CustomInput type=\"checkbox\" name=\"largeFonts\" id=\"largeFonts\" label=\"Large Fonts\" value={this.props.accessibility.largeFonts} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"highContrast\" id=\"highContrast\" label=\"High Contrast\" value={this.props.accessibility.highContrast} onChange={this.handleChange}/>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 className=\"text-center\">Physical Accessibility</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <p>\r\n                                    These options are to indicate restrictions on the design related to physical impairments for example wheelchair accessibility and motor functions\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card>\r\n                                   <CustomInput type=\"checkbox\" name=\"Wheelchair Accessible\" id=\"heelchairAccessible\" label=\"wheelchairAccessible\" value={this.props.accessibility.wheelchairAccessible} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"motorAccessible\" id=\"motorAccessible\" label=\"Accessible for players with motor function issues\" value={this.props.accessibility.motorAccessible} onChange={this.handleChange}/>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <p>\r\n                            These options are designed to indicate the attempted accessibility of your design. These options will flag puzzles in your design that do not meet these restrictions\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Accessibility;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Alert, Button, Form, FormGroup, Label, Input, FormText} from 'reactstrap';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            errorMessage: \"\"\r\n        }\r\n    }\r\n\r\n    //Handles login form submit event\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        //Authenticate credentials \r\n        if(this.props.authenticateCredentials){\r\n            var err = await this.props.authenticateCredentials({strategy:'local',email:this.state.email,password:this.state.password});\r\n            this.setState({errorMessage:err});\r\n        }\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    //Handles error dismiss\r\n    handleDismiss = (event) => {\r\n        this.setState({errorMessage: \"\"});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login full-container verticaly-center-content\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup>\r\n                                    <Label for=\"email\">Email</Label>\r\n                                    <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"password\">Password</Label>\r\n                                    <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <Button>Login</Button>\r\n                                <FormText>\r\n                                    Don't have an account? Sign Up <Link to=\"/signup\">Here</Link>\r\n                                </FormText>\r\n                                <Alert isOpen={this.state.errorMessage !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.errorMessage}</Alert>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Alert, Button, Form, FormGroup, Label, Input, FormText} from 'reactstrap';\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            password2:\"\",\r\n            errorMessage: \"\"\r\n        }\r\n    }\r\n\r\n    //Handles login form submit event\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(this.props.password!=this.props.password2){\r\n            this.setState({errorMessage:\"Passwords Must Match\"});\r\n        }\r\n        if(this.props.signUp){\r\n            let err = await this.props.signUp({email:this.state.email,password:this.state.password});\r\n            this.setState({errorMessage:err});\r\n        }\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        },()=>{\r\n            if(this.state.password!=\"\"&&this.state.password!=this.state.password2){\r\n                this.setState({errorMessage:\"Passwords Must Match\"});\r\n            } else {\r\n                this.setState({errorMessage:\"\"});\r\n            }\r\n        });\r\n    }\r\n\r\n    //Handles error dismiss\r\n    handleDismiss = (event) => {\r\n        this.setState({errorMessage: \"\"});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sign-up full-container verticaly-center-content\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup>\r\n                                    <Label for=\"email\">Email</Label>\r\n                                    <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"password\">Password</Label>\r\n                                    <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"password2\">Re-Type Password</Label>\r\n                                    <Input type=\"password\" name=\"password2\" id=\"password2\" value={this.state.password2} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <Button>Sign Up</Button>\r\n                                <FormText>\r\n                                    Have an account? Log In <Link to=\"/login\">Here</Link>\r\n                                </FormText>\r\n                                <Alert isOpen={this.state.errorMessage !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.errorMessage}</Alert>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Signup;","import React, {Component}  from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col>\r\n                        <p>\r\n                            This is my honours project for BsC(Hons) Computing: Application Software Development at Robert Gordon University\r\n                            This is a web app for designing an escape room using drag and drop components\r\n                        </p>       \r\n                    </Col>\r\n                    <Col>\r\n                        <ul>\r\n                            <li><a href=\"https://github.com/AldoAbdn/Escape-Room-Generator/\">Github Repo</a></li>\r\n                            <li><a href=\"https://ninjamock.com/s/KCMW2Tx\">Wireframe</a></li>\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default About;","import React, {Component}  from 'react';\r\nimport YouTubePlaylist from 'react-youtube-playlist';\r\n\r\nclass Tutorials extends Component {\r\n    render() {\r\n        return (\r\n            <YouTubePlaylist\r\n                width={'85%'}\r\n                height={'100%'}\r\n                api_key={process.env.youtubeAPIKey}\r\n                playlist_id=\"PLWRRwFEmEuDKX5sobzWeb50xD14cpfkk3\"\r\n                scrolling={true}\r\n            />\r\n        )\r\n    }\r\n};\r\n\r\nexport default Tutorials;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass ProtectedRoute extends Component {\r\n    render(){\r\n        if (window.localStorage.getItem('feathers-jwt')){\r\n            if(this.props.condition!==undefined){\r\n                if(!this.props.condition){\r\n                    return(<Redirect to={this.props.redirect} state={this.props.location}/>)\r\n                } else {\r\n                    return (<Route {...this.props}/>)\r\n                }\r\n            } else {\r\n                return (<Route {...this.props}/>)\r\n            }\r\n        } else {\r\n            return (<Redirect to='/login' state={this.props.location}/>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default ProtectedRoute;","import React, {Component}  from 'react';\r\nimport { Container, Row } from 'reactstrap';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <h1>404 Page Not Found</h1>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default NotFound;","import RandomWords from 'random-words';\r\n\r\nclass LockGenerator {\r\n    generateNumericCombination(length){\r\n        let number = \"\";\r\n        for(let i = 0 ; i<length; i++){\r\n            number += parseInt(Math.floor(Math.random()*9));\r\n        }\r\n        return number;\r\n    }\r\n\r\n    generateWords(amount=1,wordsPerString=1){\r\n        let words = RandomWords({min:amount,max:amount,exactly:amount,wordsPerString:wordsPerString});\r\n        return words.slice(0,amount);\r\n    }\r\n\r\n    generateDirectionSequence(length){\r\n        let sequence = [];\r\n        let directions = [\"UP\",\"DOWN\",\"LEFT\",\"RIGHT\"];\r\n        let number;\r\n        for(let i = 0 ; i<length; i++){\r\n            number = Math.floor(Math.random()*3);\r\n            sequence.push(directions[number]);\r\n        }\r\n        return sequence.join(',');\r\n    }\r\n}\r\n\r\nexport default LockGenerator;","import React, {Component}  from 'react';\r\nimport {Row,Col,Button,Input} from 'reactstrap'\r\nimport lockGen from '../generators/lock';\r\n\r\nclass LockGenerator extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={length:1,wordsPerString:1}\r\n        this.lockGenerator = new lockGen();\r\n    }\r\n\r\n    handleChange = (event) => { \r\n        let state = {};\r\n        state[event.target.name] = event.target.value;  \r\n        this.setState(state);\r\n    }\r\n\r\n    handleNumericClick = (e)=>{\r\n        let output = this.lockGenerator.generateNumericCombination(this.state.length);\r\n        this.props.handleOutputChange(output);\r\n    }\r\n\r\n    handleWordClick = (e) => {\r\n        let output = this.lockGenerator.generateWords(this.state.length,this.state.wordsPerString);\r\n        this.props.handleOutputChange(output);\r\n    }\r\n\r\n    handleDirectionalClick = (e) => {\r\n        let output = this.lockGenerator.generateDirectionSequence(this.state.length);\r\n        this.props.handleOutputChange(output);\r\n    }\r\n\r\n    render() {\r\n        switch(this.props.lockType){\r\n            case 'Numeric':\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Input name=\"length\" placeholder=\"length\" type=\"number\" step=\"1\" min=\"1\" value={this.state.length} onChange={this.handleChange}/>\r\n                            <Button block onClick={this.handleNumericClick} color=\"primary\">Generate Random Number</Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            case 'Word':\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Input name=\"length\" placeholder=\"length\" type=\"number\" step=\"1\" min=\"1\" value={this.state.length} onChange={this.handleChange}/>\r\n                            <Input name=\"wordsPerString\" placeholder=\"words per string\" type=\"number\" step=\"1\" min=\"1\" value={this.state.wordsPerString} onChange={this.handleChange}/>\r\n                            <Button block onClick={this.handleWordClick} color=\"primary\">Generate Words</Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            case 'Directional':\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Input name=\"length\" placeholder=\"length\" type=\"number\" step=\"1\" min=\"1\" value={this.state.length} onChange={this.handleChange}/>\r\n                            <Button block onClick={this.handleDirectionalClick} color=\"primary\">Generate Directional Sequence</Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            default:\r\n                return null;\r\n            \r\n        }\r\n    }\r\n};\r\n\r\nexport default LockGenerator;","import CrosswordGenerator from 'cwg';\r\nimport riddles from './riddle.json';\r\n\r\nclass PuzzleGenerator {\r\n    generateCipher(type=\"pigpen\"){\r\n        switch(type){\r\n            case 'pigpen':\r\n                return {cipher:\"/images/ciphers/pigpen/cipher.jpg\",decoder:\"/images/ciphers/pigpen/cipher.jpg\"}\r\n        }\r\n    }\r\n\r\n    generateWord(type=\"crossword\",options) {\r\n        switch(type){\r\n            case 'crossword':\r\n                return {\r\n                    type:'crossword',\r\n                    output:\"\",\r\n                    words:options.words,\r\n                    hints:options.hints,\r\n                    answers:options.answers,\r\n                    crossword:CrosswordGenerator(options.words)\r\n                }\r\n            case 'hidden':\r\n                return {\r\n                    type:'hidden',\r\n                    output:options.word,\r\n                    word: options.word,\r\n                    words: options.words,\r\n                    hints: options.hints,\r\n                    answers: options.answers,\r\n                    hiddenWord: this.generateHiddenWord(options.word,options.words,options.hints,options.answers)\r\n                }\r\n            case 'riddle':\r\n                let riddle = riddles[Math.floor(Math.random()*riddles.length)];\r\n                return {type:'riddle',output:riddle.answer,riddle};\r\n        }\r\n    }\r\n\r\n    generateColour(){\r\n        let num1 = Math.floor(Math.random()*4)+1;\r\n        let num2;\r\n        while(num2!=num1){\r\n            num2 = Math.floor(Math.random()*4)+1;\r\n        }\r\n        let num3 = num1 + num2;\r\n        let num4 = Math.floor(Math.random()*4)+1;\r\n        let numbers = [{number:num1,colour:'red'},{number:num2,colour:'blue'},{number:num3,colour:'purple'},{number:num4,colour:'green'}];\r\n        return {\r\n            answer: num1.toString() + num2.toString() + num3.toString() + num4.toString(),\r\n            numbers\r\n        }\r\n    }\r\n\r\n    generateHiddenWord(word,words){\r\n        let matrix = [];\r\n        for (let i=0;i<words.length;i++){\r\n            matrix.push(words.indexOf(word[i]));\r\n        }\r\n    }\r\n}\r\n\r\nexport default PuzzleGenerator;","import React, {Component}  from 'react';\r\nimport {Row, Col, Button, Input, InputGroup, InputGroupAddon, InputGroupText} from 'reactstrap';\r\n\r\nclass ListCreator extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {items:[\"\"]};\r\n    }\r\n\r\n    handleChange = (event) => { \r\n        let index = event.target.id;\r\n        let items = [...this.state.items];\r\n        items[index] = event.target.value;\r\n        this.setState({items},()=>{\r\n            this.props.handleChange(this.state.items);\r\n        });\r\n    }\r\n\r\n    addItem =  (e) => {\r\n        this.setState({items:this.state.items.push(\"\")})\r\n    }\r\n\r\n    removeItem = (index) => (e) => {\r\n        this.setState({items:[...this.state.items.slice(0,index),...this.state.items.slice(index)]});\r\n    }\r\n    \r\n    mapItemsToInputs = (item,index,array)=>{\r\n        return (\r\n            <InputGroup>\r\n                <Input type=\"text\" id={index} onChange={this.handleChange}/>\r\n                <InputGroupAddon>\r\n                    <InputGroupText onClick={this.removeItem(index)} addonType=\"append\">\r\n                        delete\r\n                    </InputGroupText>\r\n                </InputGroupAddon>\r\n            </InputGroup>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let items = this.state.items;\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    <Button onClick={this.addItem}>Add Item</Button>\r\n                    {items}\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ListCreator;","import React, {Component}  from 'react';\r\nimport {Row,Col,Button,Input} from 'reactstrap'\r\nimport puzzleGenerator from '../generators/puzzle';\r\nimport ListCreator from '../components/ListCreator';\r\n\r\nclass PuzzleGenerator extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {word:\"\",words:[],hints:[],answers:[],cipher:\"pigpen\"};\r\n        this.PuzzleGenerator = new puzzleGenerator();\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => { \r\n        let state = {};\r\n        state[event.target.id] = event.target.value;  \r\n        state._id = this.props.selected._id;  \r\n        this.props.updateComponent(state);\r\n    }\r\n\r\n    handleListChange = (key) => (list) => {\r\n        this.setState({key:list});\r\n    }\r\n\r\n    handleWordClick = (e) => {\r\n        let options = {...this.state};\r\n        this.props.handlePuzzleChange(this.PuzzleGenerator.generateWord('hidden',options))\r\n    }\r\n\r\n    handleRiddleClick = (e) => {\r\n        this.props.handlePuzzleChange(this.PuzzleGenerator.generateWord('riddle'))\r\n    }\r\n\r\n    handleCipherClick = (e) => {\r\n        this.props.handlePuzzleChange(this.PuzzleGenerator.generateCipher(this.state.cipher))\r\n    }\r\n\r\n    render() {\r\n        switch(this.props.puzzleType){\r\n            case 'Hidden Word':\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Input type=\"text\" name='hiddenWord' id='hiddenWord' placeholder='hidden word' value={this.state.word} onChange={this.handleChange}></Input>\r\n                            <ListCreator handleChange={this.handleListChange('words')}/>\r\n                            <ListCreator handleChange={this.handleListChange('hints')}/>\r\n                            <ListCreator handleChange={this.handleListChange('answers')}/>\r\n                            <Button block onClick={this.handleWordClick} color=\"primary\">Generate Hidden Word</Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            case 'Riddle':\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Button block onClick={this.handleRiddleClick} color=\"primary\">Generate Random Riddle</Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            case 'Cipher':\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Input type=\"select\" name=\"cipher\" id=\"cipher\" placeholder=\"cipher\" value={this.state.cipher} onChange={this.handleChange}>\r\n                                <option>pigpen</option>\r\n                            </Input>\r\n                            <Button block onClick={this.handleCipherClick} color=\"primary\">Generate Cipher</Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            default:\r\n                return null;\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport default PuzzleGenerator;","import React, {Component}  from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\n//Components\r\nimport { Dashboard, EscapeRoomDesigner, Login, Signup, Tutorials, About, ProtectedRoute, Profile, NotFound } from '../components/index.js';\r\nimport EscapeRoom from '../models/EscapeRoom.js';\r\n/**\r\n * Business logic of app \r\n * handles creating and updating of data \r\n * handles navigation \r\n * @class\r\n * @author Alistair Quinn\r\n */\r\nclass BusinessLogic extends Component {\r\n    /**\r\n     * Main construcutor\r\n     * handles initialising state\r\n     * @constructor\r\n     */\r\n    constructor(){\r\n        super();\r\n        this.state = {profile:null};\r\n    }\r\n    /**\r\n     * Authenticates login credentials \r\n     * @function\r\n     * @param {Object} credentials \r\n     */\r\n    authenticateCredentials = async(credentials)=>{\r\n        try {\r\n            await this.props.feathersClient.authenticate(credentials);\r\n            let queryResult = await this.props.services.users.find({query:{email:credentials.email}});\r\n            if(queryResult.action.type.includes('FULFILLED')&&queryResult.value.total>0){\r\n                var user = queryResult.value.data[0];\r\n                user.token = window.localStorage.getItem('feathers-jwt');\r\n                this.props.redux.actions.user.login(user);\r\n                this.props.history.push('/dashboard');\r\n            } else {\r\n                this.setState({})\r\n            }\r\n        } catch(err){\r\n            return err.message;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a new user \r\n     * @function\r\n     * @param {Object} credentials \r\n     */\r\n    signUp = async(credentials)=>{\r\n        //Create a new user \r\n        try{\r\n            await this.props.services.users.create(credentials);\r\n            //Authenticate with feathersjs\r\n            await this.props.feathersClient.authenticate({strategy:'local',email:credentials.email,password:credentials.password});\r\n            //Get User Details and Update Redux Store\r\n            let queryResult = await this.props.services.users.find({query:{email:credentials.email}});\r\n            if(queryResult.action.type.includes('FULFILLED')){\r\n                var user = queryResult.value.data[0];\r\n                user.token = window.localStorage.getItem('feathers-jwt');\r\n                this.props.redux.actions.user.login(user);\r\n                this.props.history.push('/dashboard');\r\n            }\r\n        } catch(error){\r\n            return error.message;\r\n        }\r\n    }\r\n    /**\r\n     * Opens escape room designer\r\n     * @function\r\n     * @param {EscapeRoom} escapeRoom\r\n     */\r\n    editEscapeRoom = (escapeRoom) => {\r\n        this.props.redux.actions.escapeRoom.setSelectedEscapeRoom(escapeRoom);\r\n        this.props.history.push('/designer');\r\n    }\r\n    /**\r\n     * Creates a new escape room \r\n     * then opens designer\r\n     * @function\r\n     */\r\n    newEscapeRoom = async() => {\r\n        const userId = this.props.redux.state.user._id;\r\n        const newEscapeRoom = new EscapeRoom(userId);\r\n        let response = await this.props.services['escape-rooms'].create(newEscapeRoom)\r\n        if(response.action.type.includes('FULFILLED')){\r\n            const escapeRoom = response.value;\r\n            if (escapeRoom!==null){\r\n                this.props.redux.actions.escapeRooms.addEscapeRoom(escapeRoom);\r\n                this.props.redux.actions.escapeRoom.setSelectedEscapeRoom(escapeRoom);\r\n                this.props.history.push('/designer');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Deletes an escape room\r\n     * @function\r\n     * @param {EscapeRoom} escapeRoom\r\n     */\r\n    deleteEscapeRoom = (escapeRoom) => {\r\n        this.props.services['escape-rooms'].remove(escapeRoom._id);\r\n        this.props.redux.actions.escapeRooms.removeEscapeRoom(escapeRoom);\r\n    }\r\n\r\n    /**\r\n     * Saves an escape room\r\n     * @function\r\n     * @param {EscapeRoom} escapeRoom\r\n     */\r\n    saveEscapeRoom = async(escapeRoom) => {\r\n        if(escapeRoom._id!==undefined){\r\n            escapeRoom.estimatedCost = EscapeRoom.calculateCost(escapeRoom);\r\n            await this.props.services['escape-rooms'].update(escapeRoom._id,escapeRoom);\r\n            await this.props.redux.actions.escapeRooms.updateEscapeRoom(escapeRoom);\r\n        }\r\n        this.props.history.push('/');\r\n    }\r\n    /**\r\n     * React lifecycle method\r\n     * Renders navigation \r\n     * @function\r\n     */\r\n    render() {\r\n        const escapeRooms = this.props.redux.state.escapeRooms;\r\n        const escapeRoom = this.props.redux.state.escapeRoom;\r\n        const escapeRoomActions = this.props.redux.actions.escapeRoom;\r\n        const user = this.props.redux.state.user;\r\n        const showModal = this.props.redux.actions.modal.showModal;\r\n        return (\r\n            <Switch>\r\n                <Redirect exact from=\"/\" to=\"dashboard\"/>\r\n                <ProtectedRoute path=\"/dashboard\" render={(routeProps) => (<Dashboard escapeRooms={escapeRooms} showModal={showModal} editEscapeRoom={this.editEscapeRoom} newEscapeRoom={this.newEscapeRoom} deleteEscapeRoom={this.deleteEscapeRoom}/>)}/>\r\n                <ProtectedRoute path=\"/designer\" condition={Object.keys(escapeRoom).length > 0 &&escapeRoom!==undefined} redirect={'/'} render={(routeProps) =>(<EscapeRoomDesigner showModal={showModal} escapeRoom={escapeRoom} saveEscapeRoom={this.saveEscapeRoom} updateDetails={escapeRoomActions.updateDetails} updateAccessibility={escapeRoomActions.updateAccessibility} addComponent={escapeRoomActions.addComponent} removeComponent={escapeRoomActions.removeComponent} updateComponent={escapeRoomActions.updateComponent} addRelationship={escapeRoomActions.addRelationship} removeRelationship={escapeRoomActions.removeRelationship}/>)}/>\r\n                <Route path=\"/login\" render={(routeProps) => (<Login authenticateCredentials={this.authenticateCredentials}/>)}/>\r\n                <Route path=\"/signup\" render={(routeProps) => (<Signup signUp={this.signUp}/>)}/>\r\n                <Route path=\"/about\" component={About}/>\r\n                <Route path=\"/tutorials\" component={Tutorials}/>\r\n                <Route component={NotFound}/>\r\n            </Switch> \r\n        )\r\n    }\r\n};\r\n\r\nexport default BusinessLogic;","import React, {Component}  from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Navbar, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem, NavLink, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport Profile from '../components/Profile';\r\nimport '../styles/Main.css';\r\n\r\n/**\r\n * Defines main layout of app \r\n * Handles re-authentication of logged in user \r\n * Renders business logic \r\n * @class Main \r\n * @author Alistair Quinn\r\n */\r\nimport BusinessLogic from './BusinessLogic.js';\r\nclass Main extends Component {\r\n    /**\r\n     * Main constructor to set initial state\r\n     * @constructor\r\n     */\r\n    constructor(){\r\n        super();\r\n        this.state = {profile:false, isProfileOpen:false,tooltipOpen:false, isOpen:false};\r\n    }\r\n\r\n    /**\r\n     * Toggles for bootstrap\r\n     */\r\n    toggle=()=>{\r\n        this.setState({isOpen:!this.state.isOpen});\r\n    }\r\n    toggleProfile=()=>{\r\n        this.setState({isProfileOpen:!this.state.isProfileOpen});\r\n    }\r\n\r\n    /**\r\n     * React lifecycle method\r\n     * Updates profile if user has changed\r\n     * @function\r\n     * @param {Object} prevProps \r\n     */\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.redux.state.user.email!==this.props.redux.state.user.email){\r\n            this.populateEscapeRooms(this.props.redux.state.user._id);\r\n            if(this.props.redux.state.user.email !== undefined){\r\n                this.setState({profile:true});\r\n            } else {\r\n                this.setState({profile:false});\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * React lifecycle method \r\n     * Updates profile is logged in\r\n     * @function\r\n     */\r\n    componentDidMount() {\r\n        if (window.localStorage.getItem('feathers-jwt') && this.props.redux.state.user.email!==undefined){\r\n            this.setState({profile:true});\r\n        } else if (window.localStorage.getItem('feathers-jwt') && this.props.redux.state.user.email===undefined){\r\n            this.authenticate();\r\n        }\r\n    }\r\n    /**\r\n     * Authentication\r\n     * @function\r\n     */\r\n    authenticate = async() => {\r\n        //Authenticates JWT and then populates user/escapeRooms\r\n        let jwt = await this.authenticateJWT();\r\n        let user = await this.populateUserFromJWT(jwt);\r\n        if(user!=null)\r\n            await this.populateEscapeRooms(user._id);\r\n    }\r\n    /**\r\n     * Authenticates JWT \r\n     * @function \r\n     * @returns string\r\n     */\r\n    authenticateJWT = async() => {\r\n        try {\r\n            let response = await this.props.feathersClient.authenticate();\r\n            return response.accessToken;\r\n        } catch(error) {\r\n            this.logout();\r\n        }\r\n    }\r\n    /**\r\n     * Populates user from a jwt\r\n     * @function\r\n     * @param {String} jwt \r\n     * @returns {Object}\r\n     */\r\n    populateUserFromJWT = async(jwt) => {\r\n        if(jwt===undefined||jwt===null||jwt===\"\"){\r\n            this.setState({profile:false});\r\n            return null;\r\n        }\r\n        let response = await this.props.feathersClient.passport.verifyJWT(jwt);\r\n        response = await this.props.services.users.get(response.userId);\r\n        var user = response.value;\r\n        if(user.email===undefined||user.email===\"\"){\r\n            this.setState({profile:false});\r\n            return null;\r\n        }\r\n        user.token = window.localStorage.getItem('feathers-jwt');\r\n        this.props.redux.actions.user.login(user);\r\n        this.setState({profile:true});\r\n        return user;\r\n    }\r\n    /**\r\n     * Popultes escape rooms by user ID\r\n     * @function\r\n     * @param {String} userId\r\n     * @returns {Array}\r\n     */\r\n    populateEscapeRooms = async (userId) => {\r\n        //Get User Details and Update Redux Store\r\n        if (userId !== null && userId !== undefined){\r\n            let queryResult = await this.props.services['escape-rooms'].find({query:{userId:userId}});\r\n            if(queryResult.action.type.includes('FULFILLED')){\r\n                const escapeRooms = queryResult.value.data;\r\n                if (escapeRooms!==null && escapeRooms!==undefined)\r\n                    this.props.redux.actions.escapeRooms.updateEscapeRooms(escapeRooms);\r\n                    this.setState({loading:false});\r\n                }\r\n        }\r\n    }\r\n    /**\r\n     * Logs out user, tidys up\r\n     * @function\r\n     */\r\n    logout = () => {\r\n        window.localStorage.removeItem('feathers-jwt');\r\n        this.setState({profile:null});\r\n        this.props.redux.actions.user.logout();\r\n        this.props.history.push('/');\r\n    }\r\n    /**\r\n     * Updates users details \r\n     * @function\r\n     * @param {Object} update\r\n     */\r\n    updateUser = async (update) => {\r\n        try{\r\n            const user = this.props.redux.state.user;\r\n            let response = await this.props.services.users.patch(user._id,update);\r\n            this.props.redux.actions.user.login(response.value);\r\n            return true;\r\n        }catch(error){\r\n            return error.message;\r\n        }\r\n    }\r\n    /**\r\n     * React lifecycle method \r\n     * Renders main layout\r\n     * @function\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        const loading = this.state.loading || this.props.redux.state.usersService.isLoading || this.props.redux.state.escapeRoomsService.isLoading;\r\n        const modal = this.props.redux.state.modal;\r\n        const hideModal = this.props.redux.actions.modal.hideModal;\r\n        let user = this.props.redux.state.user;\r\n        let profile;\r\n        if(this.state.profile){\r\n            profile =                                 \r\n            <Dropdown isOpen={this.state.isProfileOpen} toggle={this.toggleProfile} nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                Profile\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                    <Profile user={user} updateUser={this.updateUser}/>\r\n                    <Button id=\"LogoutButton\" onClick={this.logout} block>Logout</Button>\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        } else {\r\n            profile = null;\r\n        }\r\n        return (\r\n            <div>   \r\n                <LoadingOverlay className={'loading-overlay'} active={loading} spinner>       \r\n                    <header>\r\n                        <Navbar color=\"light\" light expand=\"md\">\r\n                            <NavbarBrand href=\"/\">The Escape Room Generator V1.1.0</NavbarBrand>\r\n                            <NavbarToggler onClick={this.toggle} />\r\n                            <Collapse isOpen={this.state.isOpen} navbar>\r\n                                <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <NavLink href=\"/\">Survey</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink href=\"https://github.com/AldoAbdn/Escape-Room-Generator\">GitHub</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <Link className=\"nav-link\" to=\"/tutorials\">Tutorials</Link>\r\n                                </NavItem>\r\n                                {profile}\r\n                                </Nav>\r\n                            </Collapse>\r\n                        </Navbar>\r\n                    </header>\r\n                    <main>\r\n                        <BusinessLogic history={this.props.history} feathersClient={this.props.feathersClient} redux={this.props.redux} services={this.props.services}/>\r\n                    </main>\r\n                </LoadingOverlay>\r\n                <Modal isOpen={modal.isOpen} >\r\n                    <ModalHeader>{modal.header}</ModalHeader>\r\n                    <ModalBody>\r\n                        {modal.body}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"success\" onClick={()=>{\r\n                            modal.confirm.action();\r\n                            hideModal();\r\n                        }}>{modal.confirm.text}</Button>\r\n                        <Button color=\"danger\" onClick={()=>{\r\n                            modal.cancel.action();\r\n                            hideModal();\r\n                        }}>{modal.cancel.text}</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Main;","export function login(user) {\r\n    return {\r\n        type: 'LOGIN', user\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return {\r\n        type: 'LOGOUT'\r\n    }\r\n}\r\n\r\n","export function addEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'ADD_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function removeEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'REMOVE_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function updateEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'UPDATE_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function updateEscapeRooms(escapeRooms){\r\n    return {\r\n        type: 'UPDATE_ESCAPE_ROOMS',\r\n        escapeRooms\r\n    }\r\n}","export function setSelectedEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'SET_SELECTED_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function clearSelectedEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'CLEAR_SELECTED_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function updateDetails(details){\r\n    return {\r\n        type: 'UPDATE_DETAILS',\r\n        details\r\n    }\r\n}\r\n\r\nexport function updateAccessibility(accessibility){\r\n    return {\r\n        type: 'UPDATE_ACCESSIBILITY',\r\n        accessibility\r\n    }\r\n}\r\n\r\nexport function addComponent(component, areaId){\r\n    return {\r\n        type: 'ADD_COMPONENT',\r\n        component,\r\n        areaId\r\n    }\r\n}\r\n\r\nexport function removeComponent(componentId){\r\n    return {\r\n        type: 'REMOVE_COMPONENT',\r\n        componentId\r\n    }\r\n}\r\n\r\nexport function updateComponent(component,areaId){\r\n    return {\r\n        type: 'UPDATE_COMPONENT',\r\n        component,\r\n        areaId\r\n    }\r\n}\r\n\r\nexport function addRelationship(componentId,parentId,isInput){\r\n    return {\r\n        type: 'ADD_RELATIONSHIP',\r\n        componentId,\r\n        parentId,\r\n        isInput\r\n    }\r\n}\r\n\r\nexport function removeRelationship(componentId,parentId,isInput){\r\n    return {\r\n        type: 'REMOVE_RELATIONSHIP',\r\n        componentId,\r\n        parentId,\r\n        isInput\r\n    }\r\n}\r\n\r\n","export function showModal(modal){\r\n    return {\r\n        type: 'SHOW_MODAL',\r\n        modal\r\n    }\r\n}\r\n\r\nexport function hideModal(){\r\n    return {\r\n        type: 'HIDE_MODAL'\r\n    }\r\n}","/**\r\n * Connects redux state and actions to the whole app,\r\n * makes sure routing is possible,\r\n * @class App\r\n * @author Alistair Quinn  \r\n */\r\n\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router'\r\nimport '../styles/App.css';\r\nimport Main from './Main';\r\nimport * as userActionCreators from '../actions/user';\r\nimport * as escapeRoomsActionCreators from '../actions/escapeRooms';\r\nimport * as escapeRoomActionCreators from '../actions/escapeRoom';\r\nimport * as modalActionCreators from '../actions/modal';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    redux: state\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  const user = bindActionCreators(userActionCreators, dispatch);\r\n  const escapeRooms = bindActionCreators(escapeRoomsActionCreators, dispatch);\r\n  const escapeRoom = bindActionCreators(escapeRoomActionCreators, dispatch);\r\n  const modal = bindActionCreators(modalActionCreators, dispatch);\r\n  return {user, escapeRooms, escapeRoom, modal};\r\n}\r\n\r\nfunction mergeProps(stateProps, dispatchProps, ownProps) {\r\n  return {\r\n    ...ownProps,\r\n    redux: {\r\n      state: stateProps.redux,\r\n      actions: dispatchProps\r\n    }\r\n  }\r\n}\r\n\r\nconst App = connect(mapStateToProps, mapDispatchToProps, mergeProps)(Main);\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/**\r\n * Main file, starts front end and renders App \r\n * @author Alistair Quinn\r\n */\r\n//Polyfills\r\nimport 'react-app-polyfill/ie9';\r\n//React Imports \r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n//Redux Imports\r\nimport { Provider } from 'react-redux';\r\n//Store \r\nimport configureStore from './stores/store'\r\n//Feathers\r\nimport io from 'socket.io-client';\r\nimport feathers from 'feathers-client';\r\n//Feathers-Redux\r\nimport reduxifyServices, {getServicesStatus, bindWithDispatch} from 'feathers-redux';\r\n//CSS\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//Components\r\nimport App from './components/App';\r\n//Service Worker \r\nimport * as serviceWorker from './serviceWorker';\r\n//ReactDnD\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport TouchBackend from 'react-dnd-touch-backend';\r\nimport MultiBackend, { TouchTransition } from 'react-dnd-multi-backend';\r\nimport { DragDropContextProvider } from 'react-dnd';\r\nlet pipline = {\r\n    backends: [\r\n        {backend: HTML5Backend},\r\n        {\r\n            backend: TouchBackend({enableMouseEvents:true}),\r\n            preview: true,\r\n            transition: TouchTransition\r\n        }\r\n    ]\r\n};\r\nlet backend = MultiBackend(pipline);\r\n\r\n//Feathers Configuration \r\nexport const feathersClient = feathers()\r\n    .configure(feathers.socketio(io()))\r\n    .configure(feathers.hooks())\r\n    .configure(feathers.authentication({\r\n        storage:window.localStorage\r\n    }));\r\n\r\n//Configure Redux\r\nconst rawServices = reduxifyServices(feathersClient, ['users', 'escape-rooms']);\r\nconst store = configureStore(rawServices,{user:{},escapeRooms:[],escapeRoom:{}});\r\nconst services = bindWithDispatch(store.dispatch, rawServices);\r\n\r\n//Router\r\nconst router = (\r\n    <DragDropContextProvider backend={backend}>\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <App feathersClient={feathersClient} services={services} getServicesStatus={getServicesStatus}/>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    </DragDropContextProvider>\r\n);\r\n\r\n//Render Router \r\nReactDOM.render(router, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport middlewares from '../middleware';\r\nimport rootReducer from '../reducers';\r\n\r\nexport default function configureStore(reduxifiedServices, initialState) {\r\n    const createStoreWithDevTools = window.devToolsExtension ? window.devToolsExtension()(createStore) : createStore;\r\n    const createStoreWithMiddlewares = applyMiddleware(...middlewares)(createStoreWithDevTools);\r\n    return createStoreWithMiddlewares(rootReducer(reduxifiedServices),initialState);\r\n}"],"sourceRoot":""}