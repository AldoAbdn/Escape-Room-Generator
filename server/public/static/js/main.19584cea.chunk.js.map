{"version":3,"sources":["middleware/logger.js","middleware/index.js","reducers/users.js","reducers/escapeRooms.js","reducers/videos.js","reducers/index.js","models/Component.js","models/Area.js","components/Dashboard.js","components/Profile.js","components/EscapeRoomDesigner.js","components/Details.js","components/Design.js","models/Puzzle.js","models/Lock.js","models/Event.js","models/Music.js","components/ComponentDnDTarget.js","components/ComponentDnDSource.js","components/AreaDnDTarget.js","components/AreaDnDSource.js","components/Pallet.js","components/ComponentArranger.js","components/ComponentDetails.js","components/Accessibility.js","components/Login.js","components/SignUp.js","components/About.js","components/Tutorials.js","components/ProtectedRoute.js","components/Main.js","actions/users.js","actions/escapeRooms.js","actions/videos.js","components/App.js","serviceWorker.js","index.js","stores/store.js"],"names":["logger","store","next","action","console","groupCollapsed","type","info","result","log","getState","groupEnd","middleware","reduxThunk","reduxPromiseMiddleware","users","state","arguments","length","undefined","Object","objectSpread","user","escapRooms","push","escapeRoom","slice","i","indexOf","pop","escapeRooms","videos","assign","reducers","reduxifiedServices","combineReducers","usersService","reducer","escapeRoomsService","routing","routerReducer","Component","classCallCheck","this","_id","uniqid","name","description","inputComponents","outputComponents","position","top","left","Area","_this","possibleConstructorReturn","getPrototypeOf","call","Dashboard","props","handleToggle","e","dropdownOpen","setState","handleClick","_ref","asyncToGenerator","regenerator_default","a","mark","_callee2","userId","newEscapeRoom","wrap","_context2","prev","redux","details","designers","theme","minPlayers","maxPlayers","targetTime","difficulty","objective","accessibility","protanomaly","protanopia","deuteranomaly","deuteranopia","tritanomaly","tritanopia","coneMonochromacy","rodMonochromacy","largeFonts","highContrast","components","services","create","then","_ref2","_callee","queryResult","_context","includes","value","actions","addEscapeRoom","history","stop","_x2","apply","catch","err","_x","handleItemClick","escapeRoomService","removeEscapeRoom","saveJSON","savePDF","remove","mapEscapeRoomToList","react_default","createElement","ListGroupItem","key","Dropdown","style","display","right","isOpen","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","onClick","firstLoad","blob","Blob","JSON","stringify","saveAs","doc","jsPDF","text","save","Container","Row","Col","Button","block","ListGroup","map","Profile","handleSubmit","event","preventDefault","update","email","password","handleChange","defineProperty","target","id","handleDismiss","errorMessage","edit","output","login","oldProps","newProps","profile","Card","CardImg","height","src","avatar","alt","CardBody","CardTitle","className","editProfile","Form","onSubmit","FormGroup","Label","for","Input","onChange","Alert","color","EscapeRoomDesigner","updateEscapeRoom","handleDetailsChange","newState","handleAccessibilityChange","handleDesignChange","toConsumableArray","handleNav","tab","activeTab","match","params","xs","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","components_Details","components_Accessibility","components_Design","Details","placeholder","min","max","Design","handlePalletItemClick","item","handleComponentClick","component","stopPropagation","selected","handleComponentDrop","parentId","isInput","forEach","rootComponent","index","removeComponent","addComponent","handleDidNotDrop","handleComponentDetailsChange","newComponent","updateComponent","findComponent","_arr","_i","_this2","foundComponent","_arr2","_i2","found","_this3","_arr3","_i3","_this4","_arr4","_i4","components_Pallet","components_ComponentArranger","components_ComponentDetails","Puzzle","puzzleType","Lock","lockType","Event","eventType","Music","startTime","endTime","ComponentDnDTarget","classNames","isOver","canDrop","connectDropTarget","components_ComponentDnDSource","isTarget","DropTarget","drop","monitor","didDrop","getItem","moved","connect","dropTarget","isOverCurrent","shallow","itemType","getItemType","componentSource","canDrag","isDragging","beginDrag","endDrag","ComponentDnDSource","components_ComponentDnDTarget","connectDragSource","DragSource","dragSource","componentTarget","delta","getDifferenceFromInitialOffset","Math","round","x","y","AreaDnDTarget","isRoot","areaSource","AreaDnDSource","components_AreaDnDTarget","Pallet","components_AreaDnDSource","areaArrangerTarget","AreaModel","ComponentArranger","mapAreas","area","ComponentDetails","mapDetailToInput","inputs","keys","Accessibility","CustomInput","label","checked","wheelchairAccessible","motorAccessible","Login","feathersClient","authenticate","strategy","response","find","sent","data","token","window","localStorage","message","FormText","Link","to","Signup","About","href","Tutorials","dist_default","width","api_key","config","youtubeAPIKey","playlist_id","scrolling","ProtectedRoute","Route","Redirect","location","Main","populateUser","passport","verifyJWT","accessToken","get","logout","populateEscapeRooms","error","query","updateEscapeRooms","loading","removeItem","prevProps","Switch","exact","from","components_ProtectedRoute","path","render","routeProps","components_Dashboard","components_Profile","components_EscapeRoomDesigner","components_Login","SignUp","components_About","components_Tutorials","updateVideos","App","dispatch","userFuncs","bindActionCreators","userActionCreators","escapeRoomFuncs","escpaeRoomActionCreators","videoFuncs","videoActionCreators","stateProps","dispatchProps","ownProps","withRouter","Boolean","hostname","__webpack_require__","d","__webpack_exports__","feathers","configure","socketio","io","hooks","authentication","storage","rawServices","reduxifyServices","initialState","createStoreWithDevTools","devToolsExtension","createStore","applyMiddleware","middlewares","createStoreWithMiddlewares","rootReducer","configureStore","bindWithDispatch","router","react_dnd_lib","backend","HTML5Backend","es","BrowserRouter","components_App","getServicesStatus","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gvBAciBA,EATF,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAC,GAC5BC,QAAQC,eAAeF,EAAOG,MAC9BF,QAAQG,KAAK,cAAeJ,GAC5B,IAAMK,EAASN,EAAKC,GAGpB,OAFAC,QAAQK,IAAI,aAAcR,EAAMS,YAChCN,QAAQO,SAASR,EAAOG,MACjBE,KCHII,EAAA,CACbC,IACAC,cAEAd,oBCDae,MAXf,WAA+B,IAAhBC,EAAgBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAV,GAAGd,EAAOc,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3B,OAAOhB,EAAOG,MACV,IAAK,QACD,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GAAIjB,EAAOmB,MACtB,IAAK,SACD,MAAO,GAGf,OAAON,GCWIO,MAnBf,WAAoC,IAAhBP,EAAgBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAV,GAAGd,EAAOc,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChC,OAAOhB,EAAOG,MACV,IAAK,kBAED,OADAU,EAAMQ,KAAKrB,EAAOsB,YACXT,EAAMU,QACjB,IAAK,qBACD,IAAMC,EAAIX,EAAMY,QAAQzB,EAAOsB,YAE/B,OADAT,EAAMa,IAAIF,GACHX,EAAMU,QACjB,IAAK,qBAED,OADAV,EAAMb,EAAOwB,GAAKxB,EAAOsB,WAClBT,EAAMU,QACjB,IAAK,sBACD,OAAOvB,EAAO2B,YAAYJ,QAC9B,QACI,OAAOV,ICLJe,MAVf,WAAoC,IAApBf,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAId,EAAQc,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChC,OAAOhB,EAAOG,MAEV,IAAK,gBACD,OAAOc,OAAOY,OAAOhB,EAAM,CAACe,OAAO5B,EAAO4B,SAGlD,OAAOf,GCAIiB,EAAA,SAASC,GACpB,OAAOC,0BAAgB,CACnBC,aAAcF,EAAmBnB,MAAMsB,QACvCC,mBAAoBJ,EAAmB,gBAAgBG,QACvDE,QAASC,gBACTlB,KAAKP,EACLe,cACAC,yVCZaU,GACjB,SAAAA,IAAcrB,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAAF,GACVE,KAAKC,IAAMC,OACXF,KAAKG,KAAO,GACZH,KAAKI,YAAc,GACnBJ,KAAKK,gBAAkB,GACvBL,KAAKM,iBAAmB,GACxBN,KAAKrC,KAAO,YACZqC,KAAKO,SAAW,CAACC,IAAI,EAAEC,KAAK,ICTfC,eACjB,SAAAA,IAAa,IAAAC,EAAA,OAAAlC,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAAU,IACTC,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAuB,KAAAvB,OAAAoC,EAAA,EAAApC,CAAAiC,GAAAI,KAAAd,QACKrC,KAAK,OAFDgD,6BADiBb,ICgInBiB,eA1HX,SAAAA,EAAYC,GAAM,IAAAL,EAAA,OAAAlC,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAAe,IACdJ,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAuB,KAAAvB,OAAAoC,EAAA,EAAApC,CAAAsC,GAAAD,KAAAd,KAAMgB,KAMVC,aAAe,SAACjC,GAAD,OAAO,SAACkC,GACnB,IAAIC,EAAeR,EAAKtC,MAAM8C,aAC9BA,EAAanC,IAAMmC,EAAanC,GAChC2B,EAAKS,SAAS,CAACD,mBAVDR,EAYlBU,YAZkB,eAAAC,EAAA7C,OAAA8C,EAAA,EAAA9C,CAAA+C,EAAAC,EAAAC,KAYJ,SAAAC,EAAOT,GAAP,IAAAU,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAxE,MAAA,cACJqE,EAASjB,EAAKK,MAAMiB,MAAM5D,MAAMM,KAAKsB,IACrC4B,EAAgB,CAClBD,OAAQA,EACRM,QAAQ,CACJ/B,KAAM,UACNgC,UAAW,GACXC,MAAO,GACPC,WAAY,GACZC,WAAY,GACZC,WAAY,GACZC,WAAY,IACZC,UAAW,GACXrC,YAAa,IAEjBsC,cAAc,CACVC,aAAa,EACbC,YAAY,EACZC,eAAe,EACfC,cAAc,EACdC,aAAa,EACbC,YAAY,EACZC,kBAAkB,EAClBC,iBAAiB,EACjBC,YAAY,EACZC,cAAc,GAElBC,WAAY,CAAC,IAAI3C,KA3BXqB,EAAAxE,KAAA,EA6BJoD,EAAKK,MAAMsC,SAAS,gBAAgBC,OAAO1B,GAC5C2B,KADC,eAAAC,EAAAhF,OAAA8C,EAAA,EAAA9C,CAAA+C,EAAAC,EAAAC,KACI,SAAAgC,EAAOC,GAAP,IAAA7E,EAAAE,EAAA,OAAAwC,EAAAC,EAAAK,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAArG,MAAA,OACCoG,EAAYnG,OAAOG,KAAKkG,SAAS,cAEf,QADX/E,EAAa6E,EAAYG,SAErB9E,EAAI2B,EAAKK,MAAMiB,MAAM5D,MAAMc,YAAYZ,OAC7CoC,EAAKK,MAAMiB,MAAM8B,QAAQC,cAAclF,GACvC6B,EAAKK,MAAMiD,QAAQpF,KAAK,aAAaG,IAN3C,wBAAA4E,EAAAM,SAAAR,EAAA1D,SADJ,gBAAAmE,GAAA,OAAAV,EAAAW,MAAApE,KAAA1B,YAAA,IAWD+F,MAAM,SAACC,GACJ7G,QAAQK,IAAIwG,KAzCV,wBAAAvC,EAAAmC,SAAAvC,EAAA3B,SAZI,gBAAAuE,GAAA,OAAAjD,EAAA8C,MAAApE,KAAA1B,YAAA,GAAAqC,EAiElB6D,gBAAkB,SAACxF,EAAGxB,GAAJ,OAAe,SAAC0D,GAC9B,IAAMpC,EAAa6B,EAAKK,MAAMiB,MAAM5D,MAAMc,YAAYH,GAChDyF,EAAoB9D,EAAKK,MAAMsC,SAAS,gBACxCoB,EAAmB/D,EAAKK,MAAMiB,MAAM8B,QAAQW,iBAClD,OAAOlH,GACH,IAAK,OACDmD,EAAKK,MAAMiD,QAAQpF,KAAK,aAAaG,GACrC,MACJ,IAAK,OACD2B,EAAKgE,SAAS7F,GACd,MACJ,IAAK,MACD6B,EAAKiE,QAAQ9F,GACb,MACJ,IAAK,SACD2F,EAAkBI,OAAO/F,EAAWmB,KACpCyE,EAAiB5F,GACjB,MACJ,QACI,UApFM6B,EAuFlBmE,oBAAsB,SAAChG,EAAWE,GAC9B,OACA+F,EAAAtD,EAAAuD,cAACC,EAAA,EAAD,CAAeC,IAAKlG,GAAIF,EAAWoD,QAAQ/B,KACvC4E,EAAAtD,EAAAuD,cAACG,EAAA,EAAD,CAAUC,MAAO,CAACC,QAAQ,SAAU9E,SAAU,WAAY+E,MAAM,QAASC,OAAQ5E,EAAKtC,MAAM8C,aAAanC,GAAIwG,OAAQ7E,EAAKM,aAAajC,IACnI+F,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,CAAgBC,OAAK,IACrBX,EAAAtD,EAAAuD,cAACW,EAAA,EAAD,CAAcL,OAAK,GACfP,EAAAtD,EAAAuD,cAACY,EAAA,EAAD,CAAcC,QAASlF,EAAK6D,gBAAgBxF,EAAE,SAA9C,QACA+F,EAAAtD,EAAAuD,cAACY,EAAA,EAAD,CAAcC,QAASlF,EAAK6D,gBAAgBxF,EAAE,SAA9C,kBACA+F,EAAAtD,EAAAuD,cAACY,EAAA,EAAD,CAAcC,QAASlF,EAAK6D,gBAAgBxF,EAAE,QAA9C,iBACA+F,EAAAtD,EAAAuD,cAACY,EAAA,EAAD,CAAcC,QAASlF,EAAK6D,gBAAgBxF,EAAE,WAA9C,cA9FZ2B,EAAKtC,MAAQ,CACT8C,aAAc,EAAC,GAAM,GACrB2E,WAAW,GAJDnF,wEAwDT7B,GACL,IAAMiH,EAAO,IAAIC,KAAK,CAACC,KAAKC,UAAUpH,IAAa,CAACnB,KAAK,6BACzDwI,iBAAOJ,EAAMjH,EAAWoD,QAAQ/B,KAAK,yCAEjCrB,GACJ,IAAIsH,EAAM,IAAIC,KACdD,EAAIE,KAAKL,KAAKC,UAAUpH,GAAY,GAAG,IACvCsH,EAAIG,KAAKzH,EAAWoD,QAAQ/B,KAAK,yCAuCjC,IAAMhB,EAAca,KAAKgB,MAAMiB,MAAM5D,MAAMc,aAAe,GAC1D,OACI4F,EAAAtD,EAAAuD,cAACwB,EAAA,EAAD,KACIzB,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAAC2B,EAAA,EAAD,CAAQC,OAAK,EAACf,QAAS7F,KAAKqB,aAA5B,SAGR0D,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAAC6B,EAAA,EAAD,KACK1H,EAAY2H,IAAI9G,KAAK8E,gCAlH1BhF,gHC0GTiH,eA3GX,SAAAA,IAAa,IAAApG,EAAA,OAAAlC,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAA+G,IACTpG,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAuB,KAAAvB,OAAAoC,EAAA,EAAApC,CAAAsI,GAAAjG,KAAAd,QAUJgH,aAXa,eAAA1F,EAAA7C,OAAA8C,EAAA,EAAA9C,CAAA+C,EAAAC,EAAAC,KAWE,SAAAgC,EAAOuD,GAAP,OAAAzF,EAAAC,EAAAK,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAArG,MAAA,cACX0J,EAAMC,iBADKtD,EAAArG,KAAA,EAELoD,EAAKK,MAAMsC,SAASlF,MAAM+I,OAAO,CAAClH,IAAIU,EAAKtC,MAAM4B,IAAKmH,MAAMzG,EAAKtC,MAAM+I,MAAOC,SAAS1G,EAAKtC,MAAMgJ,WAF7F,wBAAAzD,EAAAM,SAAAR,EAAA1D,SAXF,gBAAAuE,GAAA,OAAAjD,EAAA8C,MAAApE,KAAA1B,YAAA,GAAAqC,EAiBb2G,aAAe,SAACL,GACZtG,EAAKS,SAAL3C,OAAA8I,GAAA,EAAA9I,CAAA,GACKwI,EAAMO,OAAOC,GAAKR,EAAMO,OAAO1D,SAnB3BnD,EAwBb+G,cAAgB,SAACT,GACbtG,EAAKS,SAAS,CAACuG,aAAc,MAzBpBhH,EA4BbU,YAAc,SAAC4F,GACX,OAAQA,EAAMO,OAAOC,IACjB,IAAK,aACD9G,EAAKS,SAAS,CAACwG,MAAK,IACpB,MACJ,IAAK,aACD,IAAIjJ,EAAOgC,EAAKK,MAAMiB,MAAM5D,MAAMM,KAClCA,EAAKyI,MAAQzG,EAAKtC,MAAM+I,MACxBzI,EAAK0I,SAAW1G,EAAKtC,MAAMgJ,SAC3B1G,EAAKK,MAAMsC,SAASlF,MAAM+I,OAAOxG,EAAKtC,MAAM4B,IAAItB,GAC/C6E,KAAK,SAACqE,GACH,IAAIlJ,EAAOkJ,EAAO/D,MAClBnD,EAAKK,MAAMiB,MAAM8B,QAAQ+D,MAAMnJ,GAC/BgC,EAAKS,SAAS,CAACwG,MAAK,QAvChCjH,EAAKtC,MAAQ,CACTuJ,MAAM,EACND,aAAc,GACdP,MAAO,GACPC,SAAU,GACVpH,IAAK,IAPAU,mFAiDT,IAAMhC,EAAOqB,KAAKgB,MAAMiB,MAAM5D,MAAMM,KACpCqB,KAAKoB,SAAS,CACVgG,MAAOzI,EAAKyI,mDAIDW,GACf,IAAMC,EAAWhI,KAAKgB,MACtB,GAAG+G,EAAS9F,MAAM5D,MAAMM,KAAKyI,QAAUY,EAAS/F,MAAM5D,MAAMM,KAAKyI,MAAM,CACnE,IAAMzI,EAAOqB,KAAKgB,MAAMiB,MAAM5D,MAAMM,KACpCqB,KAAKoB,SAAS,CACVgG,MAAOzI,EAAKyI,MACZnH,IAAKtB,EAAKsB,wCAuClB,OAjCAD,KAAKiI,QACLlD,EAAAtD,EAAAuD,cAACwB,EAAA,EAAD,KACIzB,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAACkD,GAAA,EAAD,KACInD,EAAAtD,EAAAuD,cAACmD,GAAA,EAAD,CAASC,OAAO,MAAMC,IAAKrI,KAAKgB,MAAMiB,MAAM5D,MAAMM,KAAK2J,OAAQC,IAAI,kBACnExD,EAAAtD,EAAAuD,cAACwD,GAAA,EAAD,KACAzD,EAAAtD,EAAAuD,cAACyD,GAAA,EAAD,CAAWC,UAAU,eAAe1I,KAAKgB,MAAMiB,MAAM5D,MAAMM,KAAKyI,OAChErC,EAAAtD,EAAAuD,cAAC2B,EAAA,EAAD,CAAQc,GAAG,aAAab,OAAO,EAAM8B,UAAU,cAAc7C,QAAS7F,KAAKqB,aAA3E,qBAMhBrB,KAAK2I,YACL5D,EAAAtD,EAAAuD,cAACwB,EAAA,EAAD,KACIzB,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAAC4D,GAAA,EAAD,CAAMC,SAAU7I,KAAKgH,cACjBjC,EAAAtD,EAAAuD,cAAC8D,GAAA,EAAD,KACI/D,EAAAtD,EAAAuD,cAAC+D,GAAA,EAAD,CAAOC,IAAI,SAAX,SACAjE,EAAAtD,EAAAuD,cAACiE,GAAA,EAAD,CAAOtL,KAAK,QAAQwC,KAAK,QAAQsH,GAAG,QAAQ3D,MAAO9D,KAAK3B,MAAM+I,MAAO8B,SAAUlJ,KAAKsH,gBAExFvC,EAAAtD,EAAAuD,cAAC8D,GAAA,EAAD,KACI/D,EAAAtD,EAAAuD,cAAC+D,GAAA,EAAD,CAAOC,IAAI,YAAX,YACAjE,EAAAtD,EAAAuD,cAACiE,GAAA,EAAD,CAAOtL,KAAK,WAAWwC,KAAK,WAAWsH,GAAG,WAAW3D,MAAO9D,KAAK3B,MAAMgJ,SAAU6B,SAAUlJ,KAAKsH,gBAEpGvC,EAAAtD,EAAAuD,cAAC2B,EAAA,EAAD,CAAQc,GAAG,aAAa5B,QAAS7F,KAAKqB,aAAtC,QACA0D,EAAAtD,EAAAuD,cAACmE,GAAA,EAAD,CAAO5D,OAAoC,KAA5BvF,KAAK3B,MAAMsJ,aAAqBnC,OAAQxF,KAAK0H,cAAe0B,MAAM,UAAUpJ,KAAK3B,MAAMsJ,kBAKnH3H,KAAK3B,MAAMuJ,KACH5H,KAAK2I,YAEL3I,KAAKiI,eAxGFnI,kFCiLPuJ,eA7KX,SAAAA,IAAa,IAAA1I,EAAAlC,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAAqJ,IACT1I,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAuB,KAAAvB,OAAAoC,EAAA,EAAApC,CAAA4K,GAAAvI,KAAAd,QAuCJqB,YAAc,SAAC7D,GAAD,OAAY,SAAC0D,GACvB,OAAO1D,GACH,IAAK,OACDmD,EAAKK,MAAMsC,SAAS,gBAAgB6D,OAAOxG,EAAKtC,MAAMS,WAAWmB,IAAIU,EAAKtC,MAAMS,YAAY0E,KAAK,WAC7F7C,EAAKK,MAAMiB,MAAM8B,QAAQuF,iBAAiB3I,EAAKtC,MAAMoJ,GAAG9G,EAAKtC,MAAMS,YACnE6B,EAAKK,MAAMiD,QAAQpF,KAAK,OAE5B,MACJ,IAAK,OACD8B,EAAKK,MAAMsC,SAAS,gBAAgB6D,OAAOxG,EAAKtC,MAAMS,WAAWmB,IAAIU,EAAKtC,MAAMS,YAAY0E,KAAK,WAC7F7C,EAAKgE,SAAShE,EAAKtC,MAAMS,cAE7B,MACJ,IAAK,MACD6B,EAAKK,MAAMsC,SAAS,gBAAgB6D,OAAOxG,EAAKtC,MAAMS,WAAWmB,IAAIU,EAAKtC,MAAMS,YAAY0E,KAAK,WAC7F7C,EAAKiE,QAAQjE,EAAKtC,MAAMS,cAE5B,MACJ,QACI,UA3DC6B,EA8Db2G,aAAe,SAACL,GACZtG,EAAKS,SAAL3C,OAAA8I,GAAA,EAAA9I,CAAA,GACKwI,EAAMO,OAAOC,GAAKR,EAAMO,OAAO1D,SAhE3BnD,EAoEb4I,oBAAsB,SAAClL,GACnB,IAAIS,EAAUL,OAAAC,EAAA,EAAAD,CAAA,GAAOkC,EAAKtC,MAAMS,YAC5B0K,EAAQ/K,OAAAC,EAAA,EAAAD,CAAA,GAAOK,EAAWoD,QAAY7D,GAC1CS,EAAWoD,QAAUsH,EACrB7I,EAAKS,SAAS,CAACtC,gBAxEN6B,EA2Eb8I,0BAA4B,SAACpL,GACzB,IAAIS,EAAUL,OAAAC,EAAA,EAAAD,CAAA,GAAOkC,EAAKtC,MAAMS,YAC5B0K,EAAQ/K,OAAAC,EAAA,EAAAD,CAAA,GAAOkC,EAAKtC,MAAMS,WAAW4D,cAAkBrE,GAC3DS,EAAW4D,cAAgB8G,EAC3B7I,EAAKS,SAAS,CAACtC,gBA/EN6B,EAkFb+I,mBAAqB,SAACrL,GAClB,IAAIS,EAAUL,OAAAC,EAAA,EAAAD,CAAA,GAAOkC,EAAKtC,MAAMS,YAC5B0K,EAAQ/K,OAAAkL,EAAA,EAAAlL,CAAOJ,GACnBS,EAAWuE,WAAamG,EACxB7I,EAAKS,SAAS,CAACtC,gBAtFN6B,EAwFbM,aAAe,SAACC,GACZP,EAAKS,SAAS,CAACD,cAAeR,EAAKtC,MAAM8C,gBAzFhCR,EA2FbiJ,UAAY,SAACC,GAAD,OAAS,SAAC3I,GACdP,EAAKtC,MAAMyL,YAAcD,GACzBlJ,EAAKS,SAAS,CACV0I,UAAWD,MA9FV,OA6BTlJ,EAAKtC,MAAQ,CAACoJ,GAAI,KAAMqC,UAAU,UAAW3I,cAAc,EAAOrC,WA3B5C,CAClB8C,OAAQ,GACRM,QAAQ,CACJ/B,KAAM,GACNgC,UAAW,GACXC,MAAO,GACPC,WAAY,GACZC,WAAY,GACZC,WAAY,GACZC,WAAY,IACZC,UAAW,GACXrC,YAAa,IAEjBsC,cAAc,CACVC,aAAa,EACbC,YAAY,EACZC,eAAe,EACfC,cAAc,EACdC,aAAa,EACbC,YAAY,EACZC,kBAAkB,EAClBC,iBAAiB,EACjBC,YAAY,EACZC,cAAc,GAElBC,WAAY,KA3BP1C,wEA+BJ7B,GACL,IAAMiH,EAAO,IAAIC,KAAK,CAACC,KAAKC,UAAUpH,IAAa,CAACnB,KAAK,6BACzDwI,iBAAOJ,EAAMjH,EAAWoD,QAAQ/B,KAAK,yCAEjCrB,GACJ,IAAIsH,EAAM,IAAIC,KACdD,EAAIE,KAAKL,KAAKC,UAAUpH,GAAY,GAAG,IACvCsH,EAAIG,KAAKzH,EAAWoD,QAAQ/B,KAAK,oDA6DjC,IAAMsH,EAAKzH,KAAKgB,MAAM+I,MAAMC,OAAOvC,GAC7B3I,EAAakB,KAAKgB,MAAMiB,MAAM5D,MAAMc,YAAYsI,QACtCjJ,IAAbM,GACCkB,KAAKgB,MAAMiD,QAAQpF,KAAK,KAE5BmB,KAAKoB,SAAS,CAACqG,GAAIA,EAAI3I,WAAYA,GAAY,+CAI/C,OACIiG,EAAAtD,EAAAuD,cAACwB,EAAA,EAAD,KACIzB,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,CAAKuD,GAAG,KAAIlF,EAAAtD,EAAAuD,cAAC2B,EAAA,EAAD,CAAQd,QAAS7F,KAAKqB,YAAY,SAAlC,kBACZ0D,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,CAAKuD,GAAG,KACJlF,EAAAtD,EAAAuD,cAACG,EAAA,EAAD,CAAUI,OAAQvF,KAAK3B,MAAM8C,aAAcqE,OAAQxF,KAAKiB,cACpD8D,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,CAAgBC,OAAK,GAArB,mBACAX,EAAAtD,EAAAuD,cAACW,EAAA,EAAD,CAAcL,OAAK,GACfP,EAAAtD,EAAAuD,cAACY,EAAA,EAAD,CAAcC,QAAS7F,KAAKqB,YAAY,SAAxC,kBACA0D,EAAAtD,EAAAuD,cAACY,EAAA,EAAD,CAAcC,QAAS7F,KAAKqB,YAAY,QAAxC,oBAIZ0D,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,CAAKuD,GAAG,OAEZlF,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAACkF,GAAA,EAAD,CAAKC,MAAI,GACLpF,EAAAtD,EAAAuD,cAACoF,GAAA,EAAD,KACIrF,EAAAtD,EAAAuD,cAACqF,GAAA,EAAD,CACI3B,UAAW4B,KAAW,CAACC,OAAiC,YAAzBvK,KAAK3B,MAAMyL,YAC1CjE,QAAS7F,KAAK4J,UAAU,YAF5B,YAOJ7E,EAAAtD,EAAAuD,cAACoF,GAAA,EAAD,KACIrF,EAAAtD,EAAAuD,cAACqF,GAAA,EAAD,CACI3B,UAAW4B,KAAW,CAACC,OAAiC,kBAAzBvK,KAAK3B,MAAMyL,YAC1CjE,QAAS7F,KAAK4J,UAAU,kBAF5B,kBAOJ7E,EAAAtD,EAAAuD,cAACoF,GAAA,EAAD,KACIrF,EAAAtD,EAAAuD,cAACqF,GAAA,EAAD,CACI3B,UAAW4B,KAAW,CAACC,OAAiC,WAAzBvK,KAAK3B,MAAMyL,YAC1CjE,QAAS7F,KAAK4J,UAAU,WAF5B,cAUhB7E,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAACwF,GAAA,EAAD,CAAYV,UAAW9J,KAAK3B,MAAMyL,WAC9B/E,EAAAtD,EAAAuD,cAACyF,GAAA,EAAD,CAASC,MAAM,WACX3F,EAAAtD,EAAAuD,cAAC2F,GAAD,CAAStM,MAAO2B,KAAK3B,MAAMS,WAAWoD,QAASoF,aAActH,KAAKuJ,uBAEtExE,EAAAtD,EAAAuD,cAACyF,GAAA,EAAD,CAASC,MAAM,iBACX3F,EAAAtD,EAAAuD,cAAC4F,GAAD,CAAevM,MAAO2B,KAAK3B,MAAMS,WAAW4D,cAAe4E,aAActH,KAAKyJ,6BAElF1E,EAAAtD,EAAAuD,cAACyF,GAAA,EAAD,CAASC,MAAM,UACX3F,EAAAtD,EAAAuD,cAAC6F,GAAD,CAAQxM,MAAO,CAACgF,WAAWrD,KAAK3B,MAAMS,WAAWuE,YAAaiE,aAActH,KAAK0J,iCApKhF5J,aCqDlBgL,8MAvDXxD,aAAe,SAACL,GACZ,IAAI5I,EAAQ,GACZA,EAAM4I,EAAMO,OAAOC,IAAMR,EAAMO,OAAO1D,MACtCnD,EAAKK,MAAMsG,aAAajJ,4EAGxB,OACA0G,EAAAtD,EAAAuD,cAACwB,EAAA,EAAD,KACIzB,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAAC4D,GAAA,EAAD,KACI7D,EAAAtD,EAAAuD,cAAC8D,GAAA,EAAD,KACI/D,EAAAtD,EAAAuD,cAAC+D,GAAA,EAAD,CAAOC,IAAI,QAAX,aACAjE,EAAAtD,EAAAuD,cAACiE,GAAA,EAAD,CAAOtL,KAAK,OAAOwC,KAAK,OAAOsH,GAAG,OAAOsD,YAAY,YAAYjH,MAAO9D,KAAKgB,MAAM3C,MAAM8B,KAAM+I,SAAUlJ,KAAKsH,gBAElHvC,EAAAtD,EAAAuD,cAAC8D,GAAA,EAAD,KACI/D,EAAAtD,EAAAuD,cAAC+D,GAAA,EAAD,CAAOC,IAAI,aAAX,aACAjE,EAAAtD,EAAAuD,cAACiE,GAAA,EAAD,CAAOtL,KAAK,OAAOwC,KAAK,YAAYsH,GAAG,YAAYsD,YAAY,cAAcjH,MAAO9D,KAAKgB,MAAM3C,MAAM8D,UAAW+G,SAAUlJ,KAAKsH,gBAEnIvC,EAAAtD,EAAAuD,cAAC8D,GAAA,EAAD,KACI/D,EAAAtD,EAAAuD,cAAC+D,GAAA,EAAD,CAAOC,IAAI,SAAX,SACAjE,EAAAtD,EAAAuD,cAACiE,GAAA,EAAD,CAAOtL,KAAK,OAAOwC,KAAK,QAAQsH,GAAG,QAAQsD,YAAY,QAAQjH,MAAO9D,KAAKgB,MAAM3C,MAAM+D,MAAO8G,SAAUlJ,KAAKsH,gBAEjHvC,EAAAtD,EAAAuD,cAAC8D,GAAA,EAAD,KACI/D,EAAAtD,EAAAuD,cAAC+D,GAAA,EAAD,gBACAhE,EAAAtD,EAAAuD,cAACiE,GAAA,EAAD,CAAOtL,KAAK,OAAOwC,KAAK,aAAasH,GAAG,aAAasD,YAAY,MAAMjH,MAAO9D,KAAKgB,MAAM3C,MAAMgE,WAAY6G,SAAUlJ,KAAKsH,eAC1HvC,EAAAtD,EAAAuD,cAACiE,GAAA,EAAD,CAAOtL,KAAK,OAAOwC,KAAK,aAAasH,GAAG,aAAasD,YAAY,MAAMjH,MAAO9D,KAAKgB,MAAM3C,MAAMiE,WAAY4G,SAAUlJ,KAAKsH,gBAE9HvC,EAAAtD,EAAAuD,cAAC8D,GAAA,EAAD,KACI/D,EAAAtD,EAAAuD,cAAC+D,GAAA,EAAD,CAAOC,IAAI,cAAX,eACAjE,EAAAtD,EAAAuD,cAACiE,GAAA,EAAD,CAAOtL,KAAK,OAAOwC,KAAK,aAAasH,GAAG,aAAasD,YAAY,OAAOjH,MAAO9D,KAAKgB,MAAM3C,MAAMkE,WAAY2G,SAAUlJ,KAAKsH,gBAE/HvC,EAAAtD,EAAAuD,cAAC8D,GAAA,EAAD,KACI/D,EAAAtD,EAAAuD,cAAC+D,GAAA,EAAD,CAAOC,IAAI,cAAX,cACAjE,EAAAtD,EAAAuD,cAACiE,GAAA,EAAD,CAAOtL,KAAK,QAAQqN,IAAI,IAAIC,IAAI,IAAI9K,KAAK,aAAasH,GAAG,aAAa3D,MAAO9D,KAAKgB,MAAM3C,MAAMmE,WAAY0G,SAAUlJ,KAAKsH,kBAIrIvC,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAAC4D,GAAA,EAAD,KACI7D,EAAAtD,EAAAuD,cAAC8D,GAAA,EAAD,KACI/D,EAAAtD,EAAAuD,cAAC+D,GAAA,EAAD,CAAOC,IAAI,aAAX,aACAjE,EAAAtD,EAAAuD,cAACiE,GAAA,EAAD,CAAOtL,KAAK,OAAOwC,KAAK,YAAYsH,GAAG,YAAYsD,YAAY,iBAAiBjH,MAAO9D,KAAKgB,MAAM3C,MAAMoE,UAAWyG,SAAUlJ,KAAKsH,gBAEtIvC,EAAAtD,EAAAuD,cAAC8D,GAAA,EAAD,KACI/D,EAAAtD,EAAAuD,cAAC+D,GAAA,EAAD,CAAOC,IAAI,eAAX,eACAjE,EAAAtD,EAAAuD,cAACiE,GAAA,EAAD,CAAOtL,KAAK,WAAWwC,KAAK,cAAcsH,GAAG,cAAcsD,YAAY,cAAcjH,MAAO9D,KAAKgB,MAAM3C,MAAM+B,YAAa8I,SAAUlJ,KAAKsH,2BAhD/IxH,aCyJPoL,eAtJX,SAAAA,EAAYlK,GAAM,IAAAL,EAAA,OAAAlC,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAAkL,IACdvK,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAuB,KAAAvB,OAAAoC,EAAA,EAAApC,CAAAyM,GAAApK,KAAAd,KAAMgB,KAGVmK,sBAAwB,SAACC,GACrB,OAAOA,GACH,IAAK,OACD,IAAI/H,EAAa1C,EAAKK,MAAM3C,MAAMgF,WAClCA,EAAWxE,KAAK,IAAI6B,IACpBC,EAAKK,MAAMsG,aAAajE,GACxB,MACJ,QACI,SAZM1C,EAelB0K,qBAAuB,SAACC,GAAD,OAAe,SAACpK,GACnCA,EAAEqK,kBACF5K,EAAKS,SAAS,CAACoK,SAASF,MAjBV3K,EAmBlB8K,oBAAsB,SAACH,EAAWI,GAA6B,IAAnBC,IAAmBrN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACvD+E,EAAU5E,OAAAkL,EAAA,EAAAlL,CAAOkC,EAAKK,MAAM3C,MAAMgF,YACtC,GAAe,MAAZqI,EAGC,OAFArI,EAAWxE,KAAKyM,QAChB3K,EAAKK,MAAMsG,aAAajE,GAGxBA,EAAWuI,QAAQ,SAACC,EAAcC,EAAMzI,GACpCA,EAAWyI,GAASnL,EAAKoL,gBAAgBF,EAAcP,EAAUrL,KACjEoD,EAAWyI,GAASnL,EAAKqL,aAAaH,EAAcH,EAASC,EAAQL,KAEzE3K,EAAKK,MAAMsG,aAAajE,IA9Bd1C,EAiClBsL,iBAAmB,SAACX,GAChB,IAAIjI,EAAU5E,OAAAkL,EAAA,EAAAlL,CAAOkC,EAAKK,MAAM3C,MAAMgF,YACtCA,EAAWuI,QAAQ,SAACC,EAAcC,EAAMzI,GACpCA,EAAWyI,GAASnL,EAAKoL,gBAAgBF,EAAcP,EAAUrL,KAC3C,MAAnBoD,EAAWyI,IACVzI,EAAWnE,IAAI4M,KAGvBnL,EAAKK,MAAMsG,aAAajE,IAzCV1C,EA4ClBuL,6BAA+B,SAAC7N,GAC5B,IAAI8N,EAAY1N,OAAAC,EAAA,EAAAD,CAAA,GAAOkC,EAAKK,MAAMwK,SAAanN,GAC3CgF,EAAU5E,OAAAkL,EAAA,EAAAlL,CAAOkC,EAAKK,MAAM3C,MAAMgF,YACtCA,EAAWuI,QAAQ,SAACN,EAAUQ,EAAMzI,GAChCA,EAAWyI,GAASnL,EAAKyL,gBAAgBd,EAAWa,KAExDxL,EAAKK,MAAMsG,aAAajE,GACxBA,EAAWuI,QAAQ,SAACN,EAAUQ,EAAMzI,GAChC8I,EAAexL,EAAK0L,cAAcf,EAAUa,EAAalM,OAG7DU,EAAKS,SAAS,CAACoK,SAASW,KAvDVxL,EAyDlByL,gBAAkB,SAACP,EAAeM,GAC9B,GAAIN,EAAc5L,MAAQkM,EAAalM,IAEnC,OADA4L,EAAapN,OAAAC,EAAA,EAAAD,CAAA,GAAOoN,EAAiBM,GAGpC,GAAGN,EAAcxL,gBAAgB9B,OAAS,GAAKsN,EAAcvL,iBAAiB/B,OAAS,EACxF,IAD0F,IAAA+N,EACzE,CAACT,EAAcxL,gBAAiBwL,EAAcvL,kBAA/DiM,EAAA,EAAAA,EAAAD,EAAA/N,OAAAgO,IAAiF,CAApED,EAAAC,GACJX,QAAQ,SAACN,EAAUQ,EAAMzI,GAC1BA,EAAWyI,GAASnL,EAAKyL,gBAAgBd,EAAUa,KAI/D,OAAON,GAnEPlL,EAAKtC,MAAQ,CAACmN,SAAU,IAFV7K,6EAuEJkL,EAAcpE,GAAG,IAAA+E,EAAAxM,KACvByM,EAAiB,KACrB,GAAGZ,EAAc5L,MAAMwH,EACnB,OAAOoE,EAEX,IAL2B,IAAAa,EAKV,CAACb,EAAcxL,gBAAiBwL,EAAcvL,kBAA/DqM,EAAA,EAAAA,EAAAD,EAAAnO,OAAAoO,IAAiF,CAApED,EAAAC,GACJf,QAAQ,SAACN,EAAUQ,EAAMzI,GAC1B,IAAIuJ,EAAQJ,EAAKH,cAAcf,GACpB,MAAPsB,IACAH,EAAiBG,KAI7B,OAAOH,0CAEKZ,EAAcpE,GAAG,IAAAoF,EAAA7M,KAC7B,GAAI6L,EAAc5L,MAAQwH,EAEtB,OADAoE,EAAgB,KAGf,GAAGA,EAAcxL,gBAAgB9B,OAAS,GAAKsN,EAAcvL,iBAAiB/B,OAAS,EACxF,IAD0F,IAAAuO,EACzE,CAACjB,EAAcxL,gBAAiBwL,EAAcvL,kBAA/DyM,EAAA,EAAAA,EAAAD,EAAAvO,OAAAwO,IAAiF,CAApED,EAAAC,GACJnB,QAAQ,SAACN,EAAUQ,EAAMzI,GACT,OAAdiI,GAAsBA,EAAUrL,MAAQwH,EACvCpE,EAAWnE,IAAI4M,GAEfR,EAAYuB,EAAKd,gBAAgBT,EAAU7D,KAK3D,OAAOoE,uCAEEA,EAAcH,EAASC,EAAQQ,GAAa,IAAAa,EAAAhN,KACrD,GAAI6L,EAAc5L,MAAQyL,EAMtB,OALGC,EACCE,EAAcxL,gBAAgBxB,KAAKsN,GAEnCN,EAAcvL,iBAAiBzB,KAAKsN,GAEjCN,EAEN,GAAGA,EAAcxL,gBAAgB9B,OAAS,GAAKsN,EAAcvL,iBAAiB/B,OAAS,EACxF,IAD0F,IAAA0O,EACzE,CAACpB,EAAcxL,gBAAiBwL,EAAcvL,kBAA/D4M,EAAA,EAAAA,EAAAD,EAAA1O,OAAA2O,IAAiF,CAApED,EAAAC,GACJtB,QAAQ,SAACN,EAAUQ,EAAMzI,GACvBiI,EAAUrL,MAAQyL,GACdC,EACCL,EAAUjL,gBAAgBxB,KAAKsN,GAE/Bb,EAAUhL,iBAAiBzB,KAAKsN,GAEpC9I,EAAWyI,GAASR,GAEpBA,EAAY0B,EAAKhB,aAAaV,EAAUI,EAASC,EAAQQ,KAKzE,OAAON,mCAGP,OACI9G,EAAAtD,EAAAuD,cAACwB,EAAA,EAAD,KACIzB,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,CAAKuD,GAAG,KACJlF,EAAAtD,EAAAuD,cAACmI,GAAD,CAAQ9L,YAAarB,KAAKmL,yBAE9BpG,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,CAAKuD,GAAG,KACJlF,EAAAtD,EAAAuD,cAACoI,GAAD,CAAmBnB,iBAAkBjM,KAAKiM,iBAAkBR,oBAAqBzL,KAAKyL,oBAAqBJ,qBAAsBrL,KAAKqL,qBAAsBhI,WAAYrD,KAAKgB,MAAM3C,MAAMgF,cAE7L0B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,CAAKuD,GAAG,KACJlF,EAAAtD,EAAAuD,cAACqI,GAAD,CAAkB7B,SAAUxL,KAAK3B,MAAMmN,SAAUlE,aAActH,KAAKkM,yCA/IvEpM,sBCJAwN,sBACjB,SAAAA,IAAa,IAAA3M,EAAA,OAAAlC,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAAsN,IACT3M,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAuB,KAAAvB,OAAAoC,EAAA,EAAApC,CAAA6O,GAAAxM,KAAAd,QACKuN,WAAW,GAChB5M,EAAKhD,KAAK,SAHDgD,6BADmBb,KCAf0N,eACjB,SAAAA,IAAa,IAAA7M,EAAA,OAAAlC,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAAwN,IACT7M,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAuB,KAAAvB,OAAAoC,EAAA,EAAApC,CAAA+O,GAAA1M,KAAAd,QACKyN,SAAS,GACd9M,EAAKhD,KAAK,SAHDgD,6BADiBb,ICAb4N,eACjB,SAAAA,IAAa,IAAA/M,EAAA,OAAAlC,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAA0N,IACT/M,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAuB,KAAAvB,OAAAoC,EAAA,EAAApC,CAAAiP,GAAA5M,KAAAd,QACK2N,UAAU,GACfhN,EAAKhD,KAAK,SAHDgD,6BADkBb,ICAd8N,eACjB,SAAAA,IAAa,IAAAjN,EAAA,OAAAlC,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAA4N,IACTjN,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAuB,KAAAvB,OAAAoC,EAAA,EAAApC,CAAAmP,GAAA9M,KAAAd,QACK6N,UAAU,GACflN,EAAKmN,QAAQ,GACbnN,EAAKhD,KAAK,QAJDgD,6BADkBb,QCgC7BiO,8MAyBF9B,iBAAmB,SAACX,GAChB3K,EAAKK,MAAMiL,iBAAiBX,uFAzBZF,GAAkB,IAAbO,IAAarN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAC9BgN,EAAY,KAChB,QAAc9M,IAAV4M,EAAK3D,GACL,OAAO2D,EAAK3D,IACR,IAAK,SACD6D,EAAY,IAAIgC,GAChB,MACJ,IAAK,OACDhC,EAAY,IAAIkC,GAChB,MACJ,IAAK,QACDlC,EAAY,IAAIoC,GAChB,MACJ,IAAK,QACDpC,EAAY,IAAIsC,GAChB,MACJ,QACI,YAGRtC,EAAYF,EAEhBpL,KAAKgB,MAAMyK,oBAAoBH,EAAUtL,KAAKgB,MAAMsK,UAAUrL,IAAI0L,oCAK7D,IACDqC,EADCxB,EAAAxM,KAOL,OALGA,KAAKgB,MAAMiN,QAAUjO,KAAKgB,MAAMkN,QAC/BF,EAAW,UACLhO,KAAKgB,MAAMiN,SACjBD,EAAW,YAERhO,KAAKgB,MAAMmN,kBACdpJ,EAAAtD,EAAAuD,cAAA,OAAK0D,UAAWsF,EAAY9I,IAAKlF,KAAKgB,MAAMsK,UAAUrL,KAClD8E,EAAAtD,EAAAuD,cAACkD,GAAA,EAAD,CAAMQ,UAAW1I,KAAKgB,MAAMsK,UAAU3N,KAAMkI,QAAS7F,KAAKgB,MAAMqK,qBAAqBrL,KAAKgB,MAAMsK,YAC5FvG,EAAAtD,EAAAuD,cAACwD,GAAA,EAAD,KACKxI,KAAKgB,MAAMsK,UAAUjL,gBAAgByG,IAAI,SAACwE,EAAUtM,GACjD,OAAO+F,EAAAtD,EAAAuD,cAACoJ,GAAD,CAAoBC,UAAQ,EAAC5C,oBAAqBe,EAAKxL,MAAMyK,oBAAqBJ,qBAAsBmB,EAAKxL,MAAMqK,qBAAsBY,iBAAkBO,EAAKxL,MAAMiL,iBAAkB/G,IAAKlG,EAAGsM,UAAWA,EAAW7D,GAAI6D,EAAU3N,oBAxCtOmC,aAiDlBwO,yBA1EA,YAGS,CACpBC,KADoB,SACfvN,EAAMwN,EAAQlD,GACf,IAAIkD,EAAQC,UAAZ,CAGA,IAAMrD,EAAOoD,EAAQE,UACf/C,EAAU3K,EAAM2K,QAEtB,OADAL,EAAUG,oBAAoBL,EAAKO,GAC5B,CAACgD,OAAM,MAItB,SAAiBC,EAASJ,GACtB,MAAO,CACHL,kBAAmBS,EAAQC,aAC3BZ,OAAQO,EAAQP,SAChBa,cAAeN,EAAQP,OAAO,CAACc,SAAQ,IACvCb,QAASM,EAAQN,UACjBc,SAAUR,EAAQS,gBAqDXX,CAAsDP,IChE/DmB,GAAkB,CACtBC,QADsB,SACdnO,GAEN,OAAO,GAGToO,WANsB,SAMXpO,EAAOwN,GAChB,OAAOA,EAAQE,UAAUjH,KAAOzG,EAAMyG,IAGxC4H,UAVsB,SAUZrO,EAAOwN,EAASlD,GAQxB,YALuB9M,IAApBwC,EAAMsK,UACA,CAAC7D,GAAIzG,EAAMyG,IAEdhJ,OAAAC,EAAA,EAAAD,CAAA,GAAOuC,EAAMsK,YAKrBgE,QArBsB,SAqBdtO,EAAOwN,EAASlD,GACjBkD,EAAQC,gBACUjQ,IAAlBwC,EAAMsK,WAAyC,OAAlBtK,EAAMsK,WACpCA,EAAUW,iBAAiBjL,EAAMsK,iBAmBnCiE,8MACJtD,iBAAmB,SAACX,QACe9M,IAA9BmC,EAAKK,MAAMiL,kBACZtL,EAAKK,MAAMiL,iBAAiBX,4EAEvB,IACD9D,EADCgF,EAAAxM,KAEDA,KAAKgB,MAAMqN,WACb7G,EACEzC,EAAAtD,EAAAuD,cAAA,WACED,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACE1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KAAK3B,EAAAtD,EAAAuD,cAACwK,GAAD,CAAoB7D,SAAS,EAAML,UAAWtL,KAAKgB,MAAMsK,UAAWW,iBAAkBjM,KAAKgB,MAAMiL,iBAAkBR,oBAAqBzL,KAAKgB,MAAMyK,oBAAqBJ,qBAAsBrL,KAAKgB,MAAMqK,wBAC9MtG,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KAAK3B,EAAAtD,EAAAuD,cAACwK,GAAD,CAAoB7D,SAAS,EAAOL,UAAWtL,KAAKgB,MAAMsK,UAAWW,iBAAkBjM,KAAKgB,MAAMiL,iBAAkBR,oBAAqBzL,KAAKgB,MAAMyK,oBAAqBJ,qBAAsBrL,KAAKgB,MAAMqK,2BAKvN,IAMI/K,EANA8E,EAAQ,GAYZ,YAX2B5G,IAAvBwB,KAAKgB,MAAMsK,YACblG,EAAM5E,IAAMR,KAAKgB,MAAMsK,UAAU/K,SAASC,IAC1C4E,EAAM3E,KAAOT,KAAKgB,MAAMsK,UAAU/K,SAASE,KAC3C2E,EAAM7E,SAAW,iBAGO/B,IAAvBwB,KAAKgB,MAAMsK,YACZhL,EAAmBN,KAAKgB,MAAMsK,UAAUhL,iBAAiBwG,IAAI,SAACwE,EAAUtM,GACtE,OAAQ+F,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,CAAKxB,IAAKlG,GAAG+F,EAAAtD,EAAAuD,cAACuK,EAAD,CAAoBlB,UAAQ,EAACoB,kBAAmBjD,EAAKxL,MAAMyO,kBAAmBhE,oBAAqBe,EAAKxL,MAAMyK,oBAAqBJ,qBAAsBmB,EAAKxL,MAAMqK,qBAAsBY,iBAAkBO,EAAKxL,MAAMiL,iBAAkB/G,IAAKlG,EAAGsM,UAAWA,EAAW7D,GAAI6D,EAAU3N,WAGvSqC,KAAKgB,MAAMyO,kBACd1K,EAAAtD,EAAAuD,cAAA,OAAK0D,UAAU,YAAYtD,MAAOA,EAAOS,QAAS7F,KAAKgB,MAAMqK,qBAAqBrL,KAAKgB,MAAMsK,YACzFvG,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACE1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACK1G,KAAKgB,MAAMyG,GACXD,GAGHlH,YArCeR,aA6ClB4P,yBA/FF,YA+F8BR,GAvD3C,SAAiBN,EAASJ,GACxB,MAAO,CAGLiB,kBAAmBb,EAAQe,aAE3BP,WAAYZ,EAAQY,eAiDTM,CAAsDH,IC/F/DK,GAAkB,CACpBrB,KADoB,SACfvN,EAAMwN,EAAQlD,GACf,IAAIkD,EAAQC,WAAcnD,QAAsC9M,WAAlBwC,EAAMsK,UAApD,CAGA,IAAMF,EAAOoD,EAAQE,UACrB,QAAsBlQ,IAAlB4M,EAAK7K,SACL6K,EAAK7K,SAAW,CAACC,IAAI,EAAEC,KAAK,OACzB,CACH,IAAMoP,EAAQrB,EAAQsB,iCACtB1E,EAAK7K,SAASE,KAAOsP,KAAKC,MAAM5E,EAAK7K,SAASE,KAAOoP,EAAMI,GAC3D7E,EAAK7K,SAASC,IAAMuP,KAAKC,MAAM5E,EAAK7K,SAASC,IAAMqP,EAAMK,GAG7D,OADA5E,EAAUG,oBAAoBL,GACvB,CAACuD,OAAM,UAchBwB,+LACkB/E,GAAmB,IAAdO,EAAcrN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC/BgN,EAAY,KAChB,QAAc9M,IAAV4M,EAAK3D,SAA+BjJ,IAAb4M,EAAKnL,IAC5B,OAAOmL,EAAK3D,IACR,IAAK,UACD6D,EAAY,IAAIgC,IACN/M,SAAW6K,EAAK7K,SAC1B,MACJ,IAAK,QACD+K,EAAY,IAAIkC,IACNjN,SAAW6K,EAAK7K,SAC1B,MACJ,IAAK,SACD+K,EAAY,IAAIoC,IACNnN,SAAW6K,EAAK7K,SAC1B,MACJ,IAAK,SACD+K,EAAY,IAAIsC,IACNrN,SAAW6K,EAAK7K,SAC1B,MACJ,QACI,YAGR+K,EAAYF,EAEhBpL,KAAKgB,MAAMyK,oBAAoBH,EAAUtL,KAAKgB,MAAMsK,UAAUrL,IAAI0L,oCAE7D,IACDqC,EADCrN,EAAAX,KAOL,OALGA,KAAKgB,MAAMiN,QAAUjO,KAAKgB,MAAMkN,QAC/BF,EAAW,UACLhO,KAAKgB,MAAMiN,SACjBD,EAAW,YAERhO,KAAKgB,MAAMmN,kBACdpJ,EAAAtD,EAAAuD,cAAA,OAAK0D,UAAWsF,EAAY9I,IAAKlF,KAAKgB,MAAMsK,UAAUrL,KAClD8E,EAAAtD,EAAAuD,cAACkD,GAAA,EAAD,CAAMQ,UAAW1I,KAAKgB,MAAMsK,UAAU3N,KAAMkI,QAAS7F,KAAKgB,MAAMqK,qBAAqBrL,KAAKgB,MAAMsK,YAC5FvG,EAAAtD,EAAAuD,cAACwD,GAAA,EAAD,KACIzD,EAAAtD,EAAAuD,cAACyD,GAAA,EAAD,KAAYzI,KAAKgB,MAAMsK,UAAU3N,MAChCqC,KAAKgB,MAAMsK,UAAUhL,iBAAiBwG,IAAI,SAACwE,EAAUtM,GAClD,OAAO+F,EAAAtD,EAAAuD,cAACoJ,GAAD,CAAoBgC,QAAM,EAAC/B,UAAQ,EAAC5C,oBAAqB9K,EAAKK,MAAMyK,oBAAqBJ,qBAAsB1K,EAAKK,MAAMqK,qBAAsBY,iBAAkBtL,EAAKK,MAAMiL,iBAAkB/G,IAAKlG,EAAGsM,UAAWA,EAAW7D,GAAI6D,EAAU3N,oBA1ClPmC,aAmDbwO,yBAlFA,YAkF4BsB,GA7D3C,SAAiBhB,EAASJ,GACtB,MAAO,CACHL,kBAAmBS,EAAQC,aAC3BZ,OAAQO,EAAQP,SAChBa,cAAeN,EAAQP,SACvBC,QAASM,EAAQN,UACjBc,SAAUR,EAAQS,gBAuDXX,CAAsD6B,ICxE/DE,GAAa,CACjBlB,QADiB,SACTnO,GAEN,OAAO,GAGToO,WANiB,SAMNpO,EAAOwN,GAKhB,OAAOA,EAAQE,UAAUjH,KAAOzG,EAAMyG,IAGxC4H,UAdiB,SAcPrO,EAAOwN,EAASlD,GAQxB,YALe9M,IAAXwC,EAAMyG,GACA,CAAEA,GAAIzG,EAAMyG,IAEZ,CAAE6D,UAAWtK,EAAMsK,YAK/BgE,QAzBiB,SAyBTtO,EAAOwN,EAASlD,GACjBkD,EAAQC,WACPzN,EAAMiL,kBACRjL,EAAMiL,iBAAiBjL,EAAMsK,iBAoB/BgF,oLAEA,IAAI9I,EAMJ,OALIxH,KAAKgB,MAAMqN,WACb7G,EACEzC,EAAAtD,EAAAuD,cAACuL,GAAD,CAAejF,UAAWtL,KAAKgB,MAAMsK,UAAWW,iBAAkBjM,KAAKgB,MAAMiL,iBAAkBR,oBAAqBzL,KAAKgB,MAAMyK,oBAAqBJ,qBAAsBrL,KAAKgB,MAAMqK,wBAGlLrL,KAAKgB,MAAMyO,kBACd1K,EAAAtD,EAAAuD,cAAA,OAAKa,QAAS7F,KAAKgB,MAAMqK,qBAAqBrL,KAAKgB,MAAMsK,YACvDvG,EAAAtD,EAAAuD,cAACkD,GAAA,EAAD,CAAMQ,UAAW,aACd1I,KAAKgB,MAAMyG,GACXD,YAZa1H,aAmBb4P,yBA1EP,OA0E8BW,GA7BtC,SAAiBzB,EAASJ,GACxB,MAAO,CAGLiB,kBAAmBb,EAAQe,aAE3BP,WAAYZ,EAAQY,eAuBTM,CAA4CY,ICtC5CE,8MAzCXnF,qBAAuB,SAACnK,6EAIpB,OACI6D,EAAAtD,EAAAuD,cAACwB,EAAA,EAAD,KACIzB,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAAA,sBAGRD,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAACyL,GAAD,CAAShJ,GAAG,OAAO4D,qBAAsBrL,KAAKqL,yBAGtDtG,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAACoJ,GAAD,CAAc3G,GAAG,SAAS4D,qBAAsBrL,KAAKqL,yBAG7DtG,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAACoJ,GAAD,CAAc3G,GAAG,OAAO4D,qBAAsBrL,KAAKqL,yBAG3DtG,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAACoJ,GAAD,CAAc3G,GAAG,QAAQ4D,qBAAsBrL,KAAKqL,yBAG5DtG,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAACoJ,GAAD,CAAc3G,GAAG,QAAQ4D,qBAAsBrL,KAAKqL,iCAlCvDvL,aCOf4Q,WAAqB,CACvBnC,KADuB,SAClBvN,EAAOwN,EAASlD,GACjB,IAAMF,EAAOoD,EAAQE,eACDlQ,IAAjB4M,EAAKE,WAA0C,OAAjBF,EAAKE,WAClCA,EAAUtK,MAAMyK,oBAAoB,IAAIkF,WAqB9CC,8MACFC,SAAW,SAACC,EAAK9R,GACb,OACI+F,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,CAAKxB,IAAKlG,GACN+F,EAAAtD,EAAAuD,cAACyL,GAAD,CAAMpC,UAAQ,EAAC/C,UAAWwF,EAAM7E,iBAAkBtL,EAAKK,MAAMiL,iBAAkBR,oBAAqB9K,EAAKK,MAAMyK,oBAAqBJ,qBAAsB1K,EAAKK,MAAMqK,iGAK7K,IAAI2C,EAMJ,OALGhO,KAAKgB,MAAMiN,QAAUjO,KAAKgB,MAAMkN,QAC/BF,EAAW,UACJhO,KAAKgB,MAAMiN,SAClBD,EAAW,YAERhO,KAAKgB,MAAMmN,kBACdpJ,EAAAtD,EAAAuD,cAAA,OAAK0D,UAAWsF,GACZjJ,EAAAtD,EAAAuD,cAACwB,EAAA,EAAD,CAAWkC,UAAU,sBACjB3D,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACKzG,KAAKgB,MAAMqC,WAAWyD,IAAI9G,KAAK6Q,qBAnBxB/Q,aA2BjBwO,yBAvDL,OAuD4BoC,GAxCtC,SAAiB9B,EAASJ,GACtB,MAAO,CAGLL,kBAAmBS,EAAQC,aAE3BZ,OAAQO,EAAQP,SAChBa,cAAeN,EAAQP,OAAO,CAAEc,SAAS,IACzCb,QAASM,EAAQN,UACjBc,SAAUR,EAAQS,gBA+BTX,CAAmDsC,ICnBnDG,8MAxCXzJ,aAAe,SAACL,GACZ,IAAI5I,EAAQ,GACZA,EAAM4I,EAAMO,OAAOC,IAAMR,EAAMO,OAAO1D,MACtCzF,EAAM4B,IAAMU,EAAKK,MAAMwK,SAASvL,IAChCU,EAAKK,MAAMsG,aAAajJ,MAE5B2S,iBAAmB,SAAC9L,EAAIlG,GACpB,MAAuC,kBAA7B2B,EAAKK,MAAMwK,SAAStG,IAA2B,QAANA,EAE3CH,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,CAAKvB,IAAKlG,GACN+F,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAAC+D,GAAA,EAAD,CAAOC,IAAK9D,GAAMA,GAClBH,EAAAtD,EAAAuD,cAACiE,GAAA,EAAD,CAAOtL,KAAK,OAAOwC,KAAM+E,EAAKuC,GAAIvC,EAAK6F,YAAa7F,EAAKpB,MAAOnD,EAAKK,MAAMwK,SAAStG,GAAMgE,SAAUvI,EAAK2G,sBAIrH,2EAIJ,IAAI3J,EACAsT,EAKJ,YAJyBzS,IAAtBwB,KAAKgB,MAAMwK,UAA8C,OAAtBxL,KAAKgB,MAAMwK,WAC7CyF,EAASxS,OAAOyS,KAAKlR,KAAKgB,MAAMwK,UAAU1E,IAAI9G,KAAKgR,kBACnDrT,EAAOqC,KAAKgB,MAAMwK,SAAS7N,MAG3BoH,EAAAtD,EAAAuD,cAACwB,EAAA,EAAD,KACIzB,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAAA,qBACAD,EAAAtD,EAAAuD,cAAA,UAAKrH,KAGZsT,UApCcnR,uBCuFhBqR,8MArFX7J,aAAe,SAACL,GACZ,IAAI5I,EAAQ,GACZA,EAAM4I,EAAMO,OAAOC,IAAMR,EAAMO,OAAO1D,MACtCnD,EAAKK,MAAMsG,aAAajJ,4EAGxB,OACI0G,EAAAtD,EAAAuD,cAACwB,EAAA,EAAD,KACIzB,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAAA,MAAI0D,UAAU,eAAd,0BAGR3D,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAAA,8BACAD,EAAAtD,EAAAuD,cAAA,4FAIJD,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAAA,mBACAD,EAAAtD,EAAAuD,cAAA,uHAKRD,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAACkD,GAAA,EAAD,KACGnD,EAAAtD,EAAAuD,cAACoM,GAAA,EAAD,CAAazT,KAAK,WAAWwC,KAAK,cAAcsH,GAAG,cAAc4J,MAAM,cAAcC,QAAStR,KAAKgB,MAAM3C,MAAMsE,YAAauG,SAAUlJ,KAAKsH,eAC3IvC,EAAAtD,EAAAuD,cAACoM,GAAA,EAAD,CAAazT,KAAK,WAAWwC,KAAK,aAAasH,GAAG,aAAa4J,MAAM,aAAaC,QAAStR,KAAKgB,MAAM3C,MAAMuE,WAAYsG,SAAUlJ,KAAKsH,eACvIvC,EAAAtD,EAAAuD,cAACoM,GAAA,EAAD,CAAazT,KAAK,WAAWwC,KAAK,gBAAgBsH,GAAG,gBAAgB4J,MAAM,gBAAgBC,QAAStR,KAAKgB,MAAM3C,MAAMwE,cAAeqG,SAAUlJ,KAAKsH,eACnJvC,EAAAtD,EAAAuD,cAACoM,GAAA,EAAD,CAAazT,KAAK,WAAWwC,KAAK,eAAesH,GAAG,eAAe4J,MAAM,eAAeC,QAAStR,KAAKgB,MAAM3C,MAAMyE,aAAcoG,SAAUlJ,KAAKsH,eAC/IvC,EAAAtD,EAAAuD,cAACoM,GAAA,EAAD,CAAazT,KAAK,WAAWwC,KAAK,cAAcsH,GAAG,cAAc4J,MAAM,cAAcC,QAAStR,KAAKgB,MAAM3C,MAAM0E,YAAamG,SAAUlJ,KAAKsH,eAC3IvC,EAAAtD,EAAAuD,cAACoM,GAAA,EAAD,CAAazT,KAAK,WAAWwC,KAAK,aAAasH,GAAG,aAAa4J,MAAM,aAAaC,QAAStR,KAAKgB,MAAM3C,MAAM2E,WAAYkG,SAAUlJ,KAAKsH,eACvIvC,EAAAtD,EAAAuD,cAACoM,GAAA,EAAD,CAAazT,KAAK,WAAWwC,KAAK,mBAAmBsH,GAAG,mBAAmB4J,MAAM,oBAAoBC,QAAStR,KAAKgB,MAAM3C,MAAM4E,iBAAkBiG,SAAUlJ,KAAKsH,eAChKvC,EAAAtD,EAAAuD,cAACoM,GAAA,EAAD,CAAazT,KAAK,WAAWwC,KAAK,kBAAkBsH,GAAG,kBAAkB4J,MAAM,mBAAmBC,QAAStR,KAAKgB,MAAM3C,MAAM6E,gBAAiBgG,SAAUlJ,KAAKsH,iBAGnKvC,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAACkD,GAAA,EAAD,KACGnD,EAAAtD,EAAAuD,cAACoM,GAAA,EAAD,CAAazT,KAAK,WAAWwC,KAAK,aAAasH,GAAG,aAAa4J,MAAM,cAAcvN,MAAO9D,KAAKgB,MAAM3C,MAAM8E,WAAY+F,SAAUlJ,KAAKsH,eACtIvC,EAAAtD,EAAAuD,cAACoM,GAAA,EAAD,CAAazT,KAAK,WAAWwC,KAAK,eAAesH,GAAG,eAAe4J,MAAM,gBAAgBvN,MAAO9D,KAAKgB,MAAM3C,MAAM+E,aAAc8F,SAAUlJ,KAAKsH,mBAK7JvC,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAAA,MAAI0D,UAAU,eAAd,4BAGR3D,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAAA,gKAKRD,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAACkD,GAAA,EAAD,KACGnD,EAAAtD,EAAAuD,cAACoM,GAAA,EAAD,CAAazT,KAAK,WAAWwC,KAAK,wBAAwBsH,GAAG,sBAAsB4J,MAAM,uBAAuBvN,MAAO9D,KAAKgB,MAAM3C,MAAMkT,qBAAsBrI,SAAUlJ,KAAKsH,eAC7KvC,EAAAtD,EAAAuD,cAACoM,GAAA,EAAD,CAAazT,KAAK,WAAWwC,KAAK,kBAAkBsH,GAAG,kBAAkB4J,MAAM,oDAAoDvN,MAAO9D,KAAKgB,MAAM3C,MAAMmT,gBAAiBtI,SAAUlJ,KAAKsH,oBAM9MvC,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAAA,4LA7EIlF,uBCwEb2R,eAtEX,SAAAA,EAAYzQ,GAAO,IAAAL,EAAA,OAAAlC,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAAyR,IACf9Q,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAuB,KAAAvB,OAAAoC,EAAA,EAAApC,CAAAgT,GAAA3Q,KAAAd,KAAMgB,KASVgG,aAVmB,eAAA1F,EAAA7C,OAAA8C,EAAA,EAAA9C,CAAA+C,EAAAC,EAAAC,KAUJ,SAAAC,EAAOsF,GAAP,OAAAzF,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAxE,MAAA,cACX0J,EAAMC,iBADKnF,EAAAxE,KAAA,EAGLoD,EAAKK,MAAM0Q,eAAeC,aAAa,CAACC,SAAS,QAAQxK,MAAMzG,EAAKtC,MAAM+I,MAAMC,SAAS1G,EAAKtC,MAAMgJ,WACzG7D,KADK,eAAAC,EAAAhF,OAAA8C,EAAA,EAAA9C,CAAA+C,EAAAC,EAAAC,KACA,SAAAgC,EAAOmO,GAAP,IAAAlO,EAAAhF,EAAA,OAAA6C,EAAAC,EAAAK,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAArG,MAAA,cAAAqG,EAAArG,KAAA,EAEsBoD,EAAKK,MAAMsC,SAASlF,MAAM0T,KAAK,CAAC1K,MAAMzG,EAAKtC,MAAM+I,QAFvE,QAEEzD,EAFFC,EAAAmO,MAGavU,OAAOG,KAAKkG,SAAS,eAC5BlF,EAAOgF,EAAYG,MAAMkO,KAAK,IAC7BC,MAAQC,OAAOC,aAAazD,QAAQ,gBACzC/N,EAAKK,MAAMiB,MAAM8B,QAAQ+D,MAAMnJ,GAC/BgC,EAAKK,MAAMiD,QAAQpF,KAAK,eAExB8B,EAAKS,SAAS,IAThB,wBAAAwC,EAAAM,SAAAR,EAAA1D,SADA,gBAAAmE,GAAA,OAAAV,EAAAW,MAAApE,KAAA1B,YAAA,IAaL+F,MAAM,SAACC,GACJ3D,EAAKS,SAAS,CAACuG,aAAarD,EAAI8N,YAjBzB,wBAAArQ,EAAAmC,SAAAvC,EAAA3B,SAVI,gBAAAuE,GAAA,OAAAjD,EAAA8C,MAAApE,KAAA1B,YAAA,GAAAqC,EAgCnB2G,aAAe,SAACL,GACZtG,EAAKS,SAAL3C,OAAA8I,GAAA,EAAA9I,CAAA,GACKwI,EAAMO,OAAOC,GAAKR,EAAMO,OAAO1D,SAlCrBnD,EAuCnB+G,cAAgB,SAACT,GACbtG,EAAKS,SAAS,CAACuG,aAAc,MAtC7BhH,EAAKtC,MAAQ,CACT+I,MAAM,GACNC,SAAS,GACTM,aAAc,IALHhH,wEA4Cf,OACIoE,EAAAtD,EAAAuD,cAACwB,EAAA,EAAD,KACIzB,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAAC4D,GAAA,EAAD,CAAMC,SAAU7I,KAAKgH,cACjBjC,EAAAtD,EAAAuD,cAAC8D,GAAA,EAAD,KACI/D,EAAAtD,EAAAuD,cAAC+D,GAAA,EAAD,CAAOC,IAAI,SAAX,SACAjE,EAAAtD,EAAAuD,cAACiE,GAAA,EAAD,CAAOtL,KAAK,QAAQwC,KAAK,QAAQsH,GAAG,QAAQ3D,MAAO9D,KAAK3B,MAAM+I,MAAO8B,SAAUlJ,KAAKsH,gBAExFvC,EAAAtD,EAAAuD,cAAC8D,GAAA,EAAD,KACI/D,EAAAtD,EAAAuD,cAAC+D,GAAA,EAAD,CAAOC,IAAI,YAAX,YACAjE,EAAAtD,EAAAuD,cAACiE,GAAA,EAAD,CAAOtL,KAAK,WAAWwC,KAAK,WAAWsH,GAAG,WAAW3D,MAAO9D,KAAK3B,MAAMgJ,SAAU6B,SAAUlJ,KAAKsH,gBAEpGvC,EAAAtD,EAAAuD,cAAC2B,EAAA,EAAD,cACA5B,EAAAtD,EAAAuD,cAACqN,GAAA,EAAD,uCACmCtN,EAAAtD,EAAAuD,cAACsN,EAAA,EAAD,CAAMC,GAAG,WAAT,SAEnCxN,EAAAtD,EAAAuD,cAACmE,GAAA,EAAD,CAAO5D,OAAoC,KAA5BvF,KAAK3B,MAAMsJ,aAAqBnC,OAAQxF,KAAK0H,cAAe0B,MAAM,UAAUpJ,KAAK3B,MAAMsJ,yBA9D9G7H,aCyEL0S,eAxEX,SAAAA,EAAYxR,GAAO,IAAAL,EAAA,OAAAlC,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAAwS,IACf7R,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAuB,KAAAvB,OAAAoC,EAAA,EAAApC,CAAA+T,GAAA1R,KAAAd,KAAMgB,KASVgG,aAVmB,eAAA1F,EAAA7C,OAAA8C,EAAA,EAAA9C,CAAA+C,EAAAC,EAAAC,KAUJ,SAAAC,EAAOsF,GAAP,OAAAzF,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAxE,MAAA,cACX0J,EAAMC,iBADKnF,EAAAxE,KAAA,EAGLoD,EAAKK,MAAMsC,SAASlF,MAAMmF,OAAO,CAAC6D,MAAMzG,EAAKtC,MAAM+I,MAAOC,SAAS1G,EAAKtC,MAAMgJ,WAHzE,cAAAtF,EAAAxE,KAAA,EAKLoD,EAAKK,MAAM0Q,eAAeC,aAAa,CAACC,SAAS,QAAQxK,MAAMzG,EAAKtC,MAAM+I,MAAMC,SAAS1G,EAAKtC,MAAMgJ,WACzG7D,KADK,eAAAC,EAAAhF,OAAA8C,EAAA,EAAA9C,CAAA+C,EAAAC,EAAAC,KACA,SAAAgC,EAAOmE,GAAP,IAAAlE,EAAAhF,EAAA,OAAA6C,EAAAC,EAAAK,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAArG,MAAA,cAAAqG,EAAArG,KAAA,EAEsBoD,EAAKK,MAAMsC,SAASlF,MAAM0T,KAAK,CAAC1K,MAAMzG,EAAKtC,MAAM+I,QAFvE,QAEEzD,EAFFC,EAAAmO,MAGavU,OAAOG,KAAKkG,SAAS,eAC5BlF,EAAOgF,EAAYG,MAAMkO,KAAK,IAC7BC,MAAQC,OAAOC,aAAazD,QAAQ,gBACzC/N,EAAKK,MAAMiB,MAAM8B,QAAQ+D,MAAMnJ,GAC/BgC,EAAKK,MAAMiD,QAAQpF,KAAK,eAExB8B,EAAKS,SAAS,IAThB,wBAAAwC,EAAAM,SAAAR,EAAA1D,SADA,gBAAAmE,GAAA,OAAAV,EAAAW,MAAApE,KAAA1B,YAAA,IAaL+F,MAAM,SAACC,GACJ3D,EAAKS,SAAS,CAACuG,aAAarD,EAAI8N,YAnBzB,wBAAArQ,EAAAmC,SAAAvC,EAAA3B,SAVI,gBAAAuE,GAAA,OAAAjD,EAAA8C,MAAApE,KAAA1B,YAAA,GAAAqC,EAkCnB2G,aAAe,SAACL,GACZtG,EAAKS,SAAL3C,OAAA8I,GAAA,EAAA9I,CAAA,GACKwI,EAAMO,OAAOC,GAAKR,EAAMO,OAAO1D,SApCrBnD,EAyCnB+G,cAAgB,SAACT,GACbtG,EAAKS,SAAS,CAACuG,aAAc,MAxC7BhH,EAAKtC,MAAQ,CACT+I,MAAM,GACNC,SAAS,GACTM,aAAc,IALHhH,wEA8Cf,OACIoE,EAAAtD,EAAAuD,cAACwB,EAAA,EAAD,KACIzB,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAAC4D,GAAA,EAAD,CAAMC,SAAU7I,KAAKgH,cACjBjC,EAAAtD,EAAAuD,cAAC8D,GAAA,EAAD,KACI/D,EAAAtD,EAAAuD,cAAC+D,GAAA,EAAD,CAAOC,IAAI,SAAX,SACAjE,EAAAtD,EAAAuD,cAACiE,GAAA,EAAD,CAAOtL,KAAK,QAAQwC,KAAK,QAAQsH,GAAG,QAAQ3D,MAAO9D,KAAK3B,MAAM+I,MAAO8B,SAAUlJ,KAAKsH,gBAExFvC,EAAAtD,EAAAuD,cAAC8D,GAAA,EAAD,KACI/D,EAAAtD,EAAAuD,cAAC+D,GAAA,EAAD,CAAOC,IAAI,YAAX,YACAjE,EAAAtD,EAAAuD,cAACiE,GAAA,EAAD,CAAOtL,KAAK,WAAWwC,KAAK,WAAWsH,GAAG,WAAW3D,MAAO9D,KAAK3B,MAAMgJ,SAAU6B,SAAUlJ,KAAKsH,gBAEpGvC,EAAAtD,EAAAuD,cAAC2B,EAAA,EAAD,gBACA5B,EAAAtD,EAAAuD,cAACqN,GAAA,EAAD,gCAC4BtN,EAAAtD,EAAAuD,cAACsN,EAAA,EAAD,CAAMC,GAAG,UAAT,SAE5BxN,EAAAtD,EAAAuD,cAACmE,GAAA,EAAD,CAAO5D,OAAoC,KAA5BvF,KAAK3B,MAAMsJ,aAAqBnC,OAAQxF,KAAK0H,cAAe0B,MAAM,UAAUpJ,KAAK3B,MAAMsJ,yBAhE7G7H,aCsBN2S,oLArBP,OACI1N,EAAAtD,EAAAuD,cAACwB,EAAA,EAAD,KACIzB,EAAAtD,EAAAuD,cAACyB,EAAA,EAAD,KACI1B,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAAA,4MAKJD,EAAAtD,EAAAuD,cAAC0B,EAAA,EAAD,KACI3B,EAAAtD,EAAAuD,cAAA,UACID,EAAAtD,EAAAuD,cAAA,UAAID,EAAAtD,EAAAuD,cAAA,KAAG0N,KAAK,sDAAR,gBACJ3N,EAAAtD,EAAAuD,cAAA,UAAID,EAAAtD,EAAAuD,cAAA,KAAG0N,KAAK,mCAAR,yBAdZ5S,4CCeL6S,oLAZP,OACI5N,EAAAtD,EAAAuD,cAAC4N,GAAAnR,EAAD,CACIoR,MAAO,MACPzK,OAAQ,OACR0K,QAASC,GAAOC,cAChBC,YAAY,qCACZC,WAAW,WARHpT,aCUTqT,oLARP,OAAIjB,OAAOC,aAAazD,QAAQ,gBACpB3J,EAAAtD,EAAAuD,cAACoO,EAAA,EAAUpT,KAAKgB,OAEhB+D,EAAAtD,EAAAuD,cAACqO,EAAA,EAAD,CAAUd,GAAG,SAASlU,MAAO2B,KAAKgB,MAAMsS,kBAL/BxT,aC6GdyT,eAzGX,SAAAA,IAAa,IAAA5S,EAAA,OAAAlC,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAAuT,IACT5S,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAuB,KAAAvB,OAAAoC,EAAA,EAAApC,CAAA8U,GAAAzS,KAAAd,QAGJwT,aAAe,WACX7S,EAAKK,MAAM0Q,eAAeC,eACvBnO,KAAK,SAAAqO,GACJ,OAAOlR,EAAKK,MAAM0Q,eAAe+B,SAASC,UAAU7B,EAAS8B,eAE9DnQ,KAAK,SAAAqO,GACJ,OAAOlR,EAAKK,MAAMsC,SAASlF,MAAMwV,IAAI/B,EAASjQ,UAE/C4B,KAAK,SAAAqO,GACJ,IAAIlT,EAAOkT,EAAS/N,MACpBnF,EAAKsT,MAAQC,OAAOC,aAAazD,QAAQ,gBACzC/N,EAAKK,MAAMiB,MAAM8B,QAAQ+D,MAAMnJ,GAC/BgC,EAAKS,SAAS,CAAC6G,QACXlD,EAAAtD,EAAAuD,cAAA,OAAK0D,UAAU,WACX3D,EAAAtD,EAAAuD,cAACsN,EAAA,EAAD,CAAMC,GAAG,YAAT,WACAxN,EAAAtD,EAAAuD,cAAC2B,EAAA,EAAD,CAAQd,QAASlF,EAAKkT,QAAtB,aAGRlT,EAAKmT,oBAAoBnV,EAAKsB,OAE/BoE,MAAM,SAAA0P,GACLpT,EAAKkT,YAzBAlT,EA4BbmT,oBAAsB,SAAClS,GAEJ,OAAXA,QAA8BpD,IAAXoD,GACvBjB,EAAKK,MAAMsC,SAAS,gBAAgBwO,KAAK,CAACkC,MAAM,CAACpS,OAAOA,KACvD4B,KAAK,SAACG,GACH,GAAGA,EAAYnG,OAAOG,KAAKkG,SAAS,aAAa,CAC7C,IAAM1E,EAAcwE,EAAYG,MAAMkO,KACpB,OAAd7S,QAAoCX,IAAdW,GACtBwB,EAAKK,MAAMiB,MAAM8B,QAAQkQ,kBAAkB9U,GAC3CwB,EAAKS,SAAS,CAAC8S,SAAQ,QArC1BvT,EAyCbkT,OAAS,WACL3B,OAAOC,aAAagC,WAAW,gBAC/BxT,EAAKS,SAAS,CAAC6G,QAAQ,OACvBtH,EAAKK,MAAMiB,MAAM8B,QAAQ8P,SACzBlT,EAAKK,MAAMiD,QAAQpF,KAAK,MA3CxB8B,EAAKtC,MAAQ,CAAC4J,QAAQ,MAFbtH,kFA+CMyT,GACZA,EAAUnS,MAAM5D,MAAMM,KAAKyI,QAAQpH,KAAKgB,MAAMiB,MAAM5D,MAAMM,KAAKyI,QAC9DpH,KAAK8T,oBAAoB9T,KAAKgB,MAAMiB,MAAM5D,MAAMM,KAAKsB,UACZzB,IAAtCwB,KAAKgB,MAAMiB,MAAM5D,MAAMM,KAAKyI,MAC3BpH,KAAKoB,SAAS,CAAC6G,QACXlD,EAAAtD,EAAAuD,cAAA,OAAK0D,UAAU,WACX3D,EAAAtD,EAAAuD,cAACsN,EAAA,EAAD,CAAMC,GAAG,YAAT,WACAxN,EAAAtD,EAAAuD,cAAC2B,EAAA,EAAD,CAAQd,QAAS7F,KAAK6T,QAAtB,aAGR7T,KAAKoB,SAAS,CAAC6G,QAAQ,oDAK3BiK,OAAOC,aAAazD,QAAQ,sBAAuDlQ,IAApCwB,KAAKgB,MAAMiB,MAAM5D,MAAMM,KAAKyI,MAC3EpH,KAAKoB,SAAS,CAAC6G,QACflD,EAAAtD,EAAAuD,cAAA,OAAK0D,UAAU,WACX3D,EAAAtD,EAAAuD,cAACsN,EAAA,EAAD,CAAMC,GAAG,YAAT,WACAxN,EAAAtD,EAAAuD,cAAC2B,EAAA,EAAD,CAAQd,QAAS7F,KAAK6T,QAAtB,aAEG3B,OAAOC,aAAazD,QAAQ,sBAAuDlQ,IAApCwB,KAAKgB,MAAMiB,MAAM5D,MAAMM,KAAKyI,OAClFpH,KAAKwT,gDAGJ,IAAAhH,EAAAxM,KACL,OACI+E,EAAAtD,EAAAuD,cAAA,WACID,EAAAtD,EAAAuD,cAAA,cACID,EAAAtD,EAAAuD,cAAA,MAAI0D,UAAU,SACV3D,EAAAtD,EAAAuD,cAACsN,EAAA,EAAD,CAAMC,GAAG,KAAT,0BAEJvS,KAAK3B,MAAM4J,SAEflD,EAAAtD,EAAAuD,cAAA,YACID,EAAAtD,EAAAuD,cAACqP,EAAA,EAAD,KACItP,EAAAtD,EAAAuD,cAACqO,EAAA,EAAD,CAAUiB,OAAK,EAACC,KAAK,IAAIhC,GAAG,cAC5BxN,EAAAtD,EAAAuD,cAACwP,GAAD,CAAgBC,KAAK,aAAaC,OAAQ,SAACC,GAAD,OAAiB5P,EAAAtD,EAAAuD,cAAC4P,GAAcpI,EAAKxL,UAC/E+D,EAAAtD,EAAAuD,cAACwP,GAAD,CAAgBC,KAAK,WAAWC,OAAQ,SAACC,GAAD,OAAiB5P,EAAAtD,EAAAuD,cAAC6P,GAAYrI,EAAKxL,UAC3E+D,EAAAtD,EAAAuD,cAACwP,GAAD,CAAgBC,KAAK,gBAAgBC,OAAQ,SAACC,GAC1C,IAAI3T,EAAKvC,OAAAC,EAAA,EAAAD,CAAA,GAAO+N,EAAKxL,MAAU2T,GAC/B,OAAO5P,EAAAtD,EAAAuD,cAAC8P,GAAuB9T,MAEnC+D,EAAAtD,EAAAuD,cAACoO,EAAA,EAAD,CAAOqB,KAAK,SAASC,OAAQ,SAACC,GAAD,OAAiB5P,EAAAtD,EAAAuD,cAAC+P,GAAUvI,EAAKxL,UAC9D+D,EAAAtD,EAAAuD,cAACoO,EAAA,EAAD,CAAOqB,KAAK,UAAUC,OAAQ,SAACC,GAAD,OAAiB5P,EAAAtD,EAAAuD,cAACgQ,GAAWxI,EAAKxL,UAChE+D,EAAAtD,EAAAuD,cAACoO,EAAA,EAAD,CAAOqB,KAAK,SAASC,OAAQ,SAACC,GAAD,OAAiB5P,EAAAtD,EAAAuD,cAACiQ,GAAUzI,EAAKxL,UAC9D+D,EAAAtD,EAAAuD,cAACoO,EAAA,EAAD,CAAOqB,KAAK,aAAaC,OAAQ,SAACC,GAAD,OAAiB5P,EAAAtD,EAAAuD,cAACkQ,GAAc1I,EAAKxL,YAG9E+D,EAAAtD,EAAAuD,cAAA,cACID,EAAAtD,EAAAuD,cAACsN,EAAA,EAAD,CAAMC,GAAG,UAAT,SACAxN,EAAAtD,EAAAuD,cAACsN,EAAA,EAAD,CAAMC,GAAG,cAAT,sBAnGDzS,aCPZ,SAASgI,GAAMnJ,GAClB,MAAO,CACHhB,KAAM,QAASgB,QAIhB,SAASkV,KACZ,MAAO,CACHlW,KAAM,UCRP,SAASqG,GAAclF,GAC1B,MAAO,CACHnB,KAAM,kBACNmB,cAID,SAAS4F,GAAiB5F,GAC7B,MAAO,CACHnB,KAAM,qBACNmB,cAID,SAASwK,GAAiBtK,EAAGF,GAChC,MAAO,CACHnB,KAAM,qBACNqB,IACAF,cAID,SAASmV,GAAkB9U,GAC9B,MAAO,CACHxB,KAAM,sBACNwB,eCzBD,SAASgW,GAAa/V,GACzB,MAAO,CACHzB,KAAK,gBACLyB,UC6BR,IAAMgW,GAAMxG,YAvBZ,SAAyBvQ,GACvB,MAAO,CACL4D,MAAO5D,IAIX,SAA4BgX,GAC1B,IAAMC,EAAYC,6BAAmBC,EAAmBH,GAClDI,EAAkBF,6BAAmBG,EAAyBL,GAC9DM,EAAaJ,6BAAmBK,EAAqBP,GAC3D,OAAO5W,OAAAC,EAAA,EAAAD,CAAA,GAAI6W,EAAcG,EAAoBE,IAG/C,SAAoBE,EAAYC,EAAeC,GAC7C,OAAOtX,OAAAC,EAAA,EAAAD,CAAA,GACFsX,EADL,CAEE9T,MAAO,CACL5D,MAAOwX,EAAW5T,MAClB8B,QAAS+R,MAKHlH,CAAyD2E,IAEtDyC,eAAWZ,ICtBNa,QACW,cAA7B/D,OAAOoB,SAAS4C,UAEe,UAA7BhE,OAAOoB,SAAS4C,UAEhBhE,OAAOoB,SAAS4C,SAASnM,MACvB,oFClBNoM,EAAAC,EAAAC,EAAA,mCAAA3E,KA2BO,IAAMA,GAAiB4E,MACzBC,UAAUD,IAASE,SAASC,QAC5BF,UAAUD,IAASI,SACnBH,UAAUD,IAASK,eAAe,CAC/BC,QAAQ1E,OAAOC,gBAIjB0E,GAAcC,IAAiBpF,GAAgB,CAAC,QAAS,iBACzDpU,GChCS,SAAwBiC,EAAoBwX,GACvD,IAAMC,EAA0B9E,OAAO+E,kBAAoB/E,OAAO+E,mBAAP/E,CAA2BgF,eAAeA,cAErG,OADmCC,kBAAe/S,WAAf,EAAA3F,OAAAkL,EAAA,EAAAlL,CAAmB2Y,GAAnBD,CAAgCH,EAC5DK,CAA2BC,EAAY/X,GAAoBwX,GD6BxDQ,CAAeV,GAAY,CAAClY,KAAK,GAAGQ,YAAY,GAAGC,OAAO,KAClEkE,GAAWkU,2BAAiBla,GAAM+X,SAAUwB,IAG5CY,GACF1S,EAAAtD,EAAAuD,cAAC0S,GAAA,wBAAD,CAAyBC,QAASC,MAC9B7S,EAAAtD,EAAAuD,cAAC6S,EAAA,EAAD,CAAUva,MAAOA,IACbyH,EAAAtD,EAAAuD,cAAC8S,EAAA,EAAD,KACI/S,EAAAtD,EAAAuD,cAAC+S,GAAD,CAAKrG,eAAgBA,GAAgBpO,SAAUA,GAAU0U,kBAAmBA,yBAO5FC,IAASvD,OAAO+C,GAAQS,SAASC,eAAe,SD8E1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9U,KAAK,SAAA+U,GACjCA,EAAaC","file":"static/js/main.19584cea.chunk.js","sourcesContent":["/*\r\n A basic middleware logger\r\n See http://redux.js.org/docs/advanced/Middleware.html\r\n */\r\n\r\nconst logger = store => next => action => {\r\n    console.groupCollapsed(action.type); // eslint-disable-line no-console\r\n    console.info('dispatching', action); // eslint-disable-line no-console\r\n    const result = next(action);\r\n    console.log('next state', store.getState()); // eslint-disable-line no-console\r\n    console.groupEnd(action.type); // eslint-disable-line no-console\r\n    return result;\r\n  };\r\n  \r\n  export default logger;","// eslint no-unused-vars: 0,\r\n\r\nimport reduxThunk from 'redux-thunk';\r\nimport reduxPromiseMiddleware from 'redux-promise-middleware';\r\n// import { routerMiddleware } from 'react-router-redux';\r\n// import { browserHistory } from 'react-router';\r\nimport logger from './logger'; // eslint-disable-line no-unused-vars\r\n\r\nexport default [\r\n  reduxThunk, // Thunk middleware for Redux\r\n  reduxPromiseMiddleware(), // Resolve, reject promises with conditional optimistic updates\r\n  // routerMiddleware(browserHistory), // !! IMPORTANT for location.href changes\r\n  logger, // A basic middleware logger\r\n];","function users(state={},action){\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            return {...action.user};\r\n        case 'LOGOUT':\r\n            return {};\r\n        default:\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default users;","function escapRooms(state=[],action){\r\n    switch(action.type){\r\n        case 'ADD_ESCAPE_ROOM':\r\n            state.push(action.escapeRoom);\r\n            return state.slice();\r\n        case 'REMOVE_ESCAPE_ROOM':\r\n            const i = state.indexOf(action.escapeRoom);\r\n            state.pop(i);\r\n            return state.slice();\r\n        case 'UPDATE_ESCAPE_ROOM':\r\n            state[action.i] = action.escapeRoom;\r\n            return state.slice(); \r\n        case 'UPDATE_ESCAPE_ROOMS':\r\n            return action.escapeRooms.slice();\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default escapRooms;","function videos(state = [], action) {\r\n    switch(action.type)\r\n    {\r\n        case 'UPDATE_VIDEOS':\r\n            return Object.assign(state,{videos:action.videos});\r\n        default:\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default videos;","import { combineReducers } from 'redux';\r\nimport { routerReducer } from 'react-router-redux';\r\n\r\nimport users from './users';\r\nimport escapeRooms from './escapeRooms';\r\nimport videos from './videos';\r\n\r\nexport default function(reduxifiedServices){\r\n    return combineReducers({\r\n        usersService: reduxifiedServices.users.reducer,\r\n        escapeRoomsService: reduxifiedServices['escape-rooms'].reducer,\r\n        routing: routerReducer,\r\n        user:users,\r\n        escapeRooms,\r\n        videos\r\n    })\r\n}\r\n","import uniqid from 'uniqid';\r\n\r\nexport default class Component {\r\n    constructor(){\r\n        this._id = uniqid();\r\n        this.name = \"\";\r\n        this.description = \"\";\r\n        this.inputComponents = [];\r\n        this.outputComponents = [];\r\n        this.type = \"Component\";\r\n        this.position = {top:0,left:0};\r\n    }\r\n}","import Component from './Component';\r\nexport default class Area extends Component {\r\n    constructor(){\r\n        super();\r\n        this.type=\"Area\";\r\n    }   \r\n}","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Dropdown, DropdownToggle, DropdownMenu, DropdownItem , ListGroup, ListGroupItem , Button } from 'reactstrap';\r\nimport { saveAs } from 'file-saver';\r\nimport jsPDF from 'jspdf';\r\nimport Area from '../models/Area';\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: [false,false],\r\n            firstLoad: true\r\n        }\r\n    }\r\n    handleToggle = (i) => (e) => {\r\n        var dropdownOpen = this.state.dropdownOpen;\r\n        dropdownOpen[i] = !dropdownOpen[i];\r\n        this.setState({dropdownOpen});\r\n    }\r\n    handleClick = async (e) => {\r\n        const userId = this.props.redux.state.user._id;\r\n        const newEscapeRoom = {\r\n            userId: userId,\r\n            details:{\r\n                name: \"Unnamed\",\r\n                designers: \"\",\r\n                theme: \"\",\r\n                minPlayers: \"\",\r\n                maxPlayers: \"\",\r\n                targetTime: \"\",\r\n                difficulty: \"3\",\r\n                objective: \"\",\r\n                description: \"\"\r\n            },\r\n            accessibility:{\r\n                protanomaly: false,\r\n                protanopia: false,\r\n                deuteranomaly: false,\r\n                deuteranopia: false,\r\n                tritanomaly: false,\r\n                tritanopia: false,\r\n                coneMonochromacy: false,\r\n                rodMonochromacy: false,\r\n                largeFonts: false,\r\n                highContrast: false\r\n            },\r\n            components: [new Area()]\r\n        }\r\n        await this.props.services['escape-rooms'].create(newEscapeRoom)\r\n            .then(async (queryResult) => {\r\n                if(queryResult.action.type.includes('FULFILLED')){\r\n                    const escapeRoom = queryResult.value;\r\n                    if (escapeRoom!==null){\r\n                        const i = this.props.redux.state.escapeRooms.length;\r\n                        this.props.redux.actions.addEscapeRoom(escapeRoom);\r\n                        this.props.history.push('/designer/'+i);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err);\r\n            });\r\n    }\r\n    saveJSON(escapeRoom) {\r\n        const blob = new Blob([JSON.stringify(escapeRoom)],{type:'text/plain;charset=utf-8'});\r\n        saveAs(blob, escapeRoom.details.name+\".json\");\r\n    }\r\n    savePDF(escapeRoom) {\r\n        var doc = new jsPDF();\r\n        doc.text(JSON.stringify(escapeRoom),10,10);\r\n        doc.save(escapeRoom.details.name+'.pdf');\r\n    }\r\n    handleItemClick = (i, action) => (e) => {\r\n        const escapeRoom = this.props.redux.state.escapeRooms[i];\r\n        const escapeRoomService = this.props.services['escape-rooms'];\r\n        const removeEscapeRoom = this.props.redux.actions.removeEscapeRoom;\r\n        switch(action){\r\n            case 'EDIT':\r\n                this.props.history.push('/designer/'+i);\r\n                break;\r\n            case 'JSON':\r\n                this.saveJSON(escapeRoom);\r\n                break;\r\n            case 'PDF':\r\n                this.savePDF(escapeRoom);\r\n                break;\r\n            case 'DELETE':\r\n                escapeRoomService.remove(escapeRoom._id);\r\n                removeEscapeRoom(escapeRoom);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    mapEscapeRoomToList = (escapeRoom,i) => {\r\n        return (\r\n        <ListGroupItem key={i}>{escapeRoom.details.name}\r\n            <Dropdown style={{display:'inline', position: 'absolute', right:'20px'}} isOpen={this.state.dropdownOpen[i]} toggle={this.handleToggle(i)}>\r\n                <DropdownToggle caret/>\r\n                <DropdownMenu right>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'EDIT')}>Edit</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'JSON')}>Export as JSON</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'PDF')}>Export as PDF</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'DELETE')}>Delete</DropdownItem>\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        </ListGroupItem>)\r\n    };\r\n    render() {\r\n        const escapeRooms = this.props.redux.state.escapeRooms || [];\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Button block onClick={this.handleClick}>NEW</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <ListGroup>\r\n                            {escapeRooms.map(this.mapEscapeRoomToList)}\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Dashboard;","import React, {Component}  from 'react';\r\nimport { Container, Row, Col, Card, CardImg, CardBody,\r\n    CardTitle, Alert, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nclass Profile extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            edit: false,\r\n            errorMessage: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            _id: \"\"\r\n        };\r\n    }\r\n    //Handles login form submit event\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await this.props.services.users.update({_id:this.state._id, email:this.state.email, password:this.state.password});\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    //Handles error dismiss\r\n    handleDismiss = (event) => {\r\n        this.setState({errorMessage: \"\"});\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        switch (event.target.id) {\r\n            case 'editButton':\r\n                this.setState({edit:true});\r\n                break;\r\n            case 'saveButton':\r\n                let user = this.props.redux.state.user;\r\n                user.email = this.state.email;\r\n                user.password = this.state.password;\r\n                this.props.services.users.update(this.state._id,user)\r\n                .then((output)=>{\r\n                    let user = output.value;\r\n                    this.props.redux.actions.login(user);\r\n                    this.setState({edit:false});\r\n                });\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const user = this.props.redux.state.user;\r\n        this.setState({\r\n            email: user.email\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(oldProps){\r\n        const newProps = this.props;\r\n        if(oldProps.redux.state.user.email !== newProps.redux.state.user.email){\r\n            const user = this.props.redux.state.user;\r\n            this.setState({\r\n                email: user.email,\r\n                _id: user._id\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.profile = \r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <CardImg height=\"50%\" src={this.props.redux.state.user.avatar} alt=\"Profile Image\" />\r\n                        <CardBody>\r\n                        <CardTitle className=\"text-center\">{this.props.redux.state.user.email}</CardTitle>\r\n                        <Button id=\"editButton\" block={true} className=\"text-center\" onClick={this.handleClick}>Edit Profile</Button>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        this.editProfile = \r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup>\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"password\">Password</Label>\r\n                            <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <Button id=\"saveButton\" onClick={this.handleClick}>Save</Button>\r\n                        <Alert isOpen={this.state.errorMessage !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.errorMessage}</Alert>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        if(this.state.edit)\r\n            return this.editProfile;\r\n        else \r\n            return this.profile;\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, {Component}  from 'react';\r\nimport { Container, Dropdown, DropdownToggle , DropdownMenu , DropdownItem , Row, Col, Nav, NavItem, NavLink, TabContent, TabPane , Button } from 'reactstrap';\r\nimport { Details, Accessibility, Design } from './index';\r\nimport classnames from 'classnames';\r\nimport { saveAs } from 'file-saver';\r\nimport jsPDF from 'jspdf';\r\n\r\nclass EscapeRoomDesigner extends Component {\r\n    constructor(){\r\n        super();\r\n        const newEscapeRoom = {\r\n            userId: \"\",\r\n            details:{\r\n                name: \"\",\r\n                designers: \"\",\r\n                theme: \"\",\r\n                minPlayers: \"\",\r\n                maxPlayers: \"\",\r\n                targetTime: \"\",\r\n                difficulty: \"3\",\r\n                objective: \"\",\r\n                description: \"\"\r\n            },\r\n            accessibility:{\r\n                protanomaly: false,\r\n                protanopia: false,\r\n                deuteranomaly: false,\r\n                deuteranopia: false,\r\n                tritanomaly: false,\r\n                tritanopia: false,\r\n                coneMonochromacy: false,\r\n                rodMonochromacy: false,\r\n                largeFonts: false,\r\n                highContrast: false\r\n            },\r\n            components: []\r\n        }\r\n        this.state = {id: null, activeTab:'details', dropdownOpen: false, escapeRoom:newEscapeRoom};\r\n    }\r\n    saveJSON(escapeRoom) {\r\n        const blob = new Blob([JSON.stringify(escapeRoom)],{type:'text/plain;charset=utf-8'});\r\n        saveAs(blob, escapeRoom.details.name+\".json\");\r\n    }\r\n    savePDF(escapeRoom) {\r\n        var doc = new jsPDF();\r\n        doc.text(JSON.stringify(escapeRoom),10,10);\r\n        doc.save(escapeRoom.details.name+'.pdf');\r\n    }\r\n    handleClick = (action) => (e) => {\r\n        switch(action){\r\n            case 'EXIT':\r\n                this.props.services['escape-rooms'].update(this.state.escapeRoom._id,this.state.escapeRoom).then(() => {\r\n                    this.props.redux.actions.updateEscapeRoom(this.state.id,this.state.escapeRoom);\r\n                    this.props.history.push('/');\r\n                });\r\n                break;\r\n            case 'JSON':\r\n                this.props.services['escape-rooms'].update(this.state.escapeRoom._id,this.state.escapeRoom).then(() => {\r\n                    this.saveJSON(this.state.escapeRoom);\r\n                });\r\n                break;\r\n            case 'PDF':\r\n                this.props.services['escape-rooms'].update(this.state.escapeRoom._id,this.state.escapeRoom).then(() => {\r\n                    this.savePDF(this.state.escapeRoom);\r\n                });\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        })\r\n    }\r\n    //Changes state on input change\r\n    handleDetailsChange = (state) => { \r\n        var escapeRoom = {...this.state.escapeRoom};\r\n        var newState = {...escapeRoom.details, ...state};\r\n        escapeRoom.details = newState;\r\n        this.setState({escapeRoom});\r\n    }\r\n    //Changes state on input change\r\n    handleAccessibilityChange = (state) => { \r\n        var escapeRoom = {...this.state.escapeRoom};\r\n        var newState = {...this.state.escapeRoom.accessibility, ...state};\r\n        escapeRoom.accessibility = newState;\r\n        this.setState({escapeRoom});\r\n    }\r\n    //Changes state on input change\r\n    handleDesignChange = (state) => { \r\n        var escapeRoom = {...this.state.escapeRoom};\r\n        var newState = [...state];\r\n        escapeRoom.components = newState;\r\n        this.setState({escapeRoom});\r\n    }\r\n    handleToggle = (e) => {\r\n        this.setState({dropdownOpen: !this.state.dropdownOpen});\r\n    }\r\n    handleNav = (tab) => (e) => {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const id = this.props.match.params.id;\r\n        const escapeRoom = this.props.redux.state.escapeRooms[id];\r\n        if(escapeRoom===undefined){\r\n            this.props.history.push('/');\r\n        }\r\n        this.setState({id: id, escapeRoom: escapeRoom},()=>{\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col xs=\"3\"><Button onClick={this.handleClick('EXIT')}>Save and Exit</Button></Col>\r\n                    <Col xs=\"3\">\r\n                        <Dropdown isOpen={this.state.dropdownOpen} toggle={this.handleToggle}>\r\n                            <DropdownToggle caret>Save and Export</DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem onClick={this.handleClick('JSON')}>Export as JSON</DropdownItem>\r\n                                <DropdownItem onClick={this.handleClick('PDF')}>Export as PDF</DropdownItem>\r\n                            </DropdownMenu>\r\n                        </Dropdown>\r\n                    </Col>\r\n                    <Col xs=\"6\"/>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Nav tabs>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'details'})}\r\n                                    onClick={this.handleNav('details')}    \r\n                                >\r\n                                    Details\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'accessibility'})}\r\n                                    onClick={this.handleNav('accessibility')}    \r\n                                >\r\n                                    Accessibility\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'design'})}\r\n                                    onClick={this.handleNav('design')}    \r\n                                >\r\n                                    Design\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <TabContent activeTab={this.state.activeTab}>\r\n                            <TabPane tabId=\"details\">\r\n                                <Details state={this.state.escapeRoom.details} handleChange={this.handleDetailsChange}/>\r\n                            </TabPane>\r\n                            <TabPane tabId=\"accessibility\">\r\n                                <Accessibility state={this.state.escapeRoom.accessibility} handleChange={this.handleAccessibilityChange}/>\r\n                            </TabPane>\r\n                            <TabPane tabId=\"design\">\r\n                                <Design state={{components:this.state.escapeRoom.components}} handleChange={this.handleDesignChange}/>\r\n                            </TabPane>\r\n                        </TabContent>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default EscapeRoomDesigner;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Form, FormGroup, Label, Input} from 'reactstrap';\r\n\r\nclass Details extends Component {\r\n    //Changes state on input change\r\n    handleChange = (event) => { \r\n        var state = {};\r\n        state[event.target.id] = event.target.value;    \r\n        this.props.handleChange(state);\r\n    }\r\n    render(){\r\n        return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Room Name</Label>\r\n                            <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Room Name\" value={this.props.state.name} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"designers\">Designers</Label>\r\n                            <Input type=\"text\" name=\"designers\" id=\"designers\" placeholder=\"Designer(s)\" value={this.props.state.designers} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"theme\">Theme</Label>\r\n                            <Input type=\"text\" name=\"theme\" id=\"theme\" placeholder=\"theme\" value={this.props.state.theme} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label>Players</Label>\r\n                            <Input type=\"text\" name=\"minPlayers\" id=\"minPlayers\" placeholder=\"Min\" value={this.props.state.minPlayers} onChange={this.handleChange}/>\r\n                            <Input type=\"text\" name=\"maxPlayers\" id=\"maxPlayers\" placeholder=\"Max\" value={this.props.state.maxPlayers} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"targetTime\">Target Time</Label>\r\n                            <Input type=\"text\" name=\"targetTime\" id=\"targetTime\" placeholder=\"Time\" value={this.props.state.targetTime} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"difficulty\">Difficulty</Label>\r\n                            <Input type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" id=\"difficulty\" value={this.props.state.difficulty} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </Col>\r\n                <Col>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"objective\">Objective</Label>\r\n                            <Input type=\"text\" name=\"objective\" id=\"objective\" placeholder=\"Main Objective\" value={this.props.state.objective} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"description\">Description</Label>\r\n                            <Input type=\"textarea\" name=\"description\" id=\"description\" placeholder=\"Description\" value={this.props.state.description} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>)\r\n    }\r\n}\r\n\r\nexport default Details;","import React, {Component} from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Pallet, ComponentArranger, ComponentDetails } from './index';\r\nimport Area from '../models/Area';\r\n\r\nclass Design extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {selected: {}};\r\n    }\r\n    handlePalletItemClick = (item) => {\r\n        switch(item){\r\n            case 'Area':\r\n                var components = this.props.state.components;\r\n                components.push(new Area());\r\n                this.props.handleChange(components);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    handleComponentClick = (component) => (e) => {\r\n        e.stopPropagation();\r\n        this.setState({selected:component});\r\n    }\r\n    handleComponentDrop = (component, parentId, isInput = true) => {\r\n        var components = [...this.props.state.components];\r\n        if(parentId == null){\r\n            components.push(component);\r\n            this.props.handleChange(components);\r\n            return;\r\n        } else {\r\n            components.forEach((rootComponent,index,components)=>{\r\n                components[index] = this.removeComponent(rootComponent,component._id);\r\n                components[index] = this.addComponent(rootComponent,parentId,isInput,component);\r\n            })\r\n            this.props.handleChange(components);\r\n        }\r\n    }\r\n    handleDidNotDrop = (component) => {\r\n        var components = [...this.props.state.components]\r\n        components.forEach((rootComponent,index,components)=>{\r\n            components[index] = this.removeComponent(rootComponent,component._id);\r\n            if(components[index]==null){\r\n                components.pop(index);\r\n            }\r\n        })\r\n        this.props.handleChange(components);\r\n    }\r\n    //Changes state on input change\r\n    handleComponentDetailsChange = (state) => { \r\n        var newComponent = {...this.props.selected, ...state};\r\n        var components = [...this.props.state.components];\r\n        components.forEach((component,index,components)=>{\r\n            components[index] = this.updateComponent(component, newComponent);\r\n        });\r\n        this.props.handleChange(components);\r\n        components.forEach((component,index,components)=>{\r\n            newComponent = this.findComponent(component,newComponent._id);\r\n        })\r\n\r\n        this.setState({selected:newComponent});\r\n    }\r\n    updateComponent = (rootComponent, newComponent) => {\r\n        if (rootComponent._id === newComponent._id){\r\n            rootComponent = {...rootComponent,...newComponent};\r\n            return rootComponent;\r\n        }\r\n        else if(rootComponent.inputComponents.length > 0 || rootComponent.outputComponents.length > 0){\r\n            for (var list of [rootComponent.inputComponents, rootComponent.outputComponents]){\r\n                list.forEach((component,index,components)=>{\r\n                    components[index] = this.updateComponent(component,newComponent);\r\n                })\r\n            }\r\n        }\r\n        return rootComponent;\r\n    }\r\n    findComponent(rootComponent,id){\r\n        var foundComponent = null;\r\n        if(rootComponent._id===id){\r\n            return rootComponent;\r\n        }\r\n        for (var list of [rootComponent.inputComponents, rootComponent.outputComponents]){\r\n            list.forEach((component,index,components)=>{\r\n                var found = this.findComponent(component);\r\n                if (found!=null){\r\n                    foundComponent = found;\r\n                }\r\n            });\r\n        }\r\n        return foundComponent;\r\n    }\r\n    removeComponent(rootComponent,id){\r\n        if (rootComponent._id === id){\r\n            rootComponent = null;\r\n            return rootComponent;\r\n        }\r\n        else if(rootComponent.inputComponents.length > 0 || rootComponent.outputComponents.length > 0){\r\n            for (var list of [rootComponent.inputComponents, rootComponent.outputComponents]){\r\n                list.forEach((component,index,components)=>{\r\n                    if(component === null || component._id === id){\r\n                        components.pop(index);\r\n                    } else {\r\n                        component = this.removeComponent(component,id);\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return rootComponent;\r\n    }\r\n    addComponent(rootComponent,parentId,isInput,newComponent){\r\n        if (rootComponent._id === parentId){\r\n            if(isInput){\r\n                rootComponent.inputComponents.push(newComponent);\r\n            } else {\r\n                rootComponent.outputComponents.push(newComponent);\r\n            }\r\n            return rootComponent;\r\n        }\r\n        else if(rootComponent.inputComponents.length > 0 || rootComponent.outputComponents.length > 0){\r\n            for (var list of [rootComponent.inputComponents, rootComponent.outputComponents]){\r\n                list.forEach((component,index,components)=>{\r\n                    if(component._id === parentId){\r\n                        if(isInput){\r\n                            component.inputComponents.push(newComponent);\r\n                        }else {\r\n                            component.outputComponents.push(newComponent);   \r\n                        }\r\n                        components[index] = component;\r\n                    } else {\r\n                        component = this.addComponent(component,parentId,isInput,newComponent);\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return rootComponent;\r\n    }\r\n    render(){\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col xs=\"2\">\r\n                        <Pallet handleClick={this.handlePalletItemClick}/>\r\n                    </Col>\r\n                    <Col xs=\"8\">\r\n                        <ComponentArranger handleDidNotDrop={this.handleDidNotDrop} handleComponentDrop={this.handleComponentDrop} handleComponentClick={this.handleComponentClick} components={this.props.state.components}/>            \r\n                    </Col>\r\n                    <Col xs=\"2\">\r\n                        <ComponentDetails selected={this.state.selected} handleChange={this.handleComponentDetailsChange}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Design;","import Component from './Component';\r\nexport default class Puzzle extends Component {\r\n    constructor(){\r\n        super();\r\n        this.puzzleType=\"\";\r\n        this.type=\"Puzzle\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Lock extends Component {\r\n    constructor(){\r\n        super();\r\n        this.lockType=\"\";\r\n        this.type=\"Puzzle\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Event extends Component {\r\n    constructor(){\r\n        super();\r\n        this.eventType=\"\";\r\n        this.type=\"Puzzle\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Music extends Component {\r\n    constructor(){\r\n        super();\r\n        this.startTime=\"\";\r\n        this.endTime=\"\"\r\n        this.type=\"Music\";\r\n    }   \r\n}","import React, {Component}  from 'react';\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport { DropTarget } from 'react-dnd';\r\nimport { Puzzle, Event, Music, Lock } from '../models/index';\r\nimport ComponentDnDSource from './ComponentDnDSource';\r\n\r\nconst Types = {\r\n    COMPONENT: 'COMPONENT'\r\n}\r\n\r\nconst componentTarget = {\r\n    drop(props,monitor,component){\r\n        if (monitor.didDrop()){\r\n            return;\r\n        }\r\n        const item = monitor.getItem();\r\n        const isInput = props.isInput;\r\n        component.handleComponentDrop(item,isInput);\r\n        return {moved:true};\r\n    }\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        isOverCurrent: monitor.isOver({shallow:true}),\r\n        canDrop: monitor.canDrop(),\r\n        itemType: monitor.getItemType()\r\n    }\r\n}\r\n\r\nclass ComponentDnDTarget extends Component {\r\n    handleComponentDrop(item,isInput=true){\r\n        var component = null;\r\n        if (item.id!==undefined){\r\n            switch(item.id){\r\n                case 'Puzzle':\r\n                    component = new Puzzle();\r\n                    break;\r\n                case 'Lock':\r\n                    component = new Lock();\r\n                    break;\r\n                case 'Event':\r\n                    component = new Event();\r\n                    break;\r\n                case 'Music':\r\n                    component = new Music();\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        } else {\r\n            component = item;\r\n        }\r\n        this.props.handleComponentDrop(component,this.props.component._id,isInput);\r\n    }\r\n    handleDidNotDrop = (component) => {\r\n        this.props.handleDidNotDrop(component);\r\n    }\r\n    render() {\r\n        var classNames;\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames=\"canDrop\";\r\n        } else if(this.props.isOver){\r\n            classNames=\"cantDrop\";\r\n        }\r\n        return this.props.connectDropTarget(\r\n            <div className={classNames} key={this.props.component._id}>\r\n                <Card className={this.props.component.type} onClick={this.props.handleComponentClick(this.props.component)}>\r\n                    <CardBody>\r\n                        {this.props.component.inputComponents.map((component,i)=>{\r\n                            return(<ComponentDnDSource isTarget handleComponentDrop={this.props.handleComponentDrop} handleComponentClick={this.props.handleComponentClick} handleDidNotDrop={this.props.handleDidNotDrop} key={i} component={component} id={component.type}/>)\r\n                        })}\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DropTarget(Types.COMPONENT, componentTarget, collect)(ComponentDnDTarget);","import React, {Component} from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport ComponentDnDTarget from './ComponentDnDTarget';\r\nimport { Row, Col } from 'reactstrap'\r\nimport '../styles/Component.css';\r\n\r\n// Drag sources and drop targets only interact\r\n// if they have the same string type.\r\n// You want to keep types in a separate file with\r\n// the rest of your app's constants.\r\nconst Types = {\r\n  COMPONENT: 'COMPONENT'\r\n};\r\n\r\n/**\r\n * Specifies the drag source contract.\r\n * Only `beginDrag` function is required.\r\n */\r\nconst componentSource = {\r\n  canDrag(props) {\r\n    // You can disallow drag based on props\r\n    return true;\r\n  },\r\n\r\n  isDragging(props, monitor) {\r\n    return monitor.getItem().id === props.id;\r\n  },\r\n\r\n  beginDrag(props, monitor, component) {\r\n    // Return the data describing the dragged item\r\n    var item\r\n    if(props.component === undefined){\r\n      item = {id: props.id}\r\n    } else {\r\n      item = {...props.component};\r\n    }\r\n    return item;\r\n  },\r\n\r\n  endDrag(props, monitor, component) {\r\n    if (!monitor.didDrop()) {\r\n      if(props.component!==undefined||props.component!==null)\r\n        component.handleDidNotDrop(props.component);\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    // Call this function inside render()\r\n    // to let React DnD handle the drag events:\r\n    connectDragSource: connect.dragSource(),\r\n    // You can ask the monitor about the current drag state:\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nclass ComponentDnDSource extends Component{\r\n  handleDidNotDrop = (component)=>{\r\n    if(this.props.handleDidNotDrop!==undefined)\r\n      this.props.handleDidNotDrop(component);\r\n  }\r\n  render() {\r\n      var target;\r\n      if (this.props.isTarget){\r\n        target = (\r\n          <div>  \r\n            <Row>\r\n              <Col><ComponentDnDTarget isInput={true} component={this.props.component} handleDidNotDrop={this.props.handleDidNotDrop} handleComponentDrop={this.props.handleComponentDrop} handleComponentClick={this.props.handleComponentClick}/></Col>\r\n              <Col><ComponentDnDTarget isInput={false} component={this.props.component} handleDidNotDrop={this.props.handleDidNotDrop} handleComponentDrop={this.props.handleComponentDrop} handleComponentClick={this.props.handleComponentClick}/></Col>\r\n            </Row>\r\n          </div>\r\n        );\r\n      }\r\n      var style = {};\r\n      if (this.props.component!==undefined){\r\n        style.top = this.props.component.position.top;\r\n        style.left = this.props.component.position.left;\r\n        style.position = 'relative';\r\n      }\r\n      var outputComponents; \r\n      if(this.props.component!==undefined){\r\n        outputComponents = this.props.component.outputComponents.map((component,i)=>{\r\n          return (<Col key={i}><ComponentDnDSource isTarget connectDragSource={this.props.connectDragSource} handleComponentDrop={this.props.handleComponentDrop} handleComponentClick={this.props.handleComponentClick} handleDidNotDrop={this.props.handleDidNotDrop} key={i} component={component} id={component.type}/></Col>)\r\n        });\r\n      }  \r\n      return this.props.connectDragSource(\r\n          <div className=\"component\" style={style} onClick={this.props.handleComponentClick(this.props.component)}>\r\n              <Row>\r\n                <Col>\r\n                    {this.props.id}\r\n                    {target}\r\n                </Col>\r\n                {\r\n                  outputComponents\r\n                }\r\n              </Row>            \r\n          </div>\r\n      )\r\n  }\r\n};\r\n\r\nexport default DragSource(Types.COMPONENT, componentSource, collect)(ComponentDnDSource);","import React, {Component}  from 'react';\r\nimport { Card, CardBody ,CardTitle } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport { DropTarget } from 'react-dnd';\r\nimport ComponentDnDSource from './ComponentDnDSource';\r\nimport { Puzzle, Lock, Music, Event } from '../models/index.js';\r\n\r\nconst Types = {\r\n    COMPONENT: 'COMPONENT'\r\n}\r\n\r\nconst componentTarget = {\r\n    drop(props,monitor,component){\r\n        if (monitor.didDrop() || !component || typeof props.component===undefined){\r\n            return;\r\n        }\r\n        const item = monitor.getItem();\r\n        if (item.position === undefined){\r\n            item.position = {top:0,left:0};\r\n        } else {\r\n            const delta = monitor.getDifferenceFromInitialOffset()\r\n            item.position.left = Math.round(item.position.left + delta.x);\r\n            item.position.top = Math.round(item.position.top + delta.y);\r\n        }\r\n        component.handleComponentDrop(item);\r\n        return {moved:true};\r\n    }\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        isOverCurrent: monitor.isOver(),\r\n        canDrop: monitor.canDrop(),\r\n        itemType: monitor.getItemType()\r\n    }\r\n}\r\n\r\nclass AreaDnDTarget extends Component {\r\n    handleComponentDrop(item,isInput=false){\r\n        var component = null;\r\n        if (item.id!==undefined && item._id === undefined){\r\n            switch(item.id){\r\n                case 'Puzzle':\r\n                    component = new Puzzle();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Lock':\r\n                    component = new Lock();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Event':\r\n                    component = new Event();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Music':\r\n                    component = new Music();\r\n                    component.position = item.position;\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        } else {\r\n            component = item;\r\n        }\r\n        this.props.handleComponentDrop(component,this.props.component._id,isInput);\r\n    }\r\n    render() {\r\n        var classNames;\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames=\"canDrop\";\r\n        } else if(this.props.isOver){\r\n            classNames=\"cantDrop\";\r\n        }\r\n        return this.props.connectDropTarget(\r\n            <div className={classNames} key={this.props.component._id}>\r\n                <Card className={this.props.component.type} onClick={this.props.handleComponentClick(this.props.component)}>\r\n                    <CardBody>\r\n                        <CardTitle>{this.props.component.type}</CardTitle>\r\n                        {this.props.component.outputComponents.map((component,i)=>{\r\n                            return(<ComponentDnDSource isRoot isTarget handleComponentDrop={this.props.handleComponentDrop} handleComponentClick={this.props.handleComponentClick} handleDidNotDrop={this.props.handleDidNotDrop} key={i} component={component} id={component.type}/>)\r\n                        })}\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DropTarget(Types.COMPONENT, componentTarget, collect)(AreaDnDTarget);","import React, {Component} from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport AreaDnDTarget from './AreaDnDTarget';\r\nimport '../styles/Component.css';\r\nimport { Card } from 'reactstrap';\r\n\r\n// Drag sources and drop targets only interact\r\n// if they have the same string type.\r\n// You want to keep types in a separate file with\r\n// the rest of your app's constants.\r\nconst Types = {\r\n  AREA: 'AREA'\r\n};\r\n\r\n/**\r\n * Specifies the drag source contract.\r\n * Only `beginDrag` function is required.\r\n */\r\nconst areaSource = {\r\n  canDrag(props) {\r\n    // You can disallow drag based on props\r\n    return true;\r\n  },\r\n\r\n  isDragging(props, monitor) {\r\n    // If your component gets unmounted while dragged\r\n    // (like a card in Kanban board dragged between lists)\r\n    // you can implement something like this to keep its\r\n    // appearance dragged:\r\n    return monitor.getItem().id === props.id;\r\n  },\r\n\r\n  beginDrag(props, monitor, component) {\r\n    // Return the data describing the dragged item\r\n    var item = null;\r\n    if (props.id!==undefined){\r\n       item = { id: props.id };\r\n    } else {\r\n       item = { component: props.component };\r\n    }\r\n    return item;\r\n  },\r\n\r\n  endDrag(props, monitor, component) {\r\n    if (!monitor.didDrop()) {\r\n      if (props.handleDidNotDrop){\r\n        props.handleDidNotDrop(props.component);\r\n      }\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    // Call this function inside render()\r\n    // to let React DnD handle the drag events:\r\n    connectDragSource: connect.dragSource(),\r\n    // You can ask the monitor about the current drag state:\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nclass AreaDnDSource extends Component{\r\n    render() {\r\n      var target;\r\n      if (this.props.isTarget){\r\n        target = (\r\n          <AreaDnDTarget component={this.props.component} handleDidNotDrop={this.props.handleDidNotDrop} handleComponentDrop={this.props.handleComponentDrop} handleComponentClick={this.props.handleComponentClick}/>\r\n        );\r\n      }\r\n      return this.props.connectDragSource(\r\n          <div onClick={this.props.handleComponentClick(this.props.component)}>\r\n            <Card className={\"component\"}>\r\n              {this.props.id}\r\n              {target}\r\n            </Card>\r\n          </div>\r\n      )\r\n    }\r\n};\r\n\r\nexport default DragSource(Types.AREA, areaSource, collect)(AreaDnDSource);","import React, {Component}  from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport AreaDnD from './AreaDnDSource';\r\nimport ComponentDnD from './ComponentDnDSource';\r\n\r\nclass Pallet extends Component {\r\n    handleComponentClick = (e) => {\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h3>Pallet</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <AreaDnD id=\"Area\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <ComponentDnD id=\"Puzzle\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <ComponentDnD id=\"Prop\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <ComponentDnD id=\"Event\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <ComponentDnD id=\"Music\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Pallet;","import React, {Component}  from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport '../styles/ComponentArranger.css';\r\nimport Area from './AreaDnDSource';\r\nimport AreaModel from '../models/Area';\r\nimport { DropTarget } from 'react-dnd';\r\n\r\nconst Types = {\r\n    AREA: 'AREA'\r\n}\r\n\r\nconst areaArrangerTarget = {\r\n    drop(props, monitor, component){\r\n        const item = monitor.getItem();\r\n        if(item.component===undefined || item.component===null){\r\n            component.props.handleComponentDrop(new AreaModel());\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n    return {\r\n      // Call this function inside render()\r\n      // to let React DnD handle the drag events:\r\n      connectDropTarget: connect.dropTarget(),\r\n      // You can ask the monitor about the current drag state:\r\n      isOver: monitor.isOver(),\r\n      isOverCurrent: monitor.isOver({ shallow: true }),\r\n      canDrop: monitor.canDrop(),\r\n      itemType: monitor.getItemType()\r\n    };\r\n  }\r\n\r\nclass ComponentArranger extends Component {\r\n    mapAreas = (area,i)=>{\r\n        return (\r\n            <Col key={i}>\r\n                <Area isTarget component={area} handleDidNotDrop={this.props.handleDidNotDrop} handleComponentDrop={this.props.handleComponentDrop} handleComponentClick={this.props.handleComponentClick}/>\r\n            </Col>\r\n        )   \r\n    }\r\n    render() {\r\n        var classNames;\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames=\"canDrop\"\r\n        } else if (this.props.isOver){\r\n            classNames=\"cantDrop\"\r\n        }\r\n        return this.props.connectDropTarget(\r\n            <div className={classNames}>\r\n                <Container className=\"component-arranger\">\r\n                    <Row>\r\n                        {this.props.components.map(this.mapAreas)}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DropTarget(Types.AREA, areaArrangerTarget,collect)(ComponentArranger);","import React, {Component}  from 'react';\r\nimport { Container, Row, Col, Input, Label } from 'reactstrap';\r\n\r\nclass ComponentDetails extends Component {\r\n    //Changes state on input change\r\n    handleChange = (event) => { \r\n        var state = {};\r\n        state[event.target.id] = event.target.value;  \r\n        state._id = this.props.selected._id;  \r\n        this.props.handleChange(state);\r\n    }\r\n    mapDetailToInput = (key,i) => {\r\n        if(typeof this.props.selected[key] === \"string\" && key!==\"_id\"){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{key}</Label>\r\n                        <Input type=\"text\" name={key} id={key} placeholder={key} value={this.props.selected[key]} onChange={this.handleChange}/>\r\n                    </Col>\r\n                </Row>)\r\n        } else {\r\n            return;\r\n        }\r\n    };\r\n    render() {\r\n        var type;\r\n        var inputs;\r\n        if(this.props.selected!==undefined || this.props.selected!==null){\r\n            inputs = Object.keys(this.props.selected).map(this.mapDetailToInput)\r\n            type = this.props.selected.type;\r\n        }\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h3>Details</h3>\r\n                        <h4>{type}</h4>\r\n                    </Col>\r\n                </Row>\r\n                {inputs}\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ComponentDetails;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Card, CustomInput } from 'reactstrap';\r\n\r\nclass Accessibility extends Component {\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        var state = {};\r\n        state[event.target.id] = event.target.value;    \r\n        this.props.handleChange(state);\r\n    }\r\n    render(){\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 className=\"text-center\">Visual Accessibility</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h2>Colour Blindness</h2>\r\n                                <p>\r\n                                    Please select the types of colour blindness your design must take into account\r\n                                </p>\r\n                            </Col>\r\n                            <Col>\r\n                                <h2>Other</h2>\r\n                                <p>\r\n                                    These are options to indicate restrictions on the design related to visual impairments such as blindness \r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card>\r\n                                   <CustomInput type=\"checkbox\" name=\"protanomaly\" id=\"protanomaly\" label=\"Protanomaly\" checked={this.props.state.protanomaly} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"protanopia\" id=\"protanopia\" label=\"Protanopia\" checked={this.props.state.protanopia} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"deuteranomaly\" id=\"deuteranomaly\" label=\"Deuteranomaly\" checked={this.props.state.deuteranomaly} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"deuteranopia\" id=\"deuteranopia\" label=\"Deuteranopia\" checked={this.props.state.deuteranopia} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"tritanomaly\" id=\"tritanomaly\" label=\"Tritanomaly\" checked={this.props.state.tritanomaly} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"tritanopia\" id=\"tritanopia\" label=\"Tritanopia\" checked={this.props.state.tritanopia} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"coneMonochromacy\" id=\"coneMonochromacy\" label=\"Cone Monochromacy\" checked={this.props.state.coneMonochromacy} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"rodMonochromacy\" id=\"rodMonochromacy\" label=\"Rod Monochromacy\" checked={this.props.state.rodMonochromacy} onChange={this.handleChange}/>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col>\r\n                                <Card>\r\n                                   <CustomInput type=\"checkbox\" name=\"largeFonts\" id=\"largeFonts\" label=\"Large Fonts\" value={this.props.state.largeFonts} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"highContrast\" id=\"highContrast\" label=\"High Contrast\" value={this.props.state.highContrast} onChange={this.handleChange}/>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 className=\"text-center\">Physical Accessibility</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <p>\r\n                                    These options are to indicate restrictions on the design related to physical impairments for example wheelchair accessibility and motor functions\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card>\r\n                                   <CustomInput type=\"checkbox\" name=\"Wheelchair Accessible\" id=\"heelchairAccessible\" label=\"wheelchairAccessible\" value={this.props.state.wheelchairAccessible} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"motorAccessible\" id=\"motorAccessible\" label=\"Accessible for players with motor function issues\" value={this.props.state.motorAccessible} onChange={this.handleChange}/>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <p>\r\n                            These options are designed to indicate the attempted accessibility of your design. These options will flag puzzles in your design that do not meet these restrictions\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Accessibility;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Alert, Button, Form, FormGroup, Label, Input, FormText} from 'reactstrap';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            errorMessage: \"\"\r\n        }\r\n    }\r\n\r\n    //Handles login form submit event\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        //Authenticate with feathersjs\r\n        await this.props.feathersClient.authenticate({strategy:'local',email:this.state.email,password:this.state.password})\r\n        .then(async (response) => {\r\n            //Get User Details and Update Redux Store\r\n            let queryResult = await this.props.services.users.find({email:this.state.email});\r\n            if(queryResult.action.type.includes('FULFILLED')){\r\n                var user = queryResult.value.data[0];\r\n                user.token = window.localStorage.getItem('feathers-jwt');\r\n                this.props.redux.actions.login(user);\r\n                this.props.history.push('/dashboard');\r\n            } else {\r\n                this.setState({})\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            this.setState({errorMessage:err.message});\r\n        });\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    //Handles error dismiss\r\n    handleDismiss = (event) => {\r\n        this.setState({errorMessage: \"\"});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <Label for=\"email\">Email</Label>\r\n                                <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"password\">Password</Label>\r\n                                <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                            </FormGroup>\r\n                            <Button>Login</Button>\r\n                            <FormText>\r\n                                Don't have an account? Sign Up <Link to=\"/signup\">Here</Link>\r\n                            </FormText>\r\n                            <Alert isOpen={this.state.errorMessage !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.errorMessage}</Alert>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Alert, Button, Form, FormGroup, Label, Input, FormText} from 'reactstrap';\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            errorMessage: \"\"\r\n        }\r\n    }\r\n\r\n    //Handles login form submit event\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        //Create a new user \r\n        await this.props.services.users.create({email:this.state.email, password:this.state.password});\r\n        //Authenticate with feathersjs\r\n        await this.props.feathersClient.authenticate({strategy:'local',email:this.state.email,password:this.state.password})\r\n        .then(async (output) => {\r\n            //Get User Details and Update Redux Store\r\n            let queryResult = await this.props.services.users.find({email:this.state.email});\r\n            if(queryResult.action.type.includes('FULFILLED')){\r\n                var user = queryResult.value.data[0];\r\n                user.token = window.localStorage.getItem('feathers-jwt');\r\n                this.props.redux.actions.login(user);\r\n                this.props.history.push('/dashboard');\r\n            } else {\r\n                this.setState({})\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            this.setState({errorMessage:err.message});\r\n        });\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    //Handles error dismiss\r\n    handleDismiss = (event) => {\r\n        this.setState({errorMessage: \"\"});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <Label for=\"email\">Email</Label>\r\n                                <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"password\">Password</Label>\r\n                                <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                            </FormGroup>\r\n                            <Button>Sign Up</Button>\r\n                            <FormText>\r\n                                Have an account? Log In <Link to=\"/login\">Here</Link>\r\n                            </FormText>\r\n                            <Alert isOpen={this.state.errorMessage !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.errorMessage}</Alert>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Signup;","import React, {Component}  from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <p>\r\n                            This is my honours project for BsC(Hons) Computing: Application Software Development at Robert Gordon University\r\n                            This is a web app for designing an escape room using drag and drop components\r\n                        </p>       \r\n                    </Col>\r\n                    <Col>\r\n                        <ul>\r\n                            <li><a href=\"https://github.com/AldoAbdn/Escape-Room-Generator/\">Github Repo</a></li>\r\n                            <li><a href=\"https://ninjamock.com/s/KCMW2Tx\">Wireframe</a></li>\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default About;","import React, {Component}  from 'react';\r\nimport YouTubePlaylist from 'react-youtube-playlist';\r\nimport config from '../config.json';\r\n\r\nclass Tutorials extends Component {\r\n    render() {\r\n        return (\r\n            <YouTubePlaylist\r\n                width={'85%'}\r\n                height={'100%'}\r\n                api_key={config.youtubeAPIKey}\r\n                playlist_id=\"PLWRRwFEmEuDKX5sobzWeb50xD14cpfkk3\"\r\n                scrolling={true}\r\n            />\r\n        )\r\n    }\r\n};\r\n\r\nexport default Tutorials;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass ProtectedRoute extends Component {\r\n    render(){\r\n        if (window.localStorage.getItem('feathers-jwt')){\r\n            return (<Route {...this.props}/>)\r\n        } else {\r\n            return (<Redirect to='/login' state={this.props.location}/>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default ProtectedRoute;","import React, {Component}  from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\n//Components\r\nimport { Dashboard, EscapeRoomDesigner, Login, Signup, Tutorials, About, ProtectedRoute, Profile } from '../components/index.js';\r\nclass Main extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {profile:null};\r\n    }\r\n    populateUser = () => {\r\n        this.props.feathersClient.authenticate()\r\n          .then(response => {\r\n            return this.props.feathersClient.passport.verifyJWT(response.accessToken);\r\n          })\r\n          .then(response => {\r\n            return this.props.services.users.get(response.userId);\r\n          })\r\n          .then(response => {\r\n            var user = response.value;\r\n            user.token = window.localStorage.getItem('feathers-jwt');\r\n            this.props.redux.actions.login(user);\r\n            this.setState({profile:  \r\n                <div className=\"profile\" >\r\n                    <Link to=\"/profile\">Profile</Link>\r\n                    <Button onClick={this.logout}>Logout</Button>\r\n                </div>});\r\n            //Get Escape Rooms \r\n            this.populateEscapeRooms(user._id);\r\n          })\r\n          .catch(error => {\r\n            this.logout();\r\n          });\r\n    }\r\n    populateEscapeRooms = (userId) => {\r\n        //Get User Details and Update Redux Store\r\n        if (userId !== null && userId !== undefined)\r\n        this.props.services['escape-rooms'].find({query:{userId:userId}})\r\n        .then((queryResult)=>{\r\n            if(queryResult.action.type.includes('FULFILLED')){\r\n                const escapeRooms = queryResult.value.data;\r\n                if (escapeRooms!==null && escapeRooms!==undefined)\r\n                    this.props.redux.actions.updateEscapeRooms(escapeRooms);\r\n                    this.setState({loading:false});\r\n                }\r\n        });\r\n    }\r\n    logout = () => {\r\n        window.localStorage.removeItem('feathers-jwt');\r\n        this.setState({profile:null});\r\n        this.props.redux.actions.logout();\r\n        this.props.history.push('/');\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.redux.state.user.email!==this.props.redux.state.user.email){\r\n            this.populateEscapeRooms(this.props.redux.state.user._id);\r\n            if(this.props.redux.state.user.email !== undefined){\r\n                this.setState({profile:  \r\n                    <div className=\"profile\" >\r\n                        <Link to=\"/profile\">Profile</Link>\r\n                        <Button onClick={this.logout}>Logout</Button>\r\n                    </div>});\r\n            } else {\r\n                this.setState({profile:null});\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (window.localStorage.getItem('feathers-jwt') && this.props.redux.state.user.email!==undefined){\r\n            this.setState({profile:  \r\n            <div className=\"profile\" >\r\n                <Link to=\"/profile\">Profile</Link>\r\n                <Button onClick={this.logout}>Logout</Button>\r\n            </div>});\r\n        } else if (window.localStorage.getItem('feathers-jwt') && this.props.redux.state.user.email===undefined){\r\n            this.populateUser();\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <h1 className=\"title\">\r\n                        <Link to=\"/\">Escape Room Generator</Link>\r\n                    </h1>\r\n                   {this.state.profile}\r\n                </header>\r\n                <main>\r\n                    <Switch>\r\n                        <Redirect exact from=\"/\" to=\"dashboard\"/>\r\n                        <ProtectedRoute path=\"/dashboard\" render={(routeProps) => (<Dashboard {...this.props}/>)}/>\r\n                        <ProtectedRoute path=\"/profile\" render={(routeProps) => (<Profile {...this.props}/>)}/>\r\n                        <ProtectedRoute path=\"/designer/:id\" render={(routeProps) => {\r\n                            var props = {...this.props, ...routeProps};\r\n                            return(<EscapeRoomDesigner {...props}/>)\r\n                        }}/>\r\n                        <Route path=\"/login\" render={(routeProps) => (<Login {...this.props}/>)}/>\r\n                        <Route path=\"/signup\" render={(routeProps) => (<Signup {...this.props}/>)}/>\r\n                        <Route path=\"/about\" render={(routeProps) => (<About {...this.props}/>)}/>\r\n                        <Route path=\"/tutorials\" render={(routeProps) => (<Tutorials {...this.props}/>)}/>\r\n                    </Switch> \r\n                </main>\r\n                <footer>\r\n                    <Link to=\"/about\">About</Link>\r\n                    <Link to=\"/tutorials\">Tutorials</Link>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Main;","export function login(user) {\r\n    return {\r\n        type: 'LOGIN', user\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return {\r\n        type: 'LOGOUT'\r\n    }\r\n}\r\n\r\n","export function addEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'ADD_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function removeEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'REMOVE_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function updateEscapeRoom(i, escapeRoom){\r\n    return {\r\n        type: 'UPDATE_ESCAPE_ROOM',\r\n        i,\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function updateEscapeRooms(escapeRooms){\r\n    return {\r\n        type: 'UPDATE_ESCAPE_ROOMS',\r\n        escapeRooms\r\n    }\r\n}","export function updateVideos(videos){\r\n    return {\r\n        type:'UPDATE_VIDEOS',\r\n        videos\r\n    }\r\n}","import { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router'\r\nimport '../styles/App.css';\r\nimport Main from './Main';\r\nimport * as userActionCreators from '../actions/users';\r\nimport * as escpaeRoomActionCreators from '../actions/escapeRooms';\r\nimport * as videoActionCreators from '../actions/videos';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    redux: state\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  const userFuncs = bindActionCreators(userActionCreators,dispatch);\r\n  const escapeRoomFuncs = bindActionCreators(escpaeRoomActionCreators,dispatch);\r\n  const videoFuncs = bindActionCreators(videoActionCreators, dispatch);\r\n  return {...userFuncs, ...escapeRoomFuncs, ...videoFuncs};\r\n}\r\n\r\nfunction mergeProps(stateProps, dispatchProps, ownProps) {\r\n  return {\r\n    ...ownProps,\r\n    redux: {\r\n      state: stateProps.redux,\r\n      actions: dispatchProps\r\n    }\r\n  }\r\n}\r\n\r\nconst App = connect(mapStateToProps, mapDispatchToProps, mergeProps)(Main);\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//React Imports \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n//Redux Imports\nimport { Provider } from 'react-redux';\n//Store \nimport configureStore from './stores/store'\n//Feathers\nimport io from 'socket.io-client';\nimport feathers from 'feathers-client';\n//Feathers-Redux\nimport reduxifyServices, {getServicesStatus, bindWithDispatch} from 'feathers-redux';\n//CSS\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//Components\nimport App from './components/App';\n\n//Service Worker \nimport * as serviceWorker from './serviceWorker';\n\n//ReactDnD\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport { DragDropContextProvider } from 'react-dnd';\n\n//Feathers Configuration \nexport const feathersClient = feathers()\n    .configure(feathers.socketio(io()))\n    .configure(feathers.hooks())\n    .configure(feathers.authentication({\n        storage:window.localStorage\n    }));\n\n//Configure Redux\nconst rawServices = reduxifyServices(feathersClient, ['users', 'escape-rooms']);\nconst store = configureStore(rawServices,{user:{},escapeRooms:[],videos:[]});\nconst services = bindWithDispatch(store.dispatch, rawServices);\n\n//Router\nconst router = (\n    <DragDropContextProvider backend={HTML5Backend}>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App feathersClient={feathersClient} services={services} getServicesStatus={getServicesStatus}/>\n            </BrowserRouter>\n        </Provider>\n    </DragDropContextProvider>\n);\n\n//Render Router \nReactDOM.render(router, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\r\nimport middlewares from '../middleware';\r\nimport rootReducer from '../reducers';\r\n\r\nexport default function configureStore(reduxifiedServices, initialState) {\r\n    const createStoreWithDevTools = window.devToolsExtension ? window.devToolsExtension()(createStore) : createStore;\r\n    const createStoreWithMiddlewares = applyMiddleware(...middlewares)(createStoreWithDevTools);\r\n    return createStoreWithMiddlewares(rootReducer(reduxifiedServices),initialState);\r\n}"],"sourceRoot":""}