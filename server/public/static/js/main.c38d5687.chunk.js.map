{"version":3,"sources":["middleware/logger.js","middleware/index.js","reducers/user.js","reducers/escapeRooms.js","models/Component.js","models/Area.js","models/Puzzle.js","models/Prop.js","models/Lock.js","models/Event.js","models/Music.js","models/Details.js","models/Visual.js","models/Physical.js","models/Accessibility.js","models/EscapeRoom.js","reducers/escapeRoom.js","models/Modal.js","reducers/modal.js","reducers/index.js","components/Profile.js","pdf/pdf.js","components/Dashboard.js","components/EscapeRoomDesigner.js","components/Details.js","components/Accessibility.js","components/Design.js","components/ComponentDnDTarget.js","components/ComponentDnDSource.js","components/AreaDnDTarget.js","components/AreaDnDSource.js","components/PalletItem.js","components/Pallet.js","components/ComponentArranger.js","components/ComponentDetails.js","components/Login.js","components/PasswordStrengthMeter.js","components/SignUp.js","components/About.js","components/Tutorials.js","components/ProtectedRoute.js","components/NotFound.js","generators/LockGenerator.js","components/LockGenerator.js","puzzles/Puzzle.js","puzzles/Colour.js","puzzles/Crossword.js","puzzles/HiddenWord.js","puzzles/Riddle.js","puzzles/Cipher.js","generators/PuzzleGenerator.js","components/ListCreator.js","components/PuzzleGenerator.js","components/Verify.js","components/Reset.js","components/BusinessLogic.js","components/Main.js","actions/user.js","actions/escapeRooms.js","actions/escapeRoom.js","actions/modal.js","components/App.js","serviceWorker.js","index.js","stores/store.js"],"names":["logger","store","next","action","console","groupCollapsed","type","info","result","log","getState","groupEnd","reduxThunk","reduxPromiseMiddleware","user","state","escapeRooms","i","push","escapeRoom","slice","findIndex","_id","Component","this","uniqid","version","name","description","output","inputComponents","outputComponents","position","top","left","estimatedCost","resources","Area","Puzzle","puzzle","puzzleType","Prop","Lock","lockType","Event","eventType","Music","startTime","endTime","Details","designers","theme","minPlayers","maxPlayers","targetTime","difficulty","objective","Visual","protanomaly","protanopia","deuteranomaly","deuteranopia","tritanomaly","tritanopia","coneMonochromacy","rodMonochromacy","largeFonts","highContrast","Physical","wheelchairAccessible","motorAccessible","Accessibility","visual","physical","EscapeRoom","userId","details","accessibility","components","cost","isNaN","parseFloat","parseInt","id","find","component","findComponent","outputs","string","undefined","join","length","reduce","sum","newState","areaId","calculateCost","componentId","forEach","index","filter","inputId","outputId","indexOf","parentId","isInput","Modal","header","body","confirmText","confirmCallback","cancelText","cancelCallback","isOpen","confirm","text","cancel","modal","reduxifiedServices","combineReducers","usersService","users","reducer","escapeRoomsService","authManagementService","routing","routerReducer","Profile","handleSubmit","e","a","preventDefault","props","updateUser","email","password","handleChange","setState","target","value","handleDismiss","message","handleClick","edit","color","identityChange","sendPasswordReset","oldProps","newProps","Container","fluid","Row","Col","Form","onSubmit","FormGroup","Label","for","Input","onChange","Button","onClick","block","Alert","toggle","className","src","avatar","alt","escapeRoomToPDF","doc","jsPDF","convertEscapRoom","x","y","Object","keys","key","includes","addPage","addImage","constructor","Array","JSON","stringify","line","childObject","convertedObject","save","Dashboard","handleToggle","dropdownOpen","newEscapeRoom","handleItemClick","editEscapeRoom","saveJSON","savePDF","deleteEscapeRoom","showModal","mapEscapeRoomToList","ListGroupItem","Dropdown","style","display","right","DropdownToggle","caret","DropdownMenu","DropdownItem","disabled","blob","Blob","saveAs","ListGroup","map","EscapeRoomDesigner","saveEscapeRoom","handleNav","tab","activeTab","toggleSvgs","lines","document","querySelectorAll","calculateOutput","calculateComponentOutput","history","prevProps","prevState","xs","md","lg","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","updateDetails","updateAccessibility","addComponent","removeComponent","updateComponent","addRelationship","removeRelationship","event","aria-hidden","placeholder","UncontrolledTooltip","min","max","handleVisualChange","handlePhysicalChange","Card","CustomInput","label","Design","handleComponentClick","stopPropagation","selected","renderTrigger","ComponentDnDTarget","item","tooltip","classNames","isOver","canDrop","connectDropTarget","CardBody","DropTarget","drop","monitor","didDrop","getItem","handleComponentDrop","moved","connect","dropTarget","isOverCurrent","shallow","itemType","getItemType","componentSource","canDrag","isDragging","beginDrag","endDrag","ComponentDnDSource","update","forceUpdate","window","addEventListener","removeEventListener","isTarget","connectDragSource","DragSource","dragSource","componentTarget","clientOffset","getClientOffset","targetRect","ReactDOM","findDOMNode","getBoundingClientRect","height","width","AreaDnDTarget","title","CardTitle","areaSource","AreaDnDSource","render","iconId","palletItem","PalletItem","descriptions","Pallet","areaArrangerTarget","AreaModel","ComponentArranger","mapAreas","area","setTimeout","inputComponent","from","to","borderColor","outputComponent","ComponentDetails","handleOutputChange","handlePuzzleChange","generateFromInputs","mapDetailToInput","generator","convertCamelCase","property","array","detail","handleOnClick","oldId","mapIDToP","visualWarning","physicalWarning","toString","replace","str","toUpperCase","properties","inputs","inputRelationships","outputRelationships","visualKeys","physicalKeys","class","Login","recaptcha","authenticateCredentials","strategy","err","sendReset","handleReCAPTCHA","sitekey","process","FormText","Link","padding","fontSize","PasswordStrengthMeter","convertScoreToLabel","score","Signup","password2","signUp","zxcvbn","composemessage","messages","testResult","handleTestResult","noValidate","required","About","href","Tutorials","api_key","playlist_id","scrolling","ProtectedRoute","localStorage","condition","Route","Redirect","redirect","location","NotFound","LockGenerator","number","Math","floor","random","amount","wordsPerString","words","RandomWords","exactly","sequence","directions","handleNumericClick","lockGenerator","generateNumericCombination","handleWordClick","generateWords","handleDirectionalClick","generateDirectionSequence","lockGen","step","Colour","numbers","generateNumbers","num1","num2","num3","num4","answer","colour","Crossword","hints","answers","crossword","CrosswordGenerator","HiddenWord","word","hiddenWord","generateHiddenWord","matrix","Riddle","riddle","generateRandomRiddle","riddles","Cipher","cipherType","encoder","encoders","decoder","decoders","encoderDATA","decoderDATA","PuzzleGenerator","options","ListCreator","items","addItem","removeItem","mapItemsToInputs","InputGroup","InputGroupAddon","addonType","InputGroupText","handleListChange","list","generateWord","handleRiddleClick","handleCipherClick","generateCipher","cipher","puzzleGenerator","Verify","verify","token","sendVerify","alert","Reset","reset","BusinessLogic","populateEscapeRooms","services","query","data","redux","actions","updateEscapeRooms","loading","credentials","feathersClient","authenticate","verified","login","create","setSelectedEscapeRoom","response","addEscapeRoom","remove","removeEscapeRoom","updateEscapeRoom","escapeRoomActions","Switch","exact","path","routeProps","match","params","Main","toggleProfile","isProfileOpen","reAuthenticate","logout","profile","changes","include","tooltipOpen","isLoading","hideModal","nav","inNavbar","spinner","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","ModalHeader","ModalBody","ModalFooter","clearSelectedEscapeRoom","App","dispatch","bindActionCreators","userActionCreators","escapeRoomsActionCreators","escapeRoomActionCreators","modalActionCreators","stateProps","dispatchProps","ownProps","withRouter","Boolean","hostname","pipline","backends","backend","HTML5Backend","TouchBackend","enableMouseEvents","preview","transition","TouchTransition","MultiBackend","feathers","configure","socketio","io","authentication","rawServices","reduxifyServices","initialState","createStoreWithDevTools","devToolsExtension","createStore","applyMiddleware","middlewares","createStoreWithMiddlewares","rootReducer","configureStore","bindWithDispatch","router","BrowserRouter","getServicesStatus","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c38d5687.chunk.js","sourcesContent":["/**\r\n * A basic middleware logger\r\n * See http://redux.js.org/docs/advanced/Middleware.html\r\n * @module Middleware/logger\r\n */\r\n\r\n /** Logger */\r\nconst logger = store => next => action => {\r\n    console.groupCollapsed(action.type); // eslint-disable-line no-console\r\n    console.info('dispatching', action); // eslint-disable-line no-console\r\n    const result = next(action);\r\n    console.log('next state', store.getState()); // eslint-disable-line no-console\r\n    console.groupEnd(action.type); // eslint-disable-line no-console\r\n    return result;\r\n  };\r\n  \r\n  export default logger;","import reduxThunk from 'redux-thunk';\r\nimport reduxPromiseMiddleware from 'redux-promise-middleware';\r\nimport logger from './logger'; \r\n\r\n/**\r\n * Middleware\r\n * @module Middleware/index\r\n * @author Alistair Quinn\r\n */\r\n\r\n/** Middleware */\r\nexport default [\r\n  reduxThunk, // Thunk middleware for Redux\r\n  reduxPromiseMiddleware(), // Resolve, reject promises with conditional optimistic updates\r\n  // routerMiddleware(browserHistory), // !! IMPORTANT for location.href changes\r\n  logger, // A basic middleware logger\r\n];","/**\r\n * Reducer for User state\r\n * @param {User} state \r\n * @param {Action} action \r\n */\r\nfunction user(state={},action){\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            return {...action.user};\r\n            \r\n        case 'LOGOUT':\r\n            return {};\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default user;","/**\r\n * Reducer for Escape Rooms state\r\n * @param {Array<EscapeRoom>} state \r\n * @param {Action} action \r\n * @returns {Array<EscapeRoom>}\r\n */\r\nfunction escapeRooms(state=[],action){\r\n    let i;\r\n    switch(action.type){\r\n        case 'ADD_ESCAPE_ROOM':\r\n            state.push(action.escapeRoom);\r\n            return state.slice();\r\n            \r\n        case 'REMOVE_ESCAPE_ROOM':\r\n            i = state.findIndex(escapeRoom => escapeRoom._id === action.escapeRoom._id);\r\n            return [...state.slice(0,i),...state.slice(i+1)];\r\n            \r\n        case 'UPDATE_ESCAPE_ROOM':\r\n            i = state.findIndex(escapeRoom=>escapeRoom._id === action.escapeRoom._id);\r\n            state[i] = action.escapeRoom;\r\n            return state.slice(); \r\n            \r\n        case 'UPDATE_ESCAPE_ROOMS':\r\n            return action.escapeRooms.slice();\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default escapeRooms;","import uniqid from 'uniqid';\r\n\r\n/**\r\n * Base Class for Component\r\n * @author Alistair Quinn\r\n */\r\nclass Component {\r\n    constructor(){\r\n        this._id = uniqid();\r\n        this.version = \"1\";\r\n        this.name = \"\";\r\n        this.description = \"\";\r\n        this.output = \"\";\r\n        this.inputComponents = [];\r\n        this.outputComponents = [];\r\n        this.type = \"Component\";\r\n        this.position = {top:0,left:0};\r\n        this.estimatedCost = \"\";\r\n        this.resources = [];\r\n    }\r\n}\r\n\r\nexport default Component;","import Component from './Component';\r\n\r\n/**\r\n * Class for Area\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass Area extends Component {\r\n    constructor(){\r\n        super();\r\n        this.type=\"Area\";\r\n    }   \r\n}\r\n\r\nexport default Area;","import Component from './Component';\r\n\r\n/**\r\n * Class for Puzzle\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass Puzzle extends Component {\r\n    constructor(){\r\n        super();\r\n        this.puzzle = {};\r\n        this.puzzleType=\"Cipher\";\r\n        this.type=\"Puzzle\";\r\n    }   \r\n}\r\n\r\nexport default Puzzle;","import Component from './Component';\r\n\r\n/**\r\n * Class for Prop\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass Prop extends Component {\r\n    constructor(){\r\n        super();\r\n        this.type=\"Prop\";\r\n    }   \r\n}\r\n\r\nexport default Prop;","import Component from './Component';\r\n\r\n/**\r\n * Class for Lock\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass Lock extends Component {\r\n    constructor(){\r\n        super();\r\n        this.lockType=\"Numeric\";\r\n        this.type=\"Lock\";\r\n    }   \r\n}\r\n\r\nexport default Lock;","import Component from './Component';\r\n\r\n/**\r\n * Class for Event\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass Event extends Component {\r\n    constructor(){\r\n        super();\r\n        this.eventType=\"Sound Effect\";\r\n        this.type=\"Event\";\r\n    }   \r\n}\r\n\r\nexport default Event;","import Component from './Component';\r\n\r\n/**\r\n * Class for Music\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass Music extends Component {\r\n    constructor(){\r\n        super();\r\n        this.startTime=\"\";\r\n        this.endTime=\"\"\r\n        this.type=\"Music\";\r\n    }   \r\n}\r\n\r\nexport default Music;","/**\r\n * Class for Details\r\n * @author Alistair Quinn\r\n */\r\nclass Details {\r\n    constructor(){\r\n        this.name = \"Unnamed\";\r\n        this.designers= \"\";\r\n        this.theme = \"\";\r\n        this.minPlayers = \"\";\r\n        this.maxPlayers = \"\";\r\n        this.targetTime = \"\";\r\n        this.difficulty = \"3\";\r\n        this.objective = \"\";\r\n        this.description = \"\";\r\n        this.estimatedCost = \"\";\r\n    }  \r\n}\r\n\r\nexport default Details;","/**\r\n * Class for Visual\r\n * @author Alistair Quinn\r\n */\r\nclass Visual {\r\n    constructor(){\r\n        this.protanomaly = false;\r\n        this.protanopia = false;\r\n        this.deuteranomaly = false;\r\n        this.deuteranopia = false;\r\n        this.tritanomaly = false;\r\n        this.tritanopia = false;\r\n        this.coneMonochromacy = false;\r\n        this.rodMonochromacy = false;\r\n        this.largeFonts = false;\r\n        this.highContrast = false;\r\n    }  \r\n}\r\n\r\nexport default Visual;","/**\r\n * Class for Physical\r\n * @author Alistair Quinn\r\n */\r\nclass Physical {\r\n    constructor(){\r\n        this.wheelchairAccessible = false;\r\n        this.motorAccessible = false;\r\n    }  \r\n}\r\n\r\nexport default Physical;","import Visual from './Visual';\r\nimport Physical from './Physical';\r\n\r\n/**\r\n * Class for Accessibility\r\n * @author Alistair Quinn\r\n */\r\nclass Accessibility {\r\n    constructor(){\r\n        this.visual = new Visual();\r\n        this.physical = new Physical();\r\n    }  \r\n}\r\n\r\nexport default Accessibility;","import { Area } from \".\";\r\nimport Details from './Details';\r\nimport Accessibility from './Accessibility';\r\n\r\n/**\r\n * Class for EscapeRoom\r\n * @author Alistair Quinn\r\n */\r\nclass EscapeRoom {\r\n    constructor(userId){\r\n        this.userId = userId;\r\n        this.details = new Details();\r\n        this.accessibility = new Accessibility();\r\n        this.components = [new Area()];\r\n    }  \r\n\r\n    static calculateCost(escapeRoom){\r\n        let components = escapeRoom.components;\r\n        let cost = 0;\r\n        for (let component of components){\r\n            let estimatedCost = component.estimatedCost;\r\n            if(!isNaN(parseFloat(estimatedCost))){\r\n                cost += parseFloat(estimatedCost);\r\n            } else if (!isNaN(parseFloat(estimatedCost))){\r\n                cost += parseInt(estimatedCost);\r\n            }\r\n        }\r\n        return cost;\r\n    }\r\n\r\n    static findComponent(escapeRoom,id){\r\n        return escapeRoom.components.find((component)=>{return component._id===id})\r\n    }\r\n\r\n    static calculateComponentOutput(escapeRoom,id){\r\n        let component = EscapeRoom.findComponent(escapeRoom,id);\r\n        if(component!=null){\r\n            let outputs = [];\r\n            for(let id of component.inputComponents){\r\n                let component = EscapeRoom.findComponent(escapeRoom,id);\r\n                outputs.push(component.output);\r\n            }\r\n            let string = outputs.find((output)=>parseFloat(output));\r\n            if(string!==null||string!==undefined){\r\n                return outputs.join(\" \");\r\n            } else {\r\n                if(outputs.length>1)\r\n                    return outputs.reduce((sum,output)=>parseFloat(sum)+parseFloat(output));\r\n                else \r\n                    return \"\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default EscapeRoom;","import EscapeRoom from '../models/EscapeRoom';\r\n\r\n/**\r\n * Reducer for Escape Room State\r\n * @param {EscapeRoom} state \r\n * @param {Action} action \r\n * @returns {EscapeRoom}\r\n */\r\nfunction escapeRoom(state={},action){\r\n    let newState = {};\r\n    let i;\r\n    switch(action.type){\r\n        case 'SET_SELECTED_ESCAPE_ROOM':\r\n            return {...action.escapeRoom};\r\n        case 'CLEAR_SELECTED_ESCAPE_ROOM':\r\n            return {}\r\n        case 'UPDATE_DETAILS':\r\n            newState = {...state};\r\n            newState.details = {...newState.details, ...action.details};\r\n            return newState;\r\n        case 'UPDATE_ACCESSIBILITY':\r\n            newState = {...state};\r\n            newState.accessibility = {...newState.accessibility, ...action.accessibility};\r\n            return newState;\r\n        case 'ADD_COMPONENT':\r\n            newState = {...state};\r\n            newState.components.push(action.component);\r\n            if(action.areaId!==undefined){\r\n                i = newState.components.findIndex(component=>component._id===action.areaId);\r\n                newState.components[i].outputComponents.push(action.component._id);\r\n            }\r\n            newState.details.estimatedCost = EscapeRoom.calculateCost(newState);\r\n            return newState;\r\n        case 'REMOVE_COMPONENT':\r\n            newState = {...state};\r\n            i = newState.components.findIndex(component=>component._id===action.componentId);\r\n            newState.components = [...newState.components.slice(0,i),...newState.components.slice(i+1)]\r\n            newState.components.forEach((component,index,components)=>{\r\n                components[index].inputComponents = component.inputComponents.filter(inputId=>inputId!==action.componentId);\r\n                components[index].outputComponents = component.outputComponents.filter(outputId=>outputId!==action.componentId);\r\n            })\r\n            newState.details.estimatedCost = EscapeRoom.calculateCost(newState);\r\n            return newState;\r\n        case 'UPDATE_COMPONENT':\r\n            newState = {...state};\r\n            i = newState.components.findIndex(component=>component._id===action.component._id);\r\n            newState.components[i] = {...newState.components[i],...action.component};\r\n            if(action.areaId!=null){\r\n                newState.components.forEach((component,index,components)=>{\r\n                    if(component.type===\"Area\")\r\n                        components[index].outputComponents = component.outputComponents.filter(outputId=>outputId!==action.component._id);\r\n                });\r\n                i = newState.components.findIndex(component=>component._id===action.areaId);\r\n                if(newState.components[i].outputComponents.indexOf(action.component._id)===-1)\r\n                    newState.components[i].outputComponents.push(action.component._id);\r\n            }\r\n            newState.details.estimatedCost = EscapeRoom.calculateCost(newState);\r\n            return newState;\r\n        case 'ADD_RELATIONSHIP':\r\n            newState = {...state};\r\n            newState.components.forEach((component,index,components)=>{\r\n                if(component._id===action.parentId){\r\n                    if(action.isInput){\r\n                        if(component.inputComponents.indexOf(action.componentId)===-1)\r\n                            component.inputComponents.push(action.componentId);\r\n                    } else {\r\n                        if(component.outputComponents.indexOf(action.componentId)===-1)\r\n                            component.outputComponents.push(action.componentId);\r\n                    }\r\n                }\r\n            });\r\n            return newState;\r\n        case 'REMOVE_RELATIONSHIP':\r\n            newState = {...state};\r\n            newState.components.forEach((component,index,components)=>{\r\n                if(component._id===action.parentId){\r\n                    if(action.isInput){\r\n                        if(component.inputComponents.indexOf(action.componentId)===-1)\r\n                            component.inputComponents = component.inputComponents.filter(id=>id!==action.componentId);\r\n                    } else {\r\n                        if(component.outputComponents.indexOf(action.componentId)===-1)\r\n                            component.outputComponents = component.outputComponents.filter(id=>id!==action.componentId);\r\n                    }\r\n                }\r\n            });\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default escapeRoom;","/**\r\n * Class for Modal\r\n * @author Alistair Quinn\r\n */\r\nclass Modal {\r\n    constructor(header,body,confirmText,confirmCallback,cancelText,cancelCallback,isOpen=true){\r\n        this.header = header;\r\n        this.body = body;\r\n        this.confirm = {text:confirmText,action:confirmCallback}; //Converts callback to a string, because redux can't store funcs\r\n        this.cancel = {text:cancelText,action:cancelCallback};\r\n        this.isOpen = isOpen;\r\n    }\r\n}\r\n\r\nexport default Modal;","import Modal from \"../models/Modal\";\r\n\r\n/**\r\n * Reducer for Modal State\r\n * @param {Modal} state \r\n * @param {Action} action \r\n * @returns {Modal}\r\n */\r\nfunction modal(state=new Modal(\"\",\"\",\"\",()=>{},\"\",()=>{},false),action){\r\n    switch(action.type){\r\n        case 'SHOW_MODAL':\r\n            return {...action.modal,isOpen:true};\r\n        case 'HIDE_MODAL':\r\n            return new Modal(\"\",\"\",\"\",()=>{},\"\",()=>{},false)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default modal;","import { combineReducers } from 'redux';\r\nimport { routerReducer } from 'react-router-redux';\r\nimport user from './user';\r\nimport escapeRooms from './escapeRooms';\r\nimport escapeRoom from './escapeRoom';\r\nimport modal from './modal';\r\n\r\n/**\r\n * Combines Reducers\r\n * @param {Array<Service>} reduxifiedServices \r\n * @returns {Array<Service>}\r\n */\r\nexport default function(reduxifiedServices){\r\n    return combineReducers({\r\n        usersService: reduxifiedServices.users.reducer,\r\n        escapeRoomsService: reduxifiedServices['escape-rooms'].reducer,\r\n        authManagementService: reduxifiedServices['auth-management'].reducer,\r\n        routing: routerReducer,\r\n        user,\r\n        escapeRooms,\r\n        escapeRoom,\r\n        modal\r\n    })\r\n}\r\n","import React, {Component}  from 'react';\r\nimport { Container, Row, Col, Alert, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Class for Profile\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass Profile extends Component {\r\n    /** Creates Profile */\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            edit: false,\r\n            message: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            color: \"success\"\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Handles form submit\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if(this.props.updateUser)\r\n            this.props.updateUser({email:this.state.email,password:this.state.password});\r\n    }\r\n\r\n    /**\r\n     * Handles input change\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles Alert Dismiss\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleDismiss = (e) => {\r\n        this.setState({message: \"\"});\r\n    }\r\n\r\n    /**\r\n     * Handles button clicks\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleClick = async (e) => {\r\n        e.preventDefault();\r\n        switch (e.target.id) {\r\n            case 'editButton':\r\n                this.setState({edit:true});\r\n                break;\r\n            case 'saveButton':\r\n                let user = this.props.user;\r\n                if(this.state.email===\"\"){\r\n                    this.setState({message:\"Email Required\",color:\"danger\"});\r\n                    return;\r\n                }\r\n                if(this.state.password===\"\"){\r\n                    this.setState({message:\"Your current password is required for authentication\",color:\"danger\"})\r\n                    return;\r\n                }\r\n                if(this.props.identityChange){\r\n                    let result = await this.props.identityChange(user.email, this.state.password, {email:this.state.email});\r\n                    this.setState({message:result.message, color:result.color});\r\n                }\r\n                break;\r\n            case 'cancelButton':\r\n                this.setState({edit:false});\r\n                break;\r\n            case 'passwordButton':\r\n                if(this.props.sendPasswordReset){\r\n                    let result = await this.props.sendPasswordReset();\r\n                    this.setState({message:result.message, color:result.color});\r\n                }\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    /**\r\n     * React Lifecycle Method\r\n     * Component Mounted\r\n     */\r\n    componentDidMount(){\r\n        const user = this.props.user;\r\n        this.setState({\r\n            email: user.email\r\n        })\r\n    }\r\n\r\n    /**\r\n     * React Lifecycle Method\r\n     * Component Updated\r\n     * @param {Object} oldProps \r\n     */\r\n    componentDidUpdate(oldProps){\r\n        const newProps = this.props;\r\n        if(oldProps.user.email !== newProps.user.email){\r\n            const user = this.props.user;\r\n            this.setState({\r\n                email: user.email,\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * React Lifecycle Method\r\n     * Renders Layout\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        if(this.state.edit)\r\n            // Edit Profile\r\n            return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <Label for=\"email\">Email</Label>\r\n                                <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"password\">Confirm Password</Label>\r\n                                <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                            </FormGroup>\r\n                            <Button id=\"cancelButton\" onClick={this.handleClick} block>Cancel</Button>\r\n                            <Button id=\"saveButton\" onClick={this.handleClick} block>Save</Button>\r\n                            <Alert isOpen={this.state.message !== \"\"} toggle={this.handleDismiss} color={this.state.color}>{this.state.message}</Alert>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            );\r\n        else \r\n            // Profile\r\n            return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col>\r\n                        <img id=\"ProfileImage\" className=\"img-fluid\" src={this.props.user.avatar} alt=\"Profile\" />\r\n                        <p className=\"text-center\">{this.props.user.email}</p>\r\n                        <Button id=\"editButton\" block className=\"text-center\" onClick={this.handleClick}>Edit Email</Button>\r\n                        <Button id=\"passwordButton\" block className=\"text-center\" onClick={this.handleClick}>Password Reset</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            );\r\n    }\r\n};\r\n\r\nProfile.propTypes = {\r\n    user: PropTypes.object,\r\n    identityChange: PropTypes.func,\r\n    sendPasswordReset: PropTypes.func,\r\n}\r\n\r\nexport default Profile;","import jsPDF from 'jspdf';\r\n/**\r\n * PDF Module\r\n * @module PDF\r\n */\r\n\r\n/**\r\n * Converts an Escape Room to PDF\r\n * @param {EscapeRoom} escapeRoom \r\n */\r\nfunction escapeRoomToPDF(escapeRoom){\r\n    let doc = jsPDF('p','mm','a4');\r\n    let x = 35; let y = 25;\r\n    doc.text(\"The Escape Room Generator\",x,y);\r\n    doc = convertEscapRoom(escapeRoom,doc,x,y);\r\n    doc.save(escapeRoom.details.name+\".pdf\");\r\n}\r\n\r\n/**\r\n * Converts a JS object to a PDF Document\r\n * @param {EscapeRoom} escapeRoom \r\n * @param {jsPDF} doc \r\n * @param {int} x \r\n * @param {int} y \r\n * @returns {jsPDF}\r\n */\r\nfunction convertEscapRoom(escapeRoom,doc,x,y){\r\n    for(let key of Object.keys(escapeRoom)){\r\n        if(key.includes('DATA')){\r\n            //Add Images from DATA url\r\n            doc.addPage();\r\n            y=25;\r\n            doc.text(key+\": \",x,y);\r\n            doc.addImage(escapeRoom[key],'JPEG',x,y);\r\n            y=275;\r\n            continue;\r\n        }else if(y >= 275){\r\n            doc.addPage();\r\n            y=25;\r\n        } else {\r\n            y+=10;\r\n        }\r\n        if(typeof escapeRoom[key]==='object'&&escapeRoom[key].constructor===Array){\r\n            if(escapeRoom[key].length > 0 && typeof escapeRoom[key][0]===\"string\"){\r\n                doc.text(key+\": \" + JSON.stringify(escapeRoom[key]),x,y);\r\n            } else if (escapeRoom[key].length > 0 && typeof escapeRoom[key][0]===\"object\"){\r\n                doc.text(key,x,y);\r\n                doc.line(x, y, x+120, y);\r\n                for(let childObject of escapeRoom[key]){\r\n                    doc.line(x, y, x+120, y);\r\n                    let convertedObject = convertEscapRoom(childObject,doc,x,y);\r\n                    doc = convertedObject.doc;\r\n                    x = convertedObject.x;\r\n                    y = convertedObject.y;\r\n                }\r\n            }\r\n        }\r\n        else if(typeof escapeRoom[key]==='object'){\r\n            doc.text(key,x,y);\r\n            doc.line(x, y, x+120, y);\r\n            let convertedObject = convertEscapRoom(escapeRoom[key],doc,x,y);\r\n            doc = convertedObject.doc;\r\n            x = convertedObject.x;\r\n            y = convertedObject.y;\r\n        }\r\n        else{\r\n            doc.text(key+\": \"+escapeRoom[key],x,y);\r\n        }   \r\n    }\r\n    return doc;\r\n}\r\n\r\nexport {escapeRoomToPDF};\r\n","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Dropdown, DropdownToggle, DropdownMenu, DropdownItem , ListGroup, ListGroupItem , Button } from 'reactstrap';\r\nimport { saveAs } from 'file-saver';\r\nimport Modal from '../models/Modal';\r\nimport {escapeRoomToPDF} from '../pdf/pdf';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Class for Dashboard that shows users escape rooms \r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass Dashboard extends Component {\r\n    /** Creates Dashboard */\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: [false,false]\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles Toggle\r\n     * @function\r\n     * @param {int} i index\r\n     * @param {Event} e \r\n     */\r\n    handleToggle = (i) => (e) => {\r\n        var dropdownOpen = this.state.dropdownOpen;\r\n        dropdownOpen[i] = !dropdownOpen[i];\r\n        this.setState({dropdownOpen});\r\n    }\r\n\r\n    /**\r\n     * Handles Add Escape Room Click\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleClick = async (e) => {\r\n        if(this.props.newEscapeRoom)\r\n            this.props.newEscapeRoom();\r\n    }\r\n\r\n    /**\r\n     * Saves an Escape Room as JSON \r\n     * @param {EscapeRoom} escapeRoom \r\n     */\r\n    saveJSON(escapeRoom) {\r\n        const blob = new Blob([JSON.stringify(escapeRoom)],{type:'text/plain;charset=utf-8'});\r\n        saveAs(blob, escapeRoom.details.name+\".json\");\r\n    }\r\n\r\n    /**\r\n     * Saves an Escape Room as PDF\r\n     * @param {EscapeRoom} escapeRoom \r\n     */\r\n    savePDF(escapeRoom) {\r\n        escapeRoomToPDF(escapeRoom);\r\n    }\r\n\r\n    /**\r\n     * Handles Dropdown Menu Item Click\r\n     * @function\r\n     * @param {int} i index\r\n     * @param {string} action \r\n     * @param {Event} e\r\n     */\r\n    handleItemClick = (i, action) => (e) => {\r\n        const escapeRoom = this.props.escapeRooms[i];\r\n        switch(action){\r\n            case 'EDIT':\r\n                if(this.props.editEscapeRoom)   \r\n                    this.props.editEscapeRoom(escapeRoom);\r\n                break;\r\n            case 'JSON':\r\n                this.saveJSON(escapeRoom);\r\n                break;\r\n            case 'PDF':\r\n                this.savePDF(escapeRoom);\r\n                break;\r\n            case 'DELETE':\r\n                if(this.props.deleteEscapeRoom)\r\n                    this.props.showModal(new Modal(\"Warning\",\"Are you sure you want to delete \"+escapeRoom.details.name+\"?\",\"Yes\",()=>{this.props.deleteEscapeRoom(escapeRoom)},\"No\",()=>{}));\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Maps Escape Rooms to List Item\r\n     * @function\r\n     * @param {EscapeRoom} escapeRoom\r\n     * @param {int} i index\r\n     */\r\n    mapEscapeRoomToList = (escapeRoom,i) => {\r\n        return (\r\n        <ListGroupItem key={i}>{escapeRoom.details.name}\r\n            <Dropdown style={{display:'inline', position: 'absolute', right:'20px'}} isOpen={this.state.dropdownOpen[i]} toggle={this.handleToggle(i)}>\r\n                <DropdownToggle caret/>\r\n                <DropdownMenu right>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'EDIT')} disabled={this.props.escapeRooms[i].components[0].version!==undefined?false:true}>Edit</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'JSON')}>Export as JSON</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'PDF')}>Export as PDF</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'DELETE')}>Delete</DropdownItem>\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        </ListGroupItem>)\r\n    };\r\n\r\n    /** \r\n     * React Lifecycle Render\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        const escapeRooms = this.props.escapeRooms;\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Button block onClick={this.handleClick}>NEW</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <ListGroup>\r\n                            {escapeRooms.map(this.mapEscapeRoomToList)}\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nDashboard.propTypes = {\r\n    newEscapeRoom: PropTypes.func,\r\n    escapeRooms: PropTypes.array,\r\n    editEscapeRoom: PropTypes.func,\r\n    deleteEscapeRoom: PropTypes.func,\r\n    showModal: PropTypes.func,\r\n}\r\n\r\nexport default Dashboard;","import React, {Component}  from 'react';\r\nimport { Container, Dropdown, DropdownToggle , DropdownMenu , DropdownItem , Row, Col, Nav, NavItem, NavLink, TabContent, TabPane , Button } from 'reactstrap';\r\nimport { Details, Accessibility, Design } from './index';\r\nimport classnames from 'classnames';\r\nimport { saveAs } from 'file-saver';\r\nimport {escapeRoomToPDF} from '../pdf/pdf';\r\nimport EscapeRoom from '../models/EscapeRoom';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/EscapeRoomDesigner.css';\r\n\r\n/**\r\n * Class for Designing an Escape Room, Manages tabs\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass EscapeRoomDesigner extends Component {\r\n    /** Creates EscapeRoom Designer */\r\n    constructor(){\r\n        super();\r\n        this.state = {activeTab:'design', dropdownOpen: false};\r\n    }\r\n\r\n    /**\r\n     * Saves an EscapeRoom as JSON\r\n     * @param {EscapeRoom} escapeRoom \r\n     */\r\n    saveJSON(escapeRoom) {\r\n        const blob = new Blob([JSON.stringify(escapeRoom)],{type:'text/plain;charset=utf-8'});\r\n        saveAs(blob, escapeRoom.details.name+\".json\");\r\n    }\r\n\r\n    /**\r\n     * Saves Escape Room as PDF\r\n     * @param {EscapeRoom} escapeRoom \r\n     */\r\n    savePDF(escapeRoom) {\r\n        escapeRoomToPDF(escapeRoom);\r\n    }\r\n\r\n    /**\r\n     * Handles Button Clicks\r\n     * @function\r\n     * @param {string} action\r\n     * @param {Event} e\r\n     */\r\n    handleClick = (action) => (e) => {\r\n        switch(action){\r\n            case 'EXIT':\r\n                if(this.props.saveEscapeRoom)\r\n                    this.props.saveEscapeRoom(this.props.escapeRoom);\r\n                break;\r\n            case 'JSON':\r\n                if(this.props.saveEscapeRoom)\r\n                    this.props.saveEscapeRoom(this.props.escapeRoom);\r\n                this.saveJSON(this.props.escapeRoom);\r\n                break;\r\n            case 'PDF':\r\n                if(this.props.saveEscapeRoom)\r\n                    this.props.saveEscapeRoom(this.props.escapeRoom);\r\n                this.savePDF(this.props.escapeRoom);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggles Bool\r\n     * @param {Event} e\r\n     */\r\n    handleToggle = (e) => {\r\n        this.setState({dropdownOpen: !this.state.dropdownOpen});\r\n    }\r\n\r\n    /**\r\n     * Toggles Active Tab\r\n     * @param {string} tab\r\n     * @param {Event} e \r\n     */\r\n    handleNav = (tab) => (e) => {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            })\r\n        }\r\n    }\r\n\r\n    /** React Lifecycle Called when Component Mounts */\r\n    componentDidMount(){\r\n        const escapeRoom = this.props.escapeRoom;\r\n        if(escapeRoom===undefined){\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    /** React Lifecycle Called when Components Updates */\r\n    componentDidUpdate(prevProps,prevState){\r\n        if(prevState.activeTab!==this.state.activeTab){\r\n            this.toggleSvgs();\r\n        }\r\n    }\r\n\r\n    /** \r\n     * Hides SVGs when design not current tab\r\n     * @function \r\n     */\r\n    toggleSvgs=()=>{\r\n        let lines = document.querySelectorAll(\"body > div:not(#root)\");\r\n        if(this.state.activeTab!==\"design\"){\r\n            for (let i = 0; i < lines.length;i++){\r\n                lines[i].style.display = 'none';\r\n            }\r\n        } else {\r\n            for (let i = 0; i < lines.length;i++){\r\n                lines[i].style.display = 'block';\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calculates Output of Component\r\n     */\r\n    calculateOutput=(id)=>{\r\n        return EscapeRoom.calculateComponentOutput(this.props.escapeRoom,id);\r\n    }\r\n\r\n    /** \r\n     * React Lifecycle Render\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Row className=\"save-options\">\r\n                    <Col xs=\"6\" md=\"3\" lg=\"3\"><Button block onClick={this.handleClick('EXIT')}>Save and Exit</Button></Col>\r\n                    <Col xs=\"6\" md=\"3\" lg=\"3\">\r\n                        <Dropdown isOpen={this.state.dropdownOpen} toggle={this.handleToggle}>\r\n                            <DropdownToggle  className=\"full-width\" caret>Save and Export</DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem onClick={this.handleClick('JSON')}>Export as JSON</DropdownItem>\r\n                                <DropdownItem onClick={this.handleClick('PDF')}>Export as PDF</DropdownItem>\r\n                            </DropdownMenu>\r\n                        </Dropdown>\r\n                    </Col>\r\n                    <Col xs=\"6\"/>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Nav tabs>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'details'})}\r\n                                    onClick={this.handleNav('details')}    \r\n                                >\r\n                                    Details\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'accessibility'})}\r\n                                    onClick={this.handleNav('accessibility')}    \r\n                                >\r\n                                    Accessibility\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'design'})}\r\n                                    onClick={this.handleNav('design')}    \r\n                                >\r\n                                    Design\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <TabContent activeTab={this.state.activeTab}>\r\n                            <TabPane tabId=\"details\">\r\n                                <Details details={this.props.escapeRoom.details} updateDetails={this.props.updateDetails}/>\r\n                            </TabPane>\r\n                            <TabPane tabId=\"accessibility\">\r\n                                <Accessibility accessibility={this.props.escapeRoom.accessibility} updateAccessibility={this.props.updateAccessibility}/>\r\n                            </TabPane>\r\n                            <TabPane tabId=\"design\">\r\n                                <Design calculateOutput={this.calculateOutput} components={{components:this.props.escapeRoom.components}} showModal={this.props.showModal} accessibility={this.props.escapeRoom.accessibility} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} updateComponent={this.props.updateComponent} addRelationship={this.props.addRelationship} removeRelationship={this.props.removeRelationship}/>\r\n                            </TabPane>\r\n                        </TabContent>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nEscapeRoomDesigner.propTypes = {\r\n    saveEscapeRoom: PropTypes.func,\r\n    escapeRoom: PropTypes.instanceOf(EscapeRoom),\r\n    history: PropTypes.object,\r\n    updateDetails: PropTypes.func,\r\n    updateAccessibility: PropTypes.func,\r\n    addComponent: PropTypes.func,\r\n    removeComponent: PropTypes.func,\r\n    updateComponent: PropTypes.func,\r\n    addRelationship: PropTypes.func,\r\n    removeRelationship: PropTypes.func,\r\n}\r\n\r\nexport default EscapeRoomDesigner;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Form, FormGroup, Label, Input, UncontrolledTooltip} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Class for Editing Escape Room Details\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass Details extends Component {\r\n    /**\r\n     * Handles Input Change\r\n     * @param {Event} event\r\n     */\r\n    handleChange = (event) => { \r\n        var state = {};\r\n        state[event.target.id] = event.target.value;    \r\n        this.props.updateDetails(state);\r\n    }\r\n\r\n    /** \r\n     * React Lifecycle Render\r\n     * @returns {JSX}\r\n     */\r\n    render(){\r\n        return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Room Name <span id=\"nameTooltip\"><i className=\"fa fa-question-circle\" aria-hidden=\"true\"></i></span></Label>\r\n                            <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Room Name\" value={this.props.details.name} onChange={this.handleChange}/>\r\n                            <UncontrolledTooltip target=\"nameTooltip\">The name of your design</UncontrolledTooltip>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"designers\">Designers <span id=\"designersTooltip\"><i className=\"fa fa-question-circle\" aria-hidden=\"true\"></i></span></Label>\r\n                            <Input type=\"text\" name=\"designers\" id=\"designers\" placeholder=\"Designer(s)\" value={this.props.details.designers} onChange={this.handleChange}/>\r\n                            <UncontrolledTooltip target=\"designersTooltip\">Names of the designers</UncontrolledTooltip>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"theme\">Theme <span id=\"themeTooltip\"><i className=\"fa fa-question-circle\" aria-hidden=\"true\"></i></span></Label>\r\n                            <Input type=\"text\" name=\"theme\" id=\"theme\" placeholder=\"theme\" value={this.props.details.theme} onChange={this.handleChange}/>\r\n                            <UncontrolledTooltip target=\"themeTooltip\">The theme of the room: Noir, Medieval, Heist ect.</UncontrolledTooltip>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label>Players <span id=\"playersTooltip\"><i className=\"fa fa-question-circle\" aria-hidden=\"true\"></i></span></Label>\r\n                            <Input type=\"text\" name=\"minPlayers\" id=\"minPlayers\" placeholder=\"Min\" value={this.props.details.minPlayers} onChange={this.handleChange}/>\r\n                            <Input type=\"text\" name=\"maxPlayers\" id=\"maxPlayers\" placeholder=\"Max\" value={this.props.details.maxPlayers} onChange={this.handleChange}/>\r\n                            <UncontrolledTooltip target=\"playersTooltip\">The maximum and minimum amount of players your room is designed for</UncontrolledTooltip>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"targetTime\">Target Time <span id=\"targetTimeTooltip\"><i className=\"fa fa-question-circle\" aria-hidden=\"true\"></i></span></Label>\r\n                            <Input type=\"text\" name=\"targetTime\" id=\"targetTime\" placeholder=\"Time\" value={this.props.details.targetTime} onChange={this.handleChange}/>\r\n                            <UncontrolledTooltip target=\"targetTimeTooltip\">Can be the time players have to try and escape by, or the estimated time it will take players to complete the room</UncontrolledTooltip>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"difficulty\">Difficulty <span id=\"difficultyTooltip\"><i className=\"fa fa-question-circle\" aria-hidden=\"true\"></i></span></Label>\r\n                            <Input type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" id=\"difficulty\" value={this.props.details.difficulty} onChange={this.handleChange}/>\r\n                            <UncontrolledTooltip target=\"difficultyTooltip\">How difficult the room is rated out of 5. It is up to the designer to gauge difficulty</UncontrolledTooltip>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </Col>\r\n                <Col>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"objective\">Objective <span id=\"objectiveTooltip\"><i className=\"fa fa-question-circle\" aria-hidden=\"true\"></i></span></Label>\r\n                            <Input type=\"text\" name=\"objective\" id=\"objective\" placeholder=\"Main Objective\" value={this.props.details.objective} onChange={this.handleChange}/>\r\n                            <UncontrolledTooltip target=\"objectiveTooltip\">The objective of the room, for example: retrieve the diamond, foil the mad scientists evil plans ect.</UncontrolledTooltip>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"description\">Description <span id=\"descriptionTooltip\"><i className=\"fa fa-question-circle\" aria-hidden=\"true\"></i></span></Label>\r\n                            <Input type=\"textarea\" name=\"description\" id=\"description\" placeholder=\"Description\" value={this.props.details.description} onChange={this.handleChange}/>\r\n                            <UncontrolledTooltip target=\"descriptionTooltip\">A descriptive paragraph of the room, you can define the overall story here or any extra details that may be needed to set it up</UncontrolledTooltip>\r\n                        </FormGroup>       \r\n                        <FormGroup>\r\n                            <Label for=\"estimatedCost\">Estimated Cost <span id=\"estimatedCostTooltip\"><i className=\"fa fa-question-circle\" aria-hidden=\"true\"></i></span></Label>\r\n                            <p>{this.props.details.estimatedCost}</p>    \r\n                            <UncontrolledTooltip target=\"estimatedCostTooltip\">When you set estimated cost values on components in the design they will be totalled up and the total will be displayed here</UncontrolledTooltip>\r\n                        </FormGroup>             \r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>)\r\n    }\r\n}\r\n\r\nDetails.propTypes = {\r\n    updateDetails: PropTypes.func,\r\n    details: PropTypes.instanceOf(Details)\r\n}\r\n\r\nexport default Details;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Card, CustomInput, UncontrolledTooltip } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/Accessibility.css';\r\n\r\n/** \r\n * Class for Editing an EscapeRoom's Accessibility \r\n * @extends Component \r\n * @author Alistair Quinn\r\n */\r\nclass Accessibility extends Component {\r\n    /** \r\n     * Updates visual changes \r\n     * @function\r\n     * @param {Event} event\r\n     */\r\n    handleVisualChange = (event) => {\r\n        var state = {...this.props.accessibility};\r\n        state.visual[event.target.id] = event.target.value===true?false:true;\r\n        this.props.updateAccessibility(state);\r\n    }\r\n\r\n    /** \r\n     * Updates physical change \r\n     * @function\r\n     * @param {Event} event\r\n     */\r\n    handlePhysicalChange = (event) => {\r\n        var state = {...this.props.accessibility};\r\n        state.physical[event.target.id] = event.target.value===true?false:true;\r\n        this.props.updateAccessibility(state);\r\n    }\r\n\r\n    /** \r\n     * React Lifecycle Render\r\n     * @returns {JSX}\r\n     */\r\n    render(){\r\n        return (\r\n            <Container fluid className=\"accessibility\">\r\n                <Row>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 className=\"text-center text-success\">Visual Accessibility</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h2>Colour Blindness</h2>\r\n                                <p>\r\n                                    Please select the types of colour blindness your design must take into account\r\n                                </p>\r\n                            </Col>\r\n                            <Col>\r\n                                <h2>Other</h2>\r\n                                <p>\r\n                                    These are options to indicate restrictions on the design related to visual impairments such as blindness \r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card>\r\n                                    <h6 className=\"text-success\">Red-Green Colour Blindness</h6>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"protanomaly\" id=\"protanomaly\" label=\"Protanomaly\" value={this.props.accessibility.visual.protanomaly} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"protanomalyTooltip\"><i className=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"protanomalyTooltip\">Protanomaly: In males with protanomaly, the red cone photopigment is abnormal. Red, orange, and yellow appear greener and colors are not as bright. This condition is mild and doesn’t usually interfere with daily living. Protanomaly is an X-linked disorder estimated to affect 1 percent of males.</UncontrolledTooltip>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"protanopia\" id=\"protanopia\" label=\"Protanopia\" value={this.props.accessibility.visual.protanopia} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"protanopiaTooltip\"><i className=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"protanopiaTooltip\">Protanopia: In males with protanopia, there are no working red cone cells. Red appears as black. Certain shades of orange, yellow, and green all appear as yellow. Protanopia is an X-linked disorder that is estimated to affect 1 percent of males.</UncontrolledTooltip>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"deuteranomaly\" id=\"deuteranomaly\" label=\"Deuteranomaly\" value={this.props.accessibility.visual.deuteranomaly} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"deuteranomalyTooltip\"><i className=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"deuteranomalyTooltip\">Deuteranomaly: In males with deuteranomaly, the green cone photopigment is abnormal. Yellow and green appear redder and it is difficult to tell violet from blue. This condition is mild and doesn’t interfere with daily living. Deuteranomaly is the most common form of color blindness and is an X-linked disorder affecting 5 percent of males.</UncontrolledTooltip>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"deuteranopia\" id=\"deuteranopia\" label=\"Deuteranopia\" value={this.props.accessibility.visual.deuteranopia} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"deuteranopiaTooltip\"><i className=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"deuteranopiaTooltip\">Deuteranopia: In males with deuteranopia, there are no working green cone cells. They tend to see reds as brownish-yellow and greens as beige. Deuteranopia is an X-linked disorder that affects about 1 percent of males.</UncontrolledTooltip>\r\n                                    </Row>\r\n\r\n                                    <h6 className=\"text-success\">Blue-Yellow Colour Blindness</h6>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"tritanomaly\" id=\"tritanomaly\" label=\"Tritanomaly\" value={this.props.accessibility.visual.tritanomaly} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"tritanomalyTooltip\"><i className=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"tritanomalyTooltip\">Tritanomaly: People with tritanomaly have functionally limited blue cone cells. Blue appears greener and it can be difficult to tell yellow and red from pink. Tritanomaly is extremely rare. It is an autosomal dominant disorder affecting males and females equally.</UncontrolledTooltip>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"tritanopia\" id=\"tritanopia\" label=\"Tritanopia\" value={this.props.accessibility.visual.tritanopia} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"tritanopiaTooltip\"><i className=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"tritanopiaTooltip\">Tritanopia: People with tritanopia, also known as blue-yellow color blindness, lack blue cone cells. Blue appears green and yellow appears violet or light grey. Tritanopia is an extremely rare autosomal recessive disorder affecting males and females equally.</UncontrolledTooltip>\r\n                                    </Row>\r\n            \r\n                                    <h6 className=\"text-success\">Complete Colour Blindness</h6>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"coneMonochromacy\" id=\"coneMonochromacy\" label=\"Cone Monochromacy\" value={this.props.accessibility.visual.coneMonochromacy} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"coneMonochromacyTooltip\"><i className=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"coneMonochromacyTooltip\">Cone Monochromacy: This rare form of color blindness results from a failure of two of the three cone cell photopigments to work. There is red cone monochromacy, green cone monochromacy, and blue cone monochromacy. People with cone monochromacy have trouble distinguishing colors because the brain needs to compare the signals from different types of cones in order to see color. When only one type of cone works, this comparison isn’t possible. People with blue cone monochromacy, may also have reduced visual acuity, near-sightedness, and uncontrollable eye movements, a condition known as nystagmus. Cone monochromacy is an autosomal recessive disorder.</UncontrolledTooltip>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"rodMonochromacy\" id=\"rodMonochromacy\" label=\"Rod Monochromacy\" value={this.props.accessibility.visual.rodMonochromacy} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"rodMonochromacyTooltip\"><i className=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"rodMonochromacyTooltip\">Rod Monochromacy: This type of monochromacy is rare and is the most severe form of color blindness. It is present at birth. None of the cone cells have functional photopigments. Lacking all cone vision, people with rod monochromacy see the world in black, white, and gray. And since rods respond to dim light, people with rod monochromacy tend to be photophobic – very uncomfortable in bright environments. They also experience nystagmus. Rod monochromacy is an autosomal recessive disorder.</UncontrolledTooltip>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col>\r\n                                <Card>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"largeFonts\" id=\"largeFonts\" label=\"Large Fonts\" value={this.props.accessibility.visual.largeFonts} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"largeFontsTooltip\"><i className=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"largeFontsTooltip\">If your design requires larger fonts as you are expecting players with issues with short sightedness, this is a suitable option to select</UncontrolledTooltip>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"highContrast\" id=\"highContrast\" label=\"High Contrast\" value={this.props.accessibility.visual.highContrast} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"highContrastTooltip\"><i className=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"highContrastTooltip\">If your design requires a contrasting colour scheme to be used to make text more readable, select this option</UncontrolledTooltip>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 className=\"text-center text-primary\">Physical Accessibility</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <p>\r\n                                    These options are to indicate restrictions on the design related to physical impairments for example wheelchair accessibility and motor functions\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"> <CustomInput type=\"checkbox\" name=\"wheelchairAccessible\" id=\"wheelchairAccessible\" label=\"Wheelchair Accessible\" value={this.props.accessibility.physical.wheelchairAccessible} onChange={this.handlePhysicalChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"wheelchairAccessibleTooltip\"><i className=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"wheelchairAccessibleTooltip\">If your design is required to be wheelchair accessible select this option</UncontrolledTooltip>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"motorAccessible\" id=\"motorAccessible\" label=\"Accessible for players with motor function issues\" value={this.props.accessibility.physical.motorAccessible} onChange={this.handlePhysicalChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"motorAccessibleTooltip\"><i className=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"motorAccessibleTooltip\">If your design is required to be wheelchair accessible select this option</UncontrolledTooltip>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <p>\r\n                            These options are designed to indicate the attempted accessibility of your design. These options will flag puzzles in your design that do not meet these restrictions\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nAccessibility.propTypes = {\r\n    accessibility: PropTypes.instanceOf(Accessibility)\r\n}\r\n\r\nexport default Accessibility;","import React, {Component} from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Pallet, ComponentArranger, ComponentDetails } from './index';\r\nimport PropTypes from 'prop-types';\r\nimport Accessibility from './Accessibility';\r\n\r\n/**\r\n * Class for Desinging an Escape Room\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass Design extends Component {\r\n    /** Creates Design */\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {selected: {}};\r\n    }\r\n\r\n    /**\r\n     * Handles Component Click \r\n     * @function\r\n     * @param {Component} component\r\n     * @param {Event} e\r\n     */\r\n    handleComponentClick = (component) => (e) => {\r\n        e.stopPropagation();\r\n        this.setState({selected:component});\r\n    }\r\n\r\n    /**\r\n     * Updates Selected Component \r\n     * @function\r\n     * @param {Component} component\r\n     */\r\n    updateComponent = (component) => {\r\n        this.props.updateComponent(component);\r\n        this.setState({selected:{...this.state.selected,...component}});\r\n    }\r\n\r\n    /**\r\n     * Finds a component by ID\r\n     * @param {string} id\r\n     * @returns {Component}\r\n     */\r\n    findComponent = (id) => {\r\n        return this.props.components.components.find(component=>component._id===id);\r\n    }\r\n\r\n    /** \r\n     * React Lifecycle Render\r\n     * @returns {JSX}\r\n     */\r\n    render(){\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md=\"2\">\r\n                        <Pallet/>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                        <ComponentArranger renderTrigger={JSON.stringify(this.props.components.components)} findComponent={this.findComponent} showModal={this.props.showModal} handleComponentClick={this.handleComponentClick} updateComponent={this.props.updateComponent} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship} components={this.props.components.components}/>            \r\n                    </Col>\r\n                    <Col md=\"2\">\r\n                        <ComponentDetails calculateOutput={this.props.calculateOutput} accessibility={this.props.accessibility} selected={this.state.selected} updateComponent={this.updateComponent}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nDesign.propTypes = {\r\n    updateComponent: PropTypes.func,\r\n    components: PropTypes.array,\r\n    findComponent: PropTypes.func,\r\n    showModal: PropTypes.func,\r\n    handleComponentClick: PropTypes.func,\r\n    updateComponent: PropTypes.func,\r\n    addComponent: PropTypes.func,\r\n    removeComponent: PropTypes.func,\r\n    addRelationship: PropTypes.func,\r\n    calculateOutput: PropTypes.func,\r\n    accessibility: PropTypes.instanceOf(Accessibility)\r\n}\r\n\r\nexport default Design;","import React, {Component}  from 'react';\r\nimport { Card, CardBody, UncontrolledTooltip } from 'reactstrap';\r\nimport { DropTarget } from 'react-dnd';\r\nimport { Area, Puzzle, Event, Music, Lock, Prop } from '../models/index';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/Component.css';\r\n\r\n/**\r\n * Drag sources and drop targets only interact\r\n * if they have the same string type.\r\n * You want to keep types in a separate file with\r\n * the rest of your app's constants.\r\n */\r\nconst Types = {\r\n    COMPONENT: 'COMPONENT'\r\n}\r\n\r\n/**\r\n * Specifies the drop target contract.\r\n * All methods are optional.\r\n */\r\nconst componentTarget = {\r\n    drop(props,monitor,component){\r\n        if (monitor.didDrop()){\r\n            return;\r\n        }\r\n        const item = monitor.getItem();\r\n        const isInput = props.isInput;\r\n        component.handleComponentDrop(item,isInput);\r\n        return {moved:true};\r\n    }\r\n}\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n * @param {Connect} connect\r\n * @param {Monitor} monitor\r\n * @returns {object} Props\r\n */\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        isOverCurrent: monitor.isOver({shallow:true}),\r\n        canDrop: monitor.canDrop(),\r\n        itemType: monitor.getItemType()\r\n    }\r\n}\r\n\r\n/**\r\n * Class for Component drag and drop target for components \r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass ComponentDnDTarget extends Component {\r\n    /**\r\n     * Handles Component Drop\r\n     * @param {Component} item \r\n     * @param {bool} isInput \r\n     */\r\n    handleComponentDrop(item,isInput=true){\r\n        var component = null;\r\n        if (item.id!==undefined){\r\n            switch(item.id){\r\n                case 'Puzzle':\r\n                    component = new Puzzle();\r\n                    break;\r\n                case 'Lock':\r\n                    component = new Lock();\r\n                    break;\r\n                case 'Event':\r\n                    component = new Event();\r\n                    break;\r\n                case 'Music':\r\n                    component = new Music();\r\n                    break;\r\n                case 'Prop':\r\n                    component = new Prop();\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            this.props.addComponent(component,this.props.component._id);\r\n        }else {\r\n            component = item;\r\n            if(component._id!==this.props.component._id)\r\n                this.props.addRelationship(component._id,this.props.component._id,isInput);\r\n        }\r\n    }\r\n\r\n    /** \r\n     * React Lifecycle Render\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        let id=this.props.component._id;\r\n        var classNames = \"hide-border\";\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames+=\" canDrop\";\r\n        } else if(this.props.isOver && !this.props.canDrop){\r\n            classNames+=\" cantDrop\";\r\n        } else if(this.props.canDrop){\r\n            classNames+=\" couldDrop\";\r\n        }\r\n        let tooltip;\r\n        if(this.props.isInput){\r\n            id+=\"-input\"\r\n            classNames+=\" isInput\";\r\n            tooltip = \"Drag another component to this blue square to add it as an input to this component\"\r\n        }\r\n        else {\r\n            id+=\"-output\"\r\n            classNames+=\" isOutput\";\r\n            tooltip = \"Drag another component to this green square to add it as an output of this component\"\r\n        }\r\n        return this.props.connectDropTarget(\r\n            <div key={this.props.component._id} id={id}>\r\n                <Card className={classNames} onClick={this.props.handleComponentClick(this.props.component)}>\r\n                    <CardBody>\r\n\r\n                    </CardBody>\r\n                </Card>\r\n                <UncontrolledTooltip target={id}>{tooltip}</UncontrolledTooltip>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nComponentDnDTarget.propTypes = {\r\n    addComponent: PropTypes.func,\r\n    component: PropTypes.instanceOf(Area),\r\n    addRelationship: PropTypes.func,\r\n    isOver: PropTypes.bool,\r\n    canDrop: PropTypes.bool,\r\n    isInput: PropTypes.bool,\r\n    handleComponentClick: PropTypes.func\r\n}\r\n\r\nexport default DropTarget(Types.COMPONENT, componentTarget, collect)(ComponentDnDTarget);","import React, {Component} from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport ComponentDnDTarget from './ComponentDnDTarget';\r\nimport { Row, Col } from 'reactstrap'\r\nimport '../styles/Component.css';\r\nimport Modal from '../models/Modal';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Drag sources and drop targets only interact\r\n * if they have the same string type.\r\n * You want to keep types in a separate file with\r\n * the rest of your app's constants.\r\n */\r\nconst Types = {\r\n  COMPONENT: 'COMPONENT'\r\n};\r\n\r\n/**\r\n * Specifies the drag source contract.\r\n * Only `beginDrag` function is required.\r\n */\r\nconst componentSource = {\r\n  /**\r\n   * Determins if object can be dragged based on props\r\n   * @param {object} props \r\n   * @returns {bool}\r\n   */\r\n  canDrag(props) {\r\n    return true;\r\n  },\r\n\r\n  /**\r\n   * If your component gets unmounted while dragged\r\n   * (like a card in Kanban board dragged between lists)\r\n   * you can implement something like this to keep its\r\n   * appearance dragged:\r\n   * @param {object} props \r\n   * @param {Monitor} monitor \r\n   * @returns {bool} \r\n   */\r\n  isDragging(props, monitor) {\r\n    return monitor.getItem().id === props.id;\r\n  },\r\n\r\n  /**\r\n   * Return the data describing the dragged item\r\n   * @param {object} props \r\n   * @param {Monitor} monitor \r\n   * @param {Component} component\r\n   * @returns {object} \r\n   */\r\n  beginDrag(props, monitor, component) {\r\n    // Return the data describing the dragged item\r\n    var item = {...props.component};\r\n    return item;\r\n  },\r\n\r\n  /**\r\n   * Checks if component was dragged and didn't drop, check if user wants to delete\r\n   * @param {object} props \r\n   * @param {Monitor} monitor \r\n   * @param {Component} component \r\n   */\r\n  endDrag(props, monitor, component) {\r\n    if (!monitor.didDrop()) {\r\n      if((props.component!==undefined||props.component!==null)&&props.showModal)\r\n        props.showModal(new Modal(\"Warning\", \"Are you sure you want to delete this component?\",\"Yes\",component.removeComponent,\"No\",()=>{}));\r\n        return;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n * @param {Connect} connect\r\n * @param {Monitor} monitor\r\n * @returns {object} Props\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    // Call this function inside render()\r\n    // to let React DnD handle the drag events:\r\n    connectDragSource: connect.dragSource(),\r\n    // You can ask the monitor about the current drag state:\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\n/**\r\n * Class for Component drag and drop source\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass ComponentDnDSource extends Component{\r\n  /** Removes a component */\r\n  removeComponent = ()=>{\r\n    this.props.removeComponent(this.props.component._id);\r\n  }\r\n\r\n  /**\r\n   * React Lifecycle called after component udpates\r\n   * @param {object} prevProps \r\n   */\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.renderTrigger!==prevProps.renderTrigger)\r\n      this.forceUpdate();\r\n  }\r\n\r\n  /**\r\n   * Finds a component \r\n   * @param {Component} component \r\n   */\r\n  findComponent(component){\r\n    if(this.props.findComponent!==undefined){\r\n      return this.props.findComponent(component);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /** Calls forceUpdate */\r\n  update = () => this.forceUpdate()\r\n\r\n  /** React Lifecycle called when Component did Mount */\r\n  componentDidMount() {\r\n    window.addEventListener('click', this.update, true);\r\n    window.addEventListener('scroll', this.update, true);\r\n    window.addEventListener('resize', this.update);\r\n  }\r\n  \r\n  /** React Lifecycle called when Component did Mount */\r\n  componentWillUnmount() {\r\n    window.removeEventListener('click', this.update);\r\n    window.removeEventListener('scroll', this.update);\r\n    window.removeEventListener('resize', this.update)\r\n  }\r\n\r\n  /** \r\n   * React Lifecycle Render\r\n   * @returns {JSX}\r\n   */\r\n  render() {\r\n      var target;\r\n      if (this.props.isTarget){\r\n        target = (\r\n            <Row>\r\n                <Col xs=\"6\"><ComponentDnDTarget isInput={true} component={this.props.component} handleComponentClick={this.props.handleComponentClick} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/></Col>\r\n                <Col xs=\"6\"><ComponentDnDTarget isInput={false} component={this.props.component} handleComponentClick={this.props.handleComponentClick} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/></Col>\r\n            </Row>\r\n        );\r\n      }\r\n      var style = {};\r\n      let classNames = \"component container-fluid\";\r\n      if(this.props.component!==undefined){\r\n        style.top = this.props.component.position.top;\r\n        style.left = this.props.component.position.left;\r\n        classNames += \" \" + this.props.component.type + \" \" + this.props.component._id;\r\n      } \r\n      return this.props.connectDragSource(\r\n          <div className={classNames} id={this.props.component._id} style={style} onClick={this.props.handleComponentClick(this.props.component)}>\r\n            <Row>\r\n              <Col>\r\n                <p>{this.props.component.type}</p>\r\n                <p>{this.props.component._id}</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n              <p>{this.props.component.name}</p>\r\n              </Col>\r\n            </Row>\r\n            {target}\r\n          </div>\r\n      )\r\n  }\r\n};\r\n\r\nComponentDnDSource.propTypes = {\r\n  removeComponent: PropTypes.func,\r\n  renderTrigger: PropTypes.string,\r\n  component: PropTypes.instanceOf(Component),\r\n  findComponent: PropTypes.func,\r\n  isTarget: PropTypes.bool,\r\n  handleComponentClick: PropTypes.func,\r\n  showModal: PropTypes.func,\r\n  addComponent: PropTypes.func,\r\n  addRelationship: PropTypes.func,\r\n}\r\n\r\nexport default DragSource(Types.COMPONENT, componentSource, collect)(ComponentDnDSource);","import React, {Component}  from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Card, CardBody ,CardTitle } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport { DropTarget } from 'react-dnd';\r\nimport ComponentDnDSource from './ComponentDnDSource';\r\nimport { Area, Puzzle, Prop, Lock, Music, Event } from '../models/index.js';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Drag sources and drop targets only interact\r\n * if they have the same string type.\r\n * You want to keep types in a separate file with\r\n * the rest of your app's constants.\r\n */\r\nconst Types = {\r\n    COMPONENT: 'COMPONENT'\r\n}\r\n\r\n/**\r\n * Specifies the drop target contract.\r\n * All methods are optional.\r\n */\r\nconst componentTarget = {\r\n    drop(props,monitor,component){\r\n        if (monitor.didDrop() || !component || typeof props.component===undefined){\r\n            return;\r\n        }\r\n        const item = monitor.getItem();\r\n        let clientOffset = monitor.getClientOffset();\r\n        let targetRect = ReactDOM.findDOMNode(component).getBoundingClientRect();\r\n        item.position = {top:(((clientOffset.y-targetRect.y)/targetRect.height)*100)+\"%\",left:(((clientOffset.x-targetRect.x)/targetRect.width)*100)+\"%\"};\r\n        component.handleComponentDrop(item);\r\n        return {moved:true};\r\n    }\r\n}\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n * @param {Connect} connect\r\n * @param {Monitor} monitor\r\n * @returns {object} Props\r\n */\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        isOverCurrent: monitor.isOver(),\r\n        canDrop: monitor.canDrop(),\r\n        itemType: monitor.getItemType()\r\n    }\r\n}\r\n\r\n/**\r\n * Class for Area drag and drop target for components \r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass AreaDnDTarget extends Component {\r\n    /** Creates AreaDnDTarget */\r\n    constructor(){\r\n\r\n    }\r\n\r\n    /** \r\n     * Adds new components and updates existing\r\n     * @param {Component} item\r\n     * @param {bool} isInput \r\n     */\r\n    handleComponentDrop(item,isInput=false){\r\n        var component = null;\r\n        if (item.id!==undefined && item._id === undefined){\r\n            switch(item.id){\r\n                case 'Puzzle':\r\n                    component = new Puzzle();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Prop':\r\n                    component = new Prop();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Lock':\r\n                    component = new Lock();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Event':\r\n                    component = new Event();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Music':\r\n                    component = new Music();\r\n                    component.position = item.position;\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            this.props.addComponent(component,this.props.component._id);\r\n        } else {\r\n            component = item;\r\n            this.props.updateComponent(component,this.props.component._id);\r\n        }\r\n    }\r\n\r\n    /** \r\n     * React Lifecycle Render\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        var classNames = \"Area\";\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames+=\" canDrop\";\r\n        } else if(this.props.isOver && !this.props.canDrop){\r\n            classNames+=\" cantDrop\";\r\n        } else if(this.props.canDrop){\r\n            classNames+=\" couldDrop\"\r\n        }\r\n        let title = this.props.component.type + \" (\" + this.props.component._id + \") \" + this.props.component.name;\r\n        return this.props.connectDropTarget(\r\n            <div className={this.props.component.type} key={this.props.component._id}>                \r\n                <Card className={classNames} onClick={this.props.handleComponentClick(this.props.component)}>\r\n                    <CardBody>\r\n                        <CardTitle>{title}</CardTitle>  \r\n                            {this.props.outputComponents.map((component,i)=>{\r\n                                component = this.props.findComponent(component._id);\r\n                                return(<ComponentDnDSource key={component._id} update={this.update} isTarget handleComponentClick={this.props.handleComponentClick}  component={component} findComponent={this.props.findComponent} id={component.type} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/>)\r\n                            })}\r\n                    </CardBody>\r\n                </Card>   \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nAreaDnDTarget.propTypes = {\r\n    component: PropTypes.instanceOf(Area),\r\n    outputComponents: PropTypes.array,\r\n    isOver: PropTypes.bool,\r\n    canDrop: PropTypes.bool,\r\n    addComponent: PropTypes.func,\r\n    removeComponent: PropTypes.func,\r\n    updateComponent: PropTypes.func,\r\n    addRelationship: PropTypes.func,\r\n    findComponent: PropTypes.func,\r\n    showModal: PropTypes.func,\r\n    handleComponentClick: PropTypes.func,\r\n}\r\n\r\nexport default DropTarget(Types.COMPONENT, componentTarget, collect)(AreaDnDTarget);","import React, {Component} from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport AreaDnDTarget from './AreaDnDTarget';\r\nimport '../styles/Component.css';\r\nimport { Card, UncontrolledTooltip } from 'reactstrap';\r\nimport Area from '../models/Area';\r\nimport Modal from '../models/Modal';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Drag sources and drop targets only interact\r\n * if they have the same string type.\r\n * You want to keep types in a separate file with\r\n * the rest of your app's constants.\r\n */\r\nconst Types = {\r\n  AREA: 'AREA'\r\n};\r\n\r\n/**\r\n * Specifies the drag source contract.\r\n * Only `beginDrag` function is required.\r\n */\r\nconst areaSource = {\r\n  /**\r\n   * Determins if object can be draged based on props\r\n   * @param {object} props \r\n   * @returns {bool} \r\n   */\r\n  canDrag(props) {\r\n    return true;\r\n  },\r\n\r\n  /**\r\n   * If your component gets unmounted while dragged\r\n   * (like a card in Kanban board dragged between lists)\r\n   * you can implement something like this to keep its\r\n   * appearance dragged:\r\n   * @param {object} props \r\n   * @param {Monitor} monitor \r\n   * @returns {bool} \r\n   */\r\n  isDragging(props, monitor) {\r\n    return monitor.getItem().id === props.id;\r\n  },\r\n\r\n  /**\r\n   * Return the data describing the dragged item\r\n   * @param {object} props \r\n   * @param {Monitor} monitor \r\n   * @param {Component} component\r\n   * @returns {object} \r\n   */\r\n  beginDrag(props, monitor, component) {\r\n    var item = null;\r\n    if (props.id!==undefined){\r\n       item = { id: props.id };\r\n    } else {\r\n       item = { component: props.component };\r\n    }\r\n    return item;\r\n  },\r\n\r\n  /**\r\n   * Checks if component was dragged and didn't drop, check if user wants to delete\r\n   * @param {object} props \r\n   * @param {Monitor} monitor \r\n   * @param {Component} component \r\n   */\r\n  endDrag(props, monitor, component) {\r\n    if (!monitor.didDrop() && component!=null) {\r\n      props.showModal(new Modal(\"Warning\", \"Are you sure you want to delete this component?\",\"Yes\",component.removeComponent,\"No\",()=>{}));\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n * @param {Connect} connect\r\n * @param {Monitor} monitor\r\n * @returns {object} Props\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    // Call this function inside render()\r\n    // to let React DnD handle the drag events:\r\n    connectDragSource: connect.dragSource(),\r\n    // You can ask the monitor about the current drag state:\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\n/**\r\n * Class for Area drag and drop source \r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass AreaDnDSource extends Component{\r\n  /** Creates AreaDnDSource */\r\n  constructor(){\r\n    super();\r\n    this.state={render:true};\r\n  }\r\n\r\n  /** \r\n   * Removes a component \r\n   * @function \r\n   */\r\n  removeComponent = ()=>{\r\n    this.props.removeComponent(this.props.component._id);\r\n  }\r\n\r\n  /** \r\n   * Adds a component \r\n   * @function \r\n   * @param {Component} component\r\n   * @param {string} parentId\r\n   */\r\n  addComponent = (component,parentId)=>{\r\n    this.props.addComponent(component,this.props.component._id);\r\n    this.props.addRelationship(component._id,parentId);\r\n  }  \r\n\r\n  /**\r\n   * React Lifecycle called when updated\r\n   * @function\r\n   * @param {object} prevProps\r\n   */\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.renderTrigger!==prevProps.renderTrigger)\r\n      this.forceUpdate();\r\n  }\r\n\r\n  /** \r\n   * React Lifecycle Method\r\n   * Renders Layout\r\n   * @returns {JSX}\r\n   */\r\n  render() {\r\n    let id = this.props.id;\r\n    let iconId = id+\"-icon\";\r\n    let target;\r\n    if (this.props.isTarget){\r\n      target = (\r\n        <AreaDnDTarget findComponent={this.props.findComponent} handleComponentClick={this.props.handleComponentClick} outputComponents={this.props.outputComponents} component={this.props.component} showModal={this.props.showModal} addComponent={this.addComponent} updateComponent={this.props.updateComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/>\r\n      );\r\n    }\r\n    let classNames;\r\n    if(this.props.palletItem)\r\n      classNames += \" pallet-item\";\r\n    return this.props.connectDragSource(\r\n        <div onClick={this.props.handleComponentClick(this.props.component)}>\r\n          <Card className={classNames}>\r\n            <div className={id===undefined?\"d-none\":\"\"}>\r\n              <p style={{\"fontWeight\":\"bold\"}}>{id}<span id={iconId} className=\"pallet-item-icon\"><i className=\"fa fa-question-circle text-right\" aria-hidden=\"true\"></i></span></p>     \r\n              <UncontrolledTooltip target={iconId}>Represents a collection of components. Can be used to represent physical areas such as two seperate rooms or logical areas</UncontrolledTooltip>\r\n            </div>\r\n            {target}\r\n          </Card>\r\n        </div>\r\n    )\r\n  }\r\n};\r\n\r\nAreaDnDSource.propTypes = {\r\n  component: PropTypes.instanceOf(Area),\r\n  isTarget: PropTypes.bool,\r\n  removeComponent: PropTypes.func,\r\n  addComponent: PropTypes.func,\r\n  addRelationship: PropTypes.func,\r\n  renderTrigger: PropTypes.string,\r\n  findComponent: PropTypes.func,\r\n  handleComponentClick: PropTypes.func,\r\n  outputComponents: PropTypes.array,\r\n  showModal: PropTypes.func,\r\n  updateComponent: PropTypes.func,\r\n  connectDragSource: PropTypes.func,\r\n  palletItem: PropTypes.bool\r\n}\r\n\r\nexport default DragSource(Types.AREA, areaSource, collect)(AreaDnDSource);","import React, {Component} from 'react';\r\nimport { UncontrolledTooltip } from 'reactstrap';\r\nimport { DragSource } from 'react-dnd';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/Component.css';\r\n\r\n// Drag sources and drop targets only interact\r\n// if they have the same string type.\r\n// You want to keep types in a separate file with\r\n// the rest of your app's constants.\r\nconst Types = {\r\n  COMPONENT: 'COMPONENT'\r\n};\r\n\r\n/**\r\n * Specifies the drag source contract.\r\n * Only `beginDrag` function is required.\r\n */\r\nconst componentSource = {\r\n  /**\r\n   * Return the data describing the dragged item\r\n   * @param {object} props \r\n   * @param {Monitor} monitor \r\n   * @param {Component} component\r\n   * @returns {object} \r\n   */\r\n  beginDrag(props, monitor, component) {\r\n    // Return the data describing the dragged item\r\n    var item = {id: props.id}\r\n    return item;\r\n  }\r\n};\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n * @param {Connect} connect\r\n * @param {Monitor} monitor\r\n * @returns {object} Props\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    // Call this function inside render()\r\n    // to let React DnD handle the drag events:\r\n    connectDragSource: connect.dragSource(),\r\n    // You can ask the monitor about the current drag state:\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\n/** \r\n * Class for PalletItem\r\n * @extends Component\r\n * @author Alistair Quinn \r\n */\r\nclass PalletItem extends Component{\r\n  descriptions = {\r\n    Puzzle:\"Represents a puzzle, or any type of component that accepts and combines inputs\",\r\n    Prop:\"Can represent any prop in the escape room such as a key, ornament, book, poster ect. It is up to the designer what constitutes a prop\",\r\n    Lock:\"Represents a lock, supports multiple types\",\r\n    Event:\"Represents an event in the escape room such as a new room being unlocked\",\r\n    Music:\"Represents music played in the room can be linked together to create a playlist\"\r\n  }\r\n\r\n  /** \r\n   * React Lifecycle Render\r\n   * Renders Layout\r\n   * @returns {JSX}\r\n   */\r\n  render() {\r\n      let id=this.props.id || \"\";\r\n      let iconId = this.props.id + \"-icon\";\r\n      let classNames = id + \" component pallet-item\"\r\n      return this.props.connectDragSource(\r\n          <div className={classNames} id={id} >\r\n            <p>{id}<span id={iconId} className=\"pallet-item-icon\"><i className=\"fa fa-question-circle text-right\" aria-hidden=\"true\"></i></span></p>     \r\n            <UncontrolledTooltip target={iconId}>{this.descriptions[id]}</UncontrolledTooltip>\r\n          </div>\r\n      )\r\n  }\r\n};\r\n\r\nPalletItem.propTypes = {\r\n  id: PropTypes.string,\r\n}\r\n\r\nexport default DragSource(Types.COMPONENT, componentSource, collect)(PalletItem);","import React, {Component}  from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport AreaDnD from './AreaDnDSource';\r\nimport PalletItem from './PalletItem';\r\nimport '../styles/Pallet.css';\r\n\r\n/** \r\n * Class for Pallet \r\n * @extends Component\r\n * @author Alistair Quinn \r\n */\r\nclass Pallet extends Component {\r\n    /**\r\n     * Handles Component Click\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleComponentClick = (e) => {\r\n        \r\n    }\r\n\r\n    /**\r\n     * React lifecycle method \r\n     * Renders layout\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid pallet\">\r\n                <Row>\r\n                    <Col className=\"col text-center\">\r\n                        <h3>Pallet</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs=\"6\" md=\"12\" lg=\"12\">\r\n                        <AreaDnD palletItem={true} id=\"Area\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"6\" md=\"12\" lg=\"12\">\r\n                        <PalletItem id=\"Puzzle\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"6\" md=\"12\" lg=\"12\">\r\n                        <PalletItem id=\"Prop\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"6\" md=\"12\" lg=\"12\">\r\n                        <PalletItem id=\"Lock\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"6\" md=\"12\" lg=\"12\">\r\n                        <PalletItem id=\"Event\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"6\" md=\"12\" lg=\"12\">\r\n                        <PalletItem id=\"Music\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Pallet;","import React, {Component}  from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport '../styles/ComponentArranger.css';\r\nimport Area from './AreaDnDSource';\r\nimport AreaModel from '../models/Area';\r\nimport { DropTarget } from 'react-dnd';\r\nimport LineTo from 'react-lineto';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Drag sources and drop targets only interact\r\n * if they have the same string type.\r\n * You want to keep types in a separate file with\r\n * the rest of your app's constants.\r\n */\r\nconst Types = {\r\n    AREA: 'AREA'\r\n}\r\n\r\n/**\r\n * Specifies the drop target contract.\r\n * All methods are optional.\r\n */\r\nconst areaArrangerTarget = {\r\n    drop(props, monitor, component){\r\n        const item = monitor.getItem();\r\n        if(item.component===undefined || item.component===null){\r\n            component.props.addComponent(new AreaModel());\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n * @param {Connect} connect\r\n * @param {Monitor} monitor\r\n * @returns {object} Props\r\n */\r\nfunction collect(connect, monitor) {\r\n    return {\r\n      // Call this function inside render()\r\n      // to let React DnD handle the drag events:\r\n      connectDropTarget: connect.dropTarget(),\r\n      // You can ask the monitor about the current drag state:\r\n      isOver: monitor.isOver(),\r\n      isOverCurrent: monitor.isOver({ shallow: true }),\r\n      canDrop: monitor.canDrop(),\r\n      itemType: monitor.getItemType()\r\n    };\r\n}\r\n\r\n/**\r\n * Class for ComponentAranger, Drop target for Area's\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass ComponentArranger extends Component {\r\n    /** Creates ComponentArranger */\r\n    constructor(){\r\n        super()\r\n        this.state = {lines:[]}\r\n    }\r\n\r\n    /**\r\n     * Maps Area to a Row\r\n     * @function\r\n     * @param {Area} area\r\n     * @param {int} i Index\r\n     * @returns {JSX} Row\r\n     */\r\n    mapAreas = (area,i)=>{\r\n        if(area.type==='Area'){\r\n            let outputComponents = this.props.components.filter((component)=>{\r\n                return area.outputComponents.includes(component._id);\r\n            });\r\n            return (\r\n                <Row key={area._id}>\r\n                    <Col xs=\"12\"> \r\n                        <Area renderTrigger={JSON.stringify(area)} isTarget findComponent={this.props.findComponent} handleComponentClick={this.props.handleComponentClick} component={area} outputComponents={outputComponents} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} updateComponent={this.props.updateComponent} addRelationship={this.props.addRelationship}/>\r\n                    </Col>\r\n                </Row>\r\n            )  \r\n        }\r\n    }\r\n\r\n    /**\r\n     * React Lifecycle called on Update\r\n     * @param {object} props \r\n     * @param {object} state \r\n     */\r\n    componentDidUpdate(props,state) {\r\n        if(JSON.stringify(this.props.components)!==JSON.stringify(props.components)){\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    /** Calls force update */\r\n    update = () => this.forceUpdate()\r\n\r\n    /** React Lifecycle called when component Mounts */\r\n    componentDidMount() {\r\n        setTimeout(()=>{\r\n            this.forceUpdate();\r\n        },100)\r\n        window.addEventListener('scroll', this.update, true);\r\n        window.addEventListener('resize', this.update);\r\n    }\r\n    \r\n    /** React Lifecycle called when component unmounts */\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.update);\r\n        window.removeEventListener('resize', this.update);\r\n    }\r\n\r\n    /** \r\n     * React Lifecycle Render\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        var classNames = \"row component-arranger\";\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames+=\" canDrop\"\r\n        } else if (this.props.isOver){\r\n            classNames+=\" cantDrop\"\r\n        }\r\n        let lines = [];\r\n        for(let component of this.props.components){\r\n            if(component!==undefined && component.inputComponents!==undefined && component.type!==\"Area\"){\r\n                let inputComponents = component.inputComponents;\r\n                let outputComponents = component.outputComponents;\r\n                for(let inputComponent of inputComponents){\r\n                    inputComponent = this.props.findComponent(inputComponent);\r\n                    lines.push(<LineTo key={component._id+inputComponent._id+'input'} from={component._id} to={inputComponent._id} borderColor={\"#007bff\"}/>);\r\n                };\r\n                for(let outputComponent of outputComponents){\r\n                    outputComponent = this.props.findComponent(outputComponent);\r\n                    lines.push(<LineTo key={component._id+outputComponent._id+'output'} from={component._id} to={outputComponent._id} borderColor={\"#28a745\"}/>)\r\n                };\r\n            }\r\n        };\r\n        return this.props.connectDropTarget(\r\n            <div className={classNames}>\r\n                {lines}\r\n                    <Col xs=\"12\">\r\n                        <Row>\r\n                            <Col className=\"col text-center\">\r\n                                <h3>Components</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                {this.props.components.map(this.mapAreas)}\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nComponentArranger.propTypes = {\r\n    renderTrigger: PropTypes.string,\r\n    components: PropTypes.array,\r\n    isOver: PropTypes.bool,\r\n    canDrop: PropTypes.bool,\r\n    findComponent: PropTypes.func,\r\n    showModal: PropTypes.func,\r\n    handleComponentClick: PropTypes.func,\r\n    updateComponent: PropTypes.func,\r\n    addComponent: PropTypes.func,\r\n    removeComponent: PropTypes.func,\r\n    addRelationship: PropTypes.func\r\n}\r\n\r\nexport default DropTarget(Types.AREA, areaArrangerTarget,collect)(ComponentArranger);","import React, {Component}  from 'react';\r\nimport { Container, Row, Col, Input, Label, UncontrolledTooltip, ListGroupItem, Button, ListGroup } from 'reactstrap';\r\nimport {LockGenerator,PuzzleGenerator} from './index';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/ComponentDetails.css';\r\nimport Accessibility from './Accessibility';\r\n\r\n/** \r\n * Class for Component Details allows editing of a components details\r\n * @extends Component \r\n * @author Alistair Quinn\r\n */\r\nclass ComponentDetails extends Component {\r\n    /** Creates ComponentDetails */\r\n    constructor(){\r\n        super();\r\n        this.state={visualWarning:false,physicalWarning:false}\r\n    }\r\n\r\n    /**\r\n     * Converts a string to Camel Case\r\n     * @param {string} string \r\n     * @returns {string} \r\n     */\r\n    convertCamelCase(string){\r\n        if(typeof string !== 'string')\r\n            string = string.toString();\r\n        return string.replace(/([A-Z])/g, ' $1').replace(/^./,(str)=>{ return str.toUpperCase(); })\r\n    }\r\n\r\n    /** \r\n     * Handles input change \r\n     * @param {Event} event\r\n     * */\r\n    handleChange = (event) => { \r\n        let state = {};\r\n        state[event.target.id] = event.target.value;  \r\n        if(event.target.id===\"puzzleType\")\r\n            state.puzzle = {}\r\n        if(event.target.id===\"lockType\")\r\n            state.output = \"\"\r\n        state._id = this.props.selected._id;  \r\n        this.props.updateComponent(state);\r\n    }\r\n\r\n    /**\r\n     * Handles Output change\r\n     * @param {string} event\r\n     */\r\n    handleOutputChange = (output)=>{\r\n        this.props.updateComponent({output});\r\n    }\r\n\r\n    /**\r\n     * Handles Puzzle change\r\n     * @param {Puzzle} puzzle\r\n     */\r\n    handlePuzzleChange = (puzzle)=>{\r\n        if(puzzle.output===undefined){\r\n            puzzle.output = \"\";\r\n        } \r\n        this.props.updateComponent({_id:this.props.selected._id,puzzle,output:puzzle.output});\r\n        this.forceUpdate();\r\n    }\r\n\r\n    /** Generates Output from Inputs */\r\n    generateFromInputs=()=>{\r\n        this.props.updateComponent({_id:this.props.selected._id,output:this.props.calculateOutput(this.props.selected._id)})\r\n    }\r\n\r\n    /**\r\n     * Maps Details to Inputs\r\n     * @param {string} key\r\n     * @param {int} i index\r\n     * @returns {JSX}\r\n     */\r\n    mapDetailToInput = (key,i) => {\r\n        if(key==='output') {\r\n            let generator;\r\n            if(this.props.selected.type==='Lock')\r\n                generator = <LockGenerator lockType={this.props.selected.lockType} handleOutputChange={this.handleOutputChange}></LockGenerator>\r\n            else if(this.props.selected.type==='Puzzle') {\r\n                generator = <PuzzleGenerator puzzleType={this.props.selected.puzzleType} handlePuzzleChange={this.handlePuzzleChange}></PuzzleGenerator>\r\n            }\r\n            return (<Row key={i}>\r\n                <Col>\r\n                    <Label for={key}>{this.convertCamelCase(key)}</Label>\r\n                    <Input type=\"text\" name={key} id={key} placeholder={this.convertCamelCase(key)} value={this.props.selected[key]} onChange={this.handleChange}/>\r\n                    <Button block color=\"primary\" onClick={this.generateFromInputs}>Generate From Inputs</Button>\r\n                    <br/>\r\n                    {generator}\r\n                    <br/>\r\n                </Col>\r\n            </Row>)\r\n        } else if (key==='lockType'){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{this.convertCamelCase(key)}</Label>\r\n                        <Input type=\"select\" name={key} id={key} placeholder={this.convertCamelCase(key)} value={this.props.selected[key]} onChange={this.handleChange}>\r\n                            <option>Numeric</option>\r\n                            <option>Word</option>\r\n                            <option>Directional</option>\r\n                            <option>Contactless</option>\r\n                            <option>Key</option>\r\n                        </Input>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        } else if (key==='eventType'){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{this.convertCamelCase(key)}</Label>\r\n                        <Input type=\"select\" name={key} id={key} placeholder={this.convertCamelCase(key)} value={this.props.selected[key]} onChange={this.handleChange}>\r\n                            <option>Sound Effect</option>\r\n                            <option>New Area</option>\r\n                            <option>Objective Complete</option>\r\n                            <option>Custom</option>\r\n                        </Input>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        } else if (key==='puzzleType'){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{this.convertCamelCase(key)}</Label>\r\n                        <Input type=\"select\" name={key} id={key} placeholder={this.convertCamelCase(key)} value={this.props.selected[key]} onChange={this.handleChange}>\r\n                            <option>Cipher</option>\r\n                            <option>Word</option>\r\n                            <option>Colour</option>\r\n                            <option>Hidden Word</option>\r\n                            <option>Hidden Object</option>\r\n                            <option>Riddle</option>\r\n                            <option>Custom</option>\r\n                        </Input>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        } else if (key==='puzzle'){\r\n            let component = this.props.selected;\r\n            let details = Object.keys(component[key]).map((property,index,array)=>{\r\n                let detail;\r\n                if(property.includes('DATA')){\r\n                    detail = \"Export as PDF to View\";\r\n                }else if(typeof component[key][property] === 'object')\r\n                    detail = JSON.stringify(component[key][property]);\r\n                else{\r\n                    detail = component[key][property];\r\n                } \r\n                return(\r\n                <Row key={property} id={key}>\r\n                    <Col>\r\n                        <p>{\" \" + this.convertCamelCase(property) + \": \"+this.convertCamelCase(detail)}</p>\r\n                    </Col>\r\n                </Row>\r\n                )\r\n            });\r\n            if(Object.keys(component[key]).length>0){\r\n                return (\r\n                    <Row key={i}>\r\n                        <Col>\r\n                            <Label>{this.convertCamelCase(key)}</Label>\r\n                            {details}\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }else{\r\n                return null;\r\n            } \r\n        }else if(typeof this.props.selected[key] === \"string\" && key!==\"_id\" && key!==\"type\" && key!==\"version\"){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{this.convertCamelCase(key)}</Label>\r\n                        <Input type=\"text\" name={key} id={key} placeholder={this.convertCamelCase(key)} value={this.props.selected[key]} onChange={this.handleChange}/>\r\n                    </Col>\r\n                </Row>)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deletes a relationship\r\n     * @param {string} id\r\n     * @param {bool} isInput\r\n     */\r\n    handleOnClick = (id,isInput)=> (e) => {\r\n        let component = {...this.props.selected};\r\n        let state = {};\r\n        state._id = component._id;\r\n        if(isInput){\r\n            state.inputComponents = component.inputComponents.filter(oldId => oldId!==id);\r\n        } else {\r\n            state.outputComponents = component.outputComponents.filter(oldId => oldId!==id);\r\n        }\r\n        this.props.updateComponent(state);\r\n    }\r\n\r\n    /**\r\n     * Maps Relationship to List Group Item\r\n     * @param {string} id\r\n     * @param {int} i\r\n     * @param {bool} isInput\r\n     * @returns {JSX}\r\n     */\r\n    mapIDToP = (id,i,isInput) => {\r\n        return (\r\n            <ListGroupItem key={i}>\r\n                {id}\r\n                <Button onClick={this.handleOnClick(id,isInput)} color=\"danger\" style={{display:'inline', position: 'absolute', right:'2px', top:'0.3rem'}}>\r\n                    X\r\n                </Button>\r\n            </ListGroupItem>\r\n        )\r\n    }\r\n    \r\n    /** \r\n     * React Lifecycle Render\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        let component = this.props.selected;\r\n        let id=\"\";\r\n        let type=\"\";\r\n        let properties;\r\n        let inputs;\r\n        let outputs;\r\n        let inputRelationships;\r\n        let outputRelationships;\r\n        let visualWarning;\r\n        let physicalWarning;\r\n        if(component!==undefined || component!==null){\r\n            if(component._id!==undefined)\r\n                id = \" (\"+component._id+\")\";\r\n            else \r\n                id=\"\";\r\n            properties = Object.keys(component).map(this.mapDetailToInput)\r\n            type = component.type||\"\";\r\n            if(component.type!=='Area'&&component.inputComponents!==undefined&&component.outputComponents!==undefined&&(component.inputComponents.length>0||component.outputComponents.length>0)){\r\n                inputs = component.inputComponents.map((id,i)=>this.mapIDToP(id,i,true));\r\n                outputs = component.outputComponents.map((id,i)=>this.mapIDToP(id,i,false));\r\n                inputRelationships = (\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>Inputs</h4>\r\n                            <ListGroup>\r\n                                {inputs}\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n                outputRelationships = (\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>Outputs</h4>\r\n                            <ListGroup>\r\n                                {outputs}\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            }\r\n            //Accessibility\r\n            let visualKeys = [];\r\n            Object.keys(this.props.accessibility.visual).forEach((key)=>{\r\n                if(this.props.accessibility.visual[key]===true)\r\n                    visualKeys.push(key);\r\n            });\r\n            if(visualKeys.length>0)\r\n                visualWarning = (                \r\n                <Col className=\"col text-center\">\r\n                    <p id=\"visualWarning\"><i className=\"fa fa-wheelchair text-success\"  aria-hidden=\"true\"></i></p>  \r\n                    <UncontrolledTooltip id=\"visual\" target=\"visualWarning\">\r\n                    You selected: {visualKeys.join(',')} be careful with colour choices\r\n                    </UncontrolledTooltip>\r\n                </Col>\r\n                )\r\n            let physicalKeys = [];\r\n            Object.keys(this.props.accessibility.physical).forEach((key)=>{\r\n                if(this.props.accessibility.physical[key]===true)\r\n                    physicalKeys.push(key);\r\n            });\r\n            if(physicalKeys.length>0)\r\n                physicalWarning = (\r\n                <Col className=\"col text-center\">\r\n                    <p id=\"physicalWarning\"><i class=\"fa fa-wheelchair text-primary\" id=\"physicalWarning\" aria-hidden=\"true\"></i></p>\r\n                    <UncontrolledTooltip id=\"physical\" target=\"physicalWarning\">\r\n                    You selected: {physicalKeys.join(',')} ensure plenty of room around puzzles and check how difficult puzzle is to handle\r\n                    </UncontrolledTooltip>\r\n                </Col>\r\n                )\r\n        }\r\n        return (\r\n            <Container fluid className=\"container-fluid component-details\">\r\n                <Row>\r\n                    <Col className=\"col text-center\">\r\n                        <h3>Details</h3>\r\n                        <h4>{type + id}</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {visualWarning}\r\n                    {physicalWarning}\r\n                </Row>\r\n                {properties}\r\n                {inputRelationships}\r\n                {outputRelationships}\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nComponentDetails.propTypes = {\r\n    calculateOutput: PropTypes.func,\r\n    accessibility: PropTypes.instanceOf(Accessibility),\r\n    selected: PropTypes.instanceOf(Component),\r\n    updateComponent: PropTypes.func\r\n}\r\n\r\nexport default ComponentDetails;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Alert, Button, Form, FormGroup, Label, Input, FormText} from 'reactstrap';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Class for Login\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass Login extends Component {\r\n    /** Creates Login */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            message: \"\",\r\n            color: \"success\",\r\n            recaptcha: false\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles form submit\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        //Authenticate credentials \r\n        if(this.state.email!==\"\" && this.state.password!==\"\" && this.state.recaptcha && this.props.authenticateCredentials){\r\n            var err = await this.props.authenticateCredentials({strategy:'local',email:this.state.email,password:this.state.password});\r\n            this.setState({message:err, color:\"danger\"});\r\n        } else {\r\n            this.setState({message:\"Error\"})\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles Input Change\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles Alert Dismiss\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleDismiss = (e) => {\r\n        this.setState({message: \"\", color:\"success\"});\r\n    }\r\n\r\n    /**\r\n     * Handles Reset Password Click\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleClick = async (e) => {\r\n        e.preventDefault();\r\n        if(this.props.sendReset){\r\n            let result = await this.props.sendReset(this.state.email);\r\n            this.setState({message:result.message, color:result.color});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles ReCAPTCHA\r\n     * @function\r\n     * @param {bool} value\r\n     */\r\n    handleReCAPTCHA = (value) => {\r\n        this.setState({recaptcha:value})\r\n    }\r\n\r\n    /** \r\n     * React Lifecycle Render\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        return (\r\n            <div className=\"login full-container verticaly-center-content\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup>\r\n                                    <Label for=\"email\">Email</Label>\r\n                                    <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"password\">Password</Label>\r\n                                    <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <ReCAPTCHA\r\n                                    sitekey={process.env.REACT_APP_RECAPTCHA}\r\n                                    onChange={this.handleReCAPTCHA}\r\n                                />\r\n                                <Button disabled={this.state.email===\"\" || this.state.password===\"\" || this.state.message!==\"\" || !this.state.recaptcha}>Login</Button>\r\n                                <FormText>\r\n                                    Don't have an account? Sign Up <Link to=\"/signup\">Here</Link>\r\n                                </FormText>\r\n                                <FormText>\r\n                                    Forgotten Password? Enter your email above and then <button onClick={this.handleClick} className=\"btn btn-link\" style={{padding:0,fontSize:'inherit'}}>Click Here</button>\r\n                                </FormText>\r\n                                <Alert isOpen={this.state.message !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.message}</Alert>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nLogin.propTypes = {\r\n    authenticateCredentials: PropTypes.func,\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/PasswordStrengthMeter.css';\r\n\r\n/** \r\n * Class for PasswordStrengthMeter \r\n * @extends Component\r\n * @author Alistair Quinn \r\n */\r\nclass PasswordStrengthMeter extends Component {\r\n  /**\r\n   * Converts Strength Score to String\r\n   * @function\r\n   * @param {int} score\r\n   */\r\n  convertScoreToLabel = (score) => {\r\n      switch(score) {\r\n          case 0:\r\n            return 'Weak';\r\n          case 1:\r\n            return 'Weak';\r\n          case 2:\r\n            return 'Fair';\r\n          case 3:\r\n            return 'Good';\r\n          case 4:\r\n            return 'Strong';\r\n          default:\r\n            return 'Weak';\r\n      }\r\n  }\r\n\r\n  /** \r\n   * React Lifecycle Render\r\n   * Renders Layout\r\n   * @returns {JSX}\r\n   */\r\n  render() {\r\n      const { score } = this.props; \r\n      return (\r\n          <div className=\"password-strength-meter\">\r\n              <progress className={`password-strength-meter-progress strength-${this.convertScoreToLabel(score)}`} value={score} max=\"4\"/>\r\n              <label className=\"password-strength-meter-label\">\r\n                <strong>Password Strength:</strong> {this.convertScoreToLabel(score)}\r\n              </label>\r\n          </div>\r\n      )\r\n  }\r\n};\r\n\r\nPasswordStrengthMeter.propTypes = {\r\n  score: PropTypes.number\r\n}\r\n\r\nexport default PasswordStrengthMeter;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Alert, Button, Form, FormGroup, Label, Input, FormText} from 'reactstrap';\r\nimport PasswordStrengthMeter from './PasswordStrengthMeter'\r\nimport zxcvbn from 'zxcvbn';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Class for Signup\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass Signup extends Component {\r\n    /** Creates Signup */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            password2:\"\",\r\n            message: \"\",\r\n            testResult: {}\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles Form Submit\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if(this.state.email!==\"\" && this.state.password!==\"\" && this.state.password2!==\"\" && this.state.password===this.state.password2 && this.state.recaptcha && this.props.signUp){\r\n            let err = await this.props.signUp({email:this.state.email,password:this.state.password});\r\n            this.setState({message:err});\r\n        } else {\r\n            this.setState({message:\"Error\"});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles Input Change\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleChange = (e) => {\r\n        if(e.target.id === \"password\"){\r\n            this.setState({\r\n                [e.target.id]: e.target.value,\r\n                testResult: zxcvbn(e.target.value)\r\n            },()=>this.setState({message:this.composemessage()}));\r\n        } else {\r\n            this.setState({\r\n                [e.target.id]: e.target.value,\r\n            },()=>this.setState({message:this.composemessage()}));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Composes Error Message\r\n     * @function\r\n     * @returns {String}\r\n     */\r\n    composemessage = () => {\r\n        let messages = [];\r\n        if(this.state.password!==\"\"&&this.state.password!==this.state.password2)\r\n            messages.push(\"Passwords Must Match\");\r\n        if(this.state.testResult.score<4)\r\n            messages.push(\"Password Not Strong Enough\");\r\n        if(this.state.password.length < 8)\r\n            messages.push(\"Password Too Short\");\r\n        if(this.state.email.includes(\" \") || this.state.email.includes(\"$\") || !this.state.email.includes(\"@\"))\r\n            messages.push(\"Invalid Email\");\r\n        return messages.join(\", \");   \r\n    }\r\n\r\n    /**\r\n     * Handles Alert Dismiss\r\n     * @function\r\n     */\r\n    handleDismiss = () => {\r\n        this.setState({message: \"\"});\r\n    }\r\n\r\n    /**\r\n     * Handles Test Result\r\n     * @function\r\n     */\r\n    handleTestResult = (testResult) => {\r\n        this.setState({testResult:testResult});\r\n    }\r\n\r\n    /**\r\n     * Handles ReCAPTCHA\r\n     * @function\r\n     * @param {bool} value\r\n     */\r\n    handleReCAPTCHA = (value) => {\r\n        this.setState({recaptcha:value})\r\n    }\r\n\r\n    /** \r\n     * React Lifecycle Method\r\n     * Renders Layout\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        return (\r\n            <div className=\"sign-up full-container verticaly-center-content\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form noValidate onSubmit={this.handleSubmit}>\r\n                                <FormGroup>\r\n                                    <Label for=\"email\">Email</Label>\r\n                                    <Input required type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"password\">Password</Label>\r\n                                    <Input required type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                                    <PasswordStrengthMeter score={this.state.testResult.score}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"password2\">Re-Type Password</Label>\r\n                                    <Input required type=\"password\" name=\"password2\" id=\"password2\" value={this.state.password2} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <ReCAPTCHA\r\n                                    sitekey={process.env.REACT_APP_RECAPTCHA}\r\n                                    onChange={this.handleReCAPTCHA}\r\n                                />\r\n                                <Button disabled={this.state.email===\"\" || this.state.password===\"\" || this.state.password !== this.state.password2 || this.state.message!==\"\" || !this.state.recaptcha}>Sign Up</Button>\r\n                                <FormText>\r\n                                    Passwords must be strong and 8 characters in length or more\r\n                                </FormText>\r\n                                <FormText>\r\n                                    Have an account? Log In <Link to=\"/login\">Here</Link>\r\n                                </FormText>\r\n                                <Alert isOpen={this.state.message !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.message}</Alert>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nSignup.propTypes = {\r\n    signUp: PropTypes.func\r\n}\r\n\r\nexport default Signup;","import React, {Component}  from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\n/** \r\n * Class for About Page \r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass About extends Component {\r\n    /** \r\n     * React Lifecycle Render\r\n     * Renders Layout\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col>\r\n                        <p>\r\n                            This is my honours project for BsC(Hons) Computing: Application Software Development at Robert Gordon University\r\n                            This is a web app for designing an escape room using drag and drop components\r\n                        </p>       \r\n                    </Col>\r\n                    <Col>\r\n                        <ul>\r\n                            <li><a href=\"https://github.com/AldoAbdn/Escape-Room-Generator/\">Github Repo</a></li>\r\n                            <li><a href=\"https://ninjamock.com/s/KCMW2Tx\">Wireframe</a></li>\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default About;","import React, {Component}  from 'react';\r\nimport YouTubePlaylist from 'react-youtube-playlist';\r\nimport '../styles/Tutorials.css';\r\n\r\n/**\r\n * Class for Tutorials\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass Tutorials extends Component {\r\n    /** \r\n     * React Lifecycle Method\r\n     * Renders Layout\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        return (\r\n            <YouTubePlaylist\r\n                width={'100%'}\r\n                height={'70%'}\r\n                api_key={process.env.REACT_APP_YOUTUBE_API_KEY}\r\n                playlist_id={process.env.REACT_APP_TUTORIALS_PLAYLIST_ID}\r\n                scrolling={\"auto\"}\r\n            />\r\n        )\r\n    }\r\n};\r\n\r\nexport default Tutorials;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router'\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Class for ProtectedRoute\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass ProtectedRoute extends Component {\r\n  /** \r\n   * React Lifecycle Method\r\n   * Renders Layout\r\n   * @returns {JSX}\r\n   */\r\n    render(){\r\n        if (window.localStorage.getItem('feathers-jwt')){\r\n            if(this.props.condition!==undefined){\r\n                if(!this.props.condition){\r\n                    return(<Redirect to={this.props.redirect} state={this.props.location}/>)\r\n                } else {\r\n                    return (<Route {...this.props}/>)\r\n                }\r\n            } else {\r\n                return (<Route {...this.props}/>)\r\n            }\r\n        } else {\r\n            return (<Redirect to='/login' state={this.props.location}/>)\r\n        }\r\n    }\r\n}\r\n\r\nProtectedRoute.propTypes = {\r\n    condition: PropTypes.bool,\r\n    location: PropTypes.string,\r\n}\r\n\r\nexport default ProtectedRoute;","import React, {Component}  from 'react';\r\nimport { Container, Row } from 'reactstrap';\r\n\r\n/** \r\n * Class for Not Found \r\n * @extends Component\r\n * @author Alistair Quinn \r\n */\r\nclass NotFound extends Component {\r\n    /**\r\n     * React lifecycle method \r\n     * Renders Layout\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <h1>404 Page Not Found</h1>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default NotFound;","import RandomWords from 'random-words';\r\n\r\n/**\r\n * Class for LockGenerator\r\n * @author Alistair Quinn\r\n */\r\nclass LockGenerator {\r\n    /**\r\n     * Generates a random numeric combination of a certain length\r\n     * @param {int} length \r\n     * @returns {int}\r\n     */\r\n    generateNumericCombination(length){\r\n        let number = \"\";\r\n        for(let i = 0 ; i<length; i++){\r\n            number += parseInt(Math.floor(Math.random()*9));\r\n        }\r\n        return number;\r\n    }\r\n\r\n    /**\r\n     * Generates Random Work Strings\r\n     * @param {int} amount \r\n     * @param {int} wordsPerString \r\n     * @returns {Array<String>}\r\n     */\r\n    generateWords(amount=1,wordsPerString=1){\r\n        let words = RandomWords({min:amount,max:amount,exactly:amount,wordsPerString:wordsPerString});\r\n        return words.slice(0,amount);\r\n    }\r\n\r\n    /**\r\n     * Generates a Random Directional Sequence \r\n     * @param {int} length \r\n     * @returns {Array<String>}\r\n     */\r\n    generateDirectionSequence(length){\r\n        let sequence = [];\r\n        let directions = [\"UP\",\"DOWN\",\"LEFT\",\"RIGHT\"];\r\n        let number;\r\n        for(let i = 0 ; i<length; i++){\r\n            number = Math.floor(Math.random()*3);\r\n            sequence.push(directions[number]);\r\n        }\r\n        return sequence.join(',');\r\n    }\r\n}\r\n\r\nexport default LockGenerator;","import React, {Component}  from 'react';\r\nimport {Row,Col,Button,Input} from 'reactstrap'\r\nimport lockGen from '../generators/LockGenerator';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Class for Lock Generator\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass LockGenerator extends Component {\r\n    /** Creates LockGenerator */\r\n    constructor(){\r\n        super();\r\n        this.state={length:1,wordsPerString:1}\r\n        this.lockGenerator = new lockGen();\r\n    }\r\n\r\n    /**\r\n     * Handles Input Change\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleChange = (e) => { \r\n        let state = {};\r\n        state[e.target.name] = e.target.value;  \r\n        this.setState(state);\r\n    }\r\n\r\n    /**\r\n     * Handles Numeric Lock Click\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleNumericClick = (e) => {\r\n        let output = this.lockGenerator.generateNumericCombination(this.state.length);\r\n        this.props.handleOutputChange(output);\r\n    }\r\n\r\n    /**\r\n     * Handles Word Lock Click\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleWordClick = (e) => {\r\n        let output = this.lockGenerator.generateWords(this.state.length,this.state.wordsPerString);\r\n        this.props.handleOutputChange(output);\r\n    }\r\n\r\n    /**\r\n     * Handles Directional Lock Click\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleDirectionalClick = (e) => {\r\n        let output = this.lockGenerator.generateDirectionSequence(this.state.length);\r\n        this.props.handleOutputChange(output);\r\n    }\r\n\r\n    /** \r\n     * React Lifecycle Render\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        switch(this.props.lockType){\r\n            case 'Numeric':\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Input name=\"length\" placeholder=\"length\" type=\"number\" step=\"1\" min=\"1\" value={this.state.length} onChange={this.handleChange}/>\r\n                            <Button block onClick={this.handleNumericClick} color=\"primary\">Generate Random Number</Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            case 'Word':\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Input name=\"length\" placeholder=\"length\" type=\"number\" step=\"1\" min=\"1\" value={this.state.length} onChange={this.handleChange}/>\r\n                            <Input name=\"wordsPerString\" placeholder=\"words per string\" type=\"number\" step=\"1\" min=\"1\" value={this.state.wordsPerString} onChange={this.handleChange}/>\r\n                            <Button block onClick={this.handleWordClick} color=\"primary\">Generate Words</Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            case 'Directional':\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Input name=\"length\" placeholder=\"length\" type=\"number\" step=\"1\" min=\"1\" value={this.state.length} onChange={this.handleChange}/>\r\n                            <Button block onClick={this.handleDirectionalClick} color=\"primary\">Generate Directional Sequence</Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            default:\r\n                return null;\r\n            \r\n        }\r\n    }\r\n};\r\n\r\nLockGenerator.propTypes = {\r\n    handleOutputChange: PropTypes.func,\r\n    lockType: PropTypes.string,\r\n}\r\n\r\nexport default LockGenerator;","/**\r\n * Base Class for Puzzle\r\n * @author Alistair Quinn\r\n */\r\nclass Puzzle {\r\n    constructor(type){\r\n        this.type=type;\r\n    }\r\n}\r\n\r\nexport default Puzzle;","import Puzzle from './Puzzle';\r\n\r\n/**\r\n * Class for Colour\r\n * @extends Puzzle\r\n * @author Alistair Quinn\r\n */\r\nclass Colour extends Puzzle{\r\n    constructor(){\r\n        super('Colour')\r\n        let numbers = this.generateNumbers();\r\n        this.output = numbers.num1.toString() + numbers.num2.toString() + numbers.num3.toString() + numbers.num4.toString();\r\n        this.answer= numbers.num1.toString() + numbers.num2.toString() + numbers.num3.toString() + numbers.num4.toString();\r\n        this.numbers = numbers.numbers;\r\n    }\r\n\r\n    generateNumbers(){\r\n        let num1 = Math.floor(Math.random()*4)+1;\r\n        let num2;\r\n        while(num2!==num1){\r\n            num2 = Math.floor(Math.random()*4)+1;\r\n        }\r\n        let num3 = num1 + num2;\r\n        let num4 = Math.floor(Math.random()*4)+1;\r\n        let numbers = [{number:num1,colour:'red'},{number:num2,colour:'blue'},{number:num3,colour:'purple'},{number:num4,colour:'green'}];\r\n        return {num1,num2,num3,num4,numbers};\r\n    }\r\n}\r\n\r\nexport default Colour;","import CrosswordGenerator from 'cwg';\r\nimport Puzzle from './Puzzle';\r\n\r\n/**\r\n * Class for Crossword\r\n * @extends Puzzle\r\n * @author Alistair Quinn\r\n */\r\nclass Crossword extends Puzzle {\r\n    constructor(output=\"\",words,hints,answers){\r\n        super('Crossword');\r\n        this.type=\"crossword\";\r\n        this.output=\"\";\r\n        this.words=words;\r\n        this.hints=hints;\r\n        this.answers=answers;\r\n        this.crossword=CrosswordGenerator(words);\r\n    }\r\n}\r\n\r\nexport default Crossword;","import Puzzle from './Puzzle';\r\n\r\n/**\r\n * Class for HiddenWord\r\n * @extends Puzzle\r\n * @author Alistair Quinn\r\n */\r\nclass HiddenWord extends Puzzle{\r\n    constructor(word,words,hints,answers){\r\n        super('HiddenWord');\r\n        this.output=word;\r\n        this.word=word;\r\n        this.words=words;\r\n        this.hints=hints;\r\n        this.answers=answers;\r\n        this.hiddenWord=this.generateHiddenWord(word,words);\r\n    }\r\n\r\n    generateHiddenWord(word,words){\r\n        let matrix = [];\r\n        for (let i=0;i<words.length;i++){\r\n            matrix.push(words[i].indexOf(word[i]));\r\n        }\r\n\r\n        return matrix;\r\n    }\r\n}\r\n\r\nexport default HiddenWord;","import riddles from '../generators/riddle.json';\r\nimport Puzzle from './Puzzle';\r\n\r\n/**\r\n * Class for Riddle\r\n * @extends Puzzle\r\n * @author Alistair Quinn\r\n */\r\nclass Riddle extends Puzzle {\r\n    constructor(){\r\n        super('Riddle');\r\n        let riddle = this.generateRandomRiddle();\r\n        this.output=riddle.answer;\r\n        this.riddle=riddle;\r\n    }\r\n    generateRandomRiddle(){\r\n        return riddles[Math.floor(Math.random()*riddles.length)];\r\n    }\r\n}\r\n\r\nexport default Riddle;","import Puzzle from './Puzzle';\r\nimport encoders from '../ciphers/encoders.json';\r\nimport decoders from '../ciphers/decoders.json';\r\n\r\n/**\r\n * Class for Cipher\r\n * @extends Puzzle\r\n * @author Alistair Quinn\r\n */\r\nclass Cipher extends Puzzle {\r\n    constructor(cipherType=\"pigpen\",encoder=encoders['pigpen'],decoder=decoders['pigpen']){\r\n        super('Cipher')\r\n        this.cipherType = cipherType;\r\n        this.encoderDATA = encoder;\r\n        this.decoderDATA = decoder;\r\n    }\r\n}\r\n\r\nexport default Cipher;","import {Crossword,HiddenWord,Riddle,Colour,Cipher} from '../puzzles/index';\r\n\r\n/**\r\n * Class for PuzzleGenerator\r\n * @author Alistair Quinn\r\n */\r\nclass PuzzleGenerator {\r\n    /**\r\n     * Generates a cipher by type\r\n     * @param {String} type \r\n     * @returns {Cipher}\r\n     */\r\n    generateCipher(type=\"pigpen\"){\r\n        switch(type){\r\n            case 'pigpen':\r\n                return new Cipher();\r\n            default:\r\n                return new Cipher();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generates a Word Puzzle by type\r\n     * @param {String} type \r\n     * @param {?????} options \r\n     * @returns {Puzzle}\r\n     */\r\n    generateWord(type=\"crossword\",options) {\r\n        switch(type){\r\n            case 'crossword':\r\n                return new Crossword(\"\",options.words,options.hints,options.answers);\r\n            case 'hidden':\r\n                return new HiddenWord(options.word,options.words,options.hints,options.answers);\r\n            case 'riddle':\r\n                return new Riddle();\r\n            default:\r\n                return new Riddle();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generates a Colour Puzzle\r\n     * @returns {Colour}\r\n     */\r\n    generateColour(){\r\n        return new Colour();\r\n    }\r\n}\r\n\r\nexport default PuzzleGenerator;","import React, {Component}  from 'react';\r\nimport {Row, Col, Button, Input, InputGroup, InputGroupAddon, InputGroupText} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport EscapeRoom from '../models/EscapeRoom';\r\n\r\n/**\r\n * Class for ListCreator\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass ListCreator extends Component {\r\n    /** Creates ListCreator */\r\n    constructor(){\r\n        super();\r\n        this.state = {items:[\"\"]};\r\n    }\r\n\r\n    /**\r\n     * Handles Input Change\r\n     * @function\r\n     * @param {Event} event\r\n     */\r\n    handleChange = (event) => { \r\n        let index = event.target.id;\r\n        let items = [...this.state.items];\r\n        items[index] = event.target.value;\r\n        this.setState({items},()=>{\r\n            this.props.handleChange(items);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Adds a string to items\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    addItem = (e) => {\r\n        let items = [...this.state.items];\r\n        items.push(\"\");\r\n        this.setState({items});\r\n        this.props.handleChange(items);\r\n    }\r\n\r\n    /**\r\n     * Removes an item from the \r\n     * @param {Event} e\r\n     */\r\n    removeItem = (index) => (e) => {\r\n        let items = [...this.state.items];\r\n        items = [...items.slice(0,index),...items.slice(index+1)];\r\n        this.setState({items});\r\n        this.props.handleChange(items);\r\n    }\r\n    \r\n    /**\r\n     * Maps items to Inputs\r\n     * @param {string} item\r\n     * @param {int} index\r\n     * @param {Array} array\r\n     * @returns {JSX}\r\n     */\r\n    mapItemsToInputs = (item,index,array)=>{\r\n        return (\r\n            <InputGroup key={index}>\r\n                <Input type=\"text\" id={index} onChange={this.handleChange}/>\r\n                <InputGroupAddon addonType=\"append\">\r\n                    <InputGroupText onClick={this.removeItem(index)}>\r\n                        delete\r\n                    </InputGroupText>\r\n                </InputGroupAddon>\r\n            </InputGroup>\r\n        )\r\n    }\r\n\r\n    /** \r\n     * React Lifecycle Render\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        let items = this.state.items.map(this.mapItemsToInputs);\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    <Button onClick={this.addItem}>Add Item</Button>\r\n                    {items}\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n};\r\n\r\nListCreator.propTypes = {\r\n    saveEscapeRoom: PropTypes.func,\r\n    escapeRoom: PropTypes.instanceOf(EscapeRoom),\r\n    updateDetails: PropTypes.func,\r\n    updateAccessibility: PropTypes.func,\r\n    showModal: PropTypes.func,\r\n    addComponent: PropTypes.func,\r\n    removeComponent: PropTypes.func,\r\n    updateComponent: PropTypes.func,\r\n    addRelationship: PropTypes.func,\r\n    removeRelationship: PropTypes.func\r\n}\r\n\r\nexport default ListCreator;","import React, {Component}  from 'react';\r\nimport {Row,Col,Button,Input} from 'reactstrap'\r\nimport puzzleGenerator from '../generators/PuzzleGenerator';\r\nimport ListCreator from '../components/ListCreator';\r\nimport PropTypes from 'prop-types';\r\nimport { Puzzle } from '../puzzles';\r\n\r\n/** \r\n * Class for PuzzleGenerator\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass PuzzleGenerator extends Component {\r\n    /** Creates PuzzleGenerator */\r\n    constructor(){\r\n        super();\r\n        this.state = {word:\"\",words:[],hints:[],answers:[],cipher:\"pigpen\"};\r\n        this.PuzzleGenerator = new puzzleGenerator();\r\n    }\r\n\r\n    /**\r\n     * Handles Input Change\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleChange = (e) => { \r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles List Change\r\n     * @function\r\n     * @param {String} key\r\n     * @param {Array} list\r\n     */\r\n    handleListChange = (key) => (list) => {\r\n        this.setState({[key]:list});\r\n    }\r\n\r\n    /**\r\n     * Handles Word Puzzle Click\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleWordClick = (e) => {\r\n        let options = {...this.state};\r\n        this.props.handlePuzzleChange(this.PuzzleGenerator.generateWord('hidden',options))\r\n    }\r\n\r\n    /**\r\n     * Handles Riddle Puzzle Click\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleRiddleClick = (e) => {\r\n        this.props.handlePuzzleChange(this.PuzzleGenerator.generateWord('riddle'))\r\n    }\r\n\r\n    /**\r\n     * Handles Cipher Puzzle Click\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleCipherClick = (e) => {\r\n        this.props.handlePuzzleChange(this.PuzzleGenerator.generateCipher(this.state.cipher))\r\n    }\r\n\r\n    /** \r\n     * React Lifecycle Method\r\n     * Renders Layout\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        switch(this.props.puzzleType){\r\n            case 'Hidden Word':\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Input type=\"text\" name='word' id='word' placeholder='hidden word'value={this.state.word} onChange={this.handleChange}></Input>\r\n                            <p>Words</p>\r\n                            <ListCreator handleChange={this.handleListChange('words')}/>\r\n                            <p>Hints</p>\r\n                            <ListCreator handleChange={this.handleListChange('hints')}/>\r\n                            <p>Answers</p>\r\n                            <ListCreator handleChange={this.handleListChange('answers')}/>\r\n                            <Button block onClick={this.handleWordClick} color=\"primary\">Generate Hidden Word</Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            case 'Riddle':\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Button block onClick={this.handleRiddleClick} color=\"primary\">Generate Random Riddle</Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            case 'Cipher':\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Input type=\"select\" name=\"cipher\" id=\"cipher\" placeholder=\"cipher\" value={this.state.cipher} onChange={this.handleChange}>\r\n                                <option>pigpen</option>\r\n                            </Input>\r\n                            <Button block onClick={this.handleCipherClick} color=\"primary\">Generate Cipher</Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            default:\r\n                return null;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nPuzzleGenerator.propTypes = {\r\n    puzzleType: PropTypes.string,\r\n    handlePuzzleChange: PropTypes.func,\r\n}\r\n\r\nexport default PuzzleGenerator;","import React, {Component}  from 'react';\r\nimport { Container, Row, Col, Alert } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Class for Verify\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass Verify extends Component {\r\n    /** Creates Verify */\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {color:\"success\",message:\"\"};\r\n    }\r\n\r\n    /**\r\n     * Verifies Token from URL\r\n     * @function\r\n     */\r\n    verify = async () => {\r\n        return this.props.verify(this.props.token);\r\n    }\r\n\r\n    /**\r\n     * Sends Verify Email\r\n     * @function\r\n     */\r\n    sendVerify = async () => {\r\n        return this.props.sendVerify();\r\n    }\r\n\r\n    /**\r\n     * React Lifecycle Method\r\n     * Component Mounted\r\n     */\r\n    async componentDidMount(){\r\n        let result;\r\n        if(this.props.token!==undefined && this.props.token!==\"\" && this.props.verify!==\"signup\")\r\n            result = await this.verify();\r\n        else\r\n            result = await this.sendVerify();\r\n        this.setState(result,()=>alert(this.state));\r\n    }\r\n\r\n    /** \r\n     * React Lifecycle Method\r\n     * Renders Layout\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col>\r\n                        <h1>Verify Your Account</h1>\r\n                        <p>To access The Escape Room Generator, you must first verify your account. Please check your emails and click the link.</p>\r\n                        <Alert isOpen={this.state.message!==\"\"} color={this.state.color}>{this.state.message}</Alert>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nVerify.propTypes = {\r\n    token: PropTypes.string,\r\n    verify: PropTypes.func,\r\n    sendVerify: PropTypes.func\r\n}\r\n\r\nexport default Verify;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Alert, Button, Form, FormGroup, Label, Input, FormText} from 'reactstrap';\r\nimport PasswordStrengthMeter from './PasswordStrengthMeter'\r\nimport zxcvbn from 'zxcvbn';\r\n\r\n/**\r\n * Class for Reset\r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass Reset extends Component {\r\n    /** Creates Reset */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            password2:\"\",\r\n            message: \"\",\r\n            color:\"success\",\r\n            testResult: {}\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles Form Submit\r\n     * @function\r\n     * @param {Event} e\r\n     */\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if(this.props.password!==\"\" && this.props.password===this.props.password2 && this.props.signUp){\r\n            let result = await this.props.reset(this.state.email,this.props.token,this.state.password);\r\n            this.setState({message:result.message, color:result.color});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles Input Change\r\n     * @function\r\n     */\r\n    handleChange = (e) => {\r\n        if(e.target.id === \"password\"){\r\n            this.setState({\r\n                [e.target.id]: e.target.value,\r\n                testResult: zxcvbn(e.target.value)\r\n            },()=>this.setState({message:this.composemessage()}));\r\n        } else {\r\n            this.setState({\r\n                [e.target.id]: e.target.value,\r\n            },()=>this.setState({message:this.composemessage()}));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Composes Error Message\r\n     * @function\r\n     * @returns {String}\r\n     */\r\n    composemessage = () => {\r\n        let messages = [];\r\n        if(this.state.password!==\"\"&&this.state.password!==this.state.password2)\r\n            messages.push(\"Passwords Must Match\");\r\n        if(this.state.testResult.score<4)\r\n            messages.push(\"Password Not Strong Enough\");\r\n        if(this.state.password.length < 8)\r\n            messages.push(\"Password Too Short\");\r\n        if(this.state.email.includes(\" \") || this.state.email.includes(\"$\"))\r\n            messages.push(\"Invalid Email\");\r\n        return messages.join(\", \");   \r\n    }\r\n\r\n    /**\r\n     * Handles Alert Dismiss\r\n     * @function\r\n     */\r\n    handleDismiss = (event) => {\r\n        this.setState({message: \"\"});\r\n    }\r\n\r\n    /**\r\n     * Handles Test Result\r\n     * @function\r\n     */\r\n    handleTestResult = (testResult) => {\r\n        this.setState({testResult:testResult});\r\n    }\r\n\r\n    /** \r\n     * React Lifecycle Method\r\n     * Renders Layout\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        if(this.props.token!==undefined && this.props.token!==\"\"){\r\n            return (\r\n                <div className=\"sign-up full-container verticaly-center-content\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <Form noValidate onSubmit={this.handleSubmit}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"email\">Email</Label>\r\n                                        <Input required type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"password\">Password</Label>\r\n                                        <Input required type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                                        <PasswordStrengthMeter score={this.state.testResult.score}/>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"password2\">Re-Type Password</Label>\r\n                                        <Input required type=\"password\" name=\"password2\" id=\"password2\" value={this.state.password2} onChange={this.handleChange}/>\r\n                                    </FormGroup>\r\n                                    <Button disabled={this.state.email===\"\" || this.state.password===\"\" || this.state.password !== this.state.password2 || this.state.message!==\"\"}>Sign Up</Button>\r\n                                    <FormText>\r\n                                        Passwords must be strong and 8 characters in length or more\r\n                                    </FormText>\r\n                                    <Alert isOpen={this.state.message !== \"\"} toggle={this.handleDismiss} color={this.state.color}>{this.state.message}</Alert>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1>Password Reset</h1>\r\n                            <p>To reset your password login to your account, click the profile dropdown and click edit email.</p>\r\n                            <p>Enter your current password and you should recieve an email link to reset your password</p>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Reset;","import React, {Component}  from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Dashboard, EscapeRoomDesigner, Login, Signup, Tutorials, About, ProtectedRoute, NotFound, Verify, Reset } from '../components/index.js';\r\nimport EscapeRoom from '../models/EscapeRoom.js';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Business logic of app \r\n * handles creating and updating of data \r\n * handles navigation \r\n * @extends Component\r\n * @author Alistair Quinn\r\n */\r\nclass BusinessLogic extends Component {\r\n    /**\r\n     * Popultes escape rooms by user ID\r\n     * @param {String} userId\r\n     * @returns {bool} success\r\n     */\r\n    populateEscapeRooms = async (userId) => {\r\n        //Get User Details and Update Redux Store\r\n        if (userId !== null && userId !== undefined){\r\n            try{\r\n                let result = await this.props.services['escape-rooms'].find({query:{userId:userId}});\r\n                if(result.action.type.includes('FULFILLED')){\r\n                    const escapeRooms = result.value.data;\r\n                    if (escapeRooms!==null && escapeRooms!==undefined){\r\n                        this.props.redux.actions.escapeRooms.updateEscapeRooms(escapeRooms);\r\n                        this.setState({loading:false});\r\n                    }\r\n                }\r\n                return true;\r\n            }catch(e){\r\n                // User Not Verified\r\n                if(e.message.includes(\"verified\")){\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Authenticates login credentials \r\n     * @param {Object} credentials \r\n     * @returns {string} Error\r\n     */\r\n    authenticateCredentials = async(credentials)=>{\r\n        try {\r\n            let { user } = await this.props.feathersClient.authenticate(credentials);\r\n            if(user!=null){\r\n                user.token = window.localStorage.getItem('feathers-jwt');\r\n                const verified = await this.populateEscapeRooms(user._id);\r\n                user.verified = verified;\r\n                this.props.redux.actions.user.login(user);\r\n                this.props.history.push('/dashboard');\r\n            }\r\n        } catch(error){\r\n            return error.message;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a new user \r\n     * @param {Object} credentials \r\n     * @returns {string} Error\r\n     */\r\n    signUp = async(credentials)=>{\r\n        //Create a new user \r\n        try{\r\n            let queryResult = await this.props.services.users.create(credentials);\r\n            if(queryResult.action.type.includes('FULFILLED')){\r\n                await this.authenticateCredentials(credentials);\r\n                this.props.history.push('/verify/signup');\r\n            }\r\n        } catch(error){\r\n            return error.message;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Opens escape room designer\r\n     * @param {EscapeRoom} escapeRoom\r\n     */\r\n    editEscapeRoom = (escapeRoom) => {\r\n        this.props.redux.actions.escapeRoom.setSelectedEscapeRoom(escapeRoom);\r\n        this.props.history.push('/designer');\r\n    }\r\n    \r\n    /**\r\n     * Creates a new escape room \r\n     * then opens designer\r\n     */\r\n    newEscapeRoom = async() => {\r\n        const userId = this.props.redux.state.user._id;\r\n        const newEscapeRoom = new EscapeRoom(userId);\r\n        let response = await this.props.services['escape-rooms'].create(newEscapeRoom);\r\n        if(response.action.type.includes('FULFILLED')){\r\n            const escapeRoom = response.value;\r\n            if (escapeRoom!==null){\r\n                this.props.redux.actions.escapeRooms.addEscapeRoom(escapeRoom);\r\n                this.props.redux.actions.escapeRoom.setSelectedEscapeRoom(escapeRoom);\r\n                this.props.history.push('/designer');\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deletes an escape room\r\n     * @function\r\n     * @param {EscapeRoom} escapeRoom\r\n     */\r\n    deleteEscapeRoom = (escapeRoom) => {\r\n        this.props.services['escape-rooms'].remove(escapeRoom._id);\r\n        this.props.redux.actions.escapeRooms.removeEscapeRoom(escapeRoom);\r\n    }\r\n\r\n    /**\r\n     * Saves an escape room\r\n     * @function\r\n     * @param {EscapeRoom} escapeRoom\r\n     */\r\n    saveEscapeRoom = async(escapeRoom) => {\r\n        if(escapeRoom._id!==undefined){\r\n            escapeRoom.estimatedCost = EscapeRoom.calculateCost(escapeRoom);\r\n            await this.props.services['escape-rooms'].update(escapeRoom._id,escapeRoom);\r\n            await this.props.redux.actions.escapeRooms.updateEscapeRoom(escapeRoom);\r\n        }\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    /**\r\n     * Verifies a user account via token\r\n     * @function\r\n     * @param {String} token\r\n     * @returns {Status} Result\r\n     */\r\n    verify = async(token)=>{\r\n        let result = await this.props.services['auth-management'].create({action:'verifySignupLong',value:token});\r\n        if(result.action.type.includes('FULFILLED')){\r\n            return {color:\"success\", message:\"Account Verified\"};\r\n        } else {\r\n            return {color:\"danger\", message:\"Error\"}\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends a verify link\r\n     * @function\r\n     * @returns {Status} Result\r\n     */\r\n    sendVerify = async()=>{\r\n        let result = await this.props.services['auth-management'].create({action:'resendVerifySignup',value:{email:this.props.redux.state.user.email}});\r\n        if(result.action.type.includes('FULFILLED')){\r\n            return {color:\"success\", message:\"Account Verified\"};\r\n        } else {\r\n            return {color:\"danger\", message:\"Error\"}\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resets users password\r\n     * @function\r\n     * @param {String} email\r\n     * @param {String} token\r\n     * @param {String} password\r\n     * @returns {Status} Result\r\n     */\r\n    reset = async(email, token, password) => {\r\n        let result = await this.props.services['auth-management'].create({action:'resetPwdLong',value:{token,password}});\r\n        if(result.action.type.includes('FULFILLED')){\r\n            return {color:\"success\", message:\"Password Reset\"};\r\n        } else {\r\n            return {color:\"danger\", message:\"Error\"}\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends password reset\r\n     * @function\r\n     * @param {String} email\r\n     * @returns {Status} Result\r\n     */\r\n    sendReset = async(email) => {\r\n        let result = await this.props.services['auth-management'].create({action:'sendResetPwd',value:{email}});\r\n        if(result.action.type.includes('FULFILLED')){\r\n            return {color:\"success\", message:\"Password Reset Send, Check Emails\"};\r\n        } else {\r\n            return {color:\"danger\", message:\"Error\"}\r\n        }\r\n    }\r\n\r\n    /** \r\n     * React Lifecycle Render\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        const user = this.props.redux.state.user;\r\n        const escapeRooms = this.props.redux.state.escapeRooms;\r\n        const escapeRoom = this.props.redux.state.escapeRoom;\r\n        const escapeRoomActions = this.props.redux.actions.escapeRoom;\r\n        const showModal = this.props.redux.actions.modal.showModal;\r\n        return (\r\n            <Switch>\r\n                <Redirect exact from=\"/\" to=\"dashboard\"/>\r\n                <ProtectedRoute path=\"/dashboard\" condition={user.verified} redirect={'/verify'} render={(routeProps) => (<Dashboard escapeRooms={escapeRooms} showModal={showModal} editEscapeRoom={this.editEscapeRoom} newEscapeRoom={this.newEscapeRoom} deleteEscapeRoom={this.deleteEscapeRoom}/>)}/>\r\n                <ProtectedRoute path=\"/designer\" condition={Object.keys(escapeRoom).length > 0 &&escapeRoom!==undefined} redirect={'/'} render={(routeProps) =>(<EscapeRoomDesigner showModal={showModal} escapeRoom={escapeRoom} saveEscapeRoom={this.saveEscapeRoom} updateDetails={escapeRoomActions.updateDetails} updateAccessibility={escapeRoomActions.updateAccessibility} addComponent={escapeRoomActions.addComponent} removeComponent={escapeRoomActions.removeComponent} updateComponent={escapeRoomActions.updateComponent} addRelationship={escapeRoomActions.addRelationship} removeRelationship={escapeRoomActions.removeRelationship}/>)}/>\r\n                <Route path=\"/login\" render={(routeProps) => (<Login authenticateCredentials={this.authenticateCredentials}/>)}/>\r\n                <Route path=\"/signup\" render={(routeProps) => (<Signup signUp={this.signUp}/>)}/>\r\n                <Route path=\"/about\" component={About}/>\r\n                <Route path=\"/tutorials\" component={Tutorials}/>\r\n                <Route exact path=\"/verify\" render={(routeProps) => (<Verify token={routeProps.match.params.token} sendVerify={this.sendVerify}/>)}/>\r\n                <Route path=\"/verify/:token\" render={(routeProps) => (<Verify token={routeProps.match.params.token} verify={this.verify} />)}/>\r\n                <Route exact path=\"/reset\" component={Reset}/>\r\n                <Route path=\"/reset/:token\" render={(routeProps) => (<Reset token={routeProps.match.params.token} reset={this.reset}/>)}/>\r\n                <Route component={NotFound}/>\r\n            </Switch> \r\n        )\r\n    }\r\n};\r\n\r\nBusinessLogic.propTypes = {\r\n    history: PropTypes.object,\r\n    feathersClient: PropTypes.object,\r\n    redux: PropTypes.object,\r\n    services: PropTypes.object\r\n}\r\n\r\nexport default BusinessLogic;","import React, {Component}  from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Navbar, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem, NavLink, Dropdown, DropdownToggle, DropdownMenu} from 'reactstrap';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport Profile from '../components/Profile';\r\nimport BusinessLogic from './BusinessLogic.js';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/Main.css';\r\n\r\n/**\r\n * Defines main layout of app \r\n * Handles re-authentication of logged in user \r\n * Renders business logic \r\n * @author Alistair Quinn\r\n */\r\nclass Main extends Component {\r\n    /** Creates Main */\r\n    constructor(){\r\n        super();\r\n        this.state = {profile:false, isProfileOpen:false,tooltipOpen:false, isOpen:false};\r\n    }\r\n\r\n    /** \r\n     * Toggles is Open\r\n     * @function \r\n     */\r\n    toggle = () => {\r\n        this.setState({isOpen:!this.state.isOpen});\r\n    }\r\n\r\n    /** \r\n     * Toggles is Profile \r\n     * @function\r\n     */\r\n    toggleProfile = () => {\r\n        this.setState({isProfileOpen:!this.state.isProfileOpen});\r\n    }\r\n\r\n    /**\r\n     * React lifecycle method\r\n     * Updates profile if user has changed\r\n     * @param {Object} prevProps \r\n     */\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.redux.state.user.email!==this.props.redux.state.user.email){\r\n            if(this.props.redux.state.user.email !== undefined){\r\n                this.setState({profile:true});\r\n            } else {\r\n                this.setState({profile:false});\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * React lifecycle method \r\n     * Updates profile is logged in\r\n     */\r\n    componentDidMount() {\r\n        if (window.localStorage.getItem('feathers-jwt') && this.props.redux.state.user.email!==undefined){\r\n            this.setState({profile:true});\r\n        } else if (window.localStorage.getItem('feathers-jwt') && this.props.redux.state.user.email===undefined){\r\n            this.authenticate();\r\n        }\r\n    }\r\n\r\n    /** \r\n     * Authenticates User \r\n     * @function \r\n     */\r\n    authenticate = async() => {\r\n        //Authenticates JWT and then populates user/escapeRooms\r\n        try{\r\n            let { user } = await this.props.feathersClient.reAuthenticate();\r\n            if(user!=null){\r\n                user.token = window.localStorage.getItem('feathers-jwt');\r\n                const verified = await this.populateEscapeRooms(user._id);\r\n                user.verified = verified;\r\n                this.props.redux.actions.user.login(user);\r\n                this.props.history.push('/dashboard');\r\n            }\r\n        } catch(error){\r\n            this.logout();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Popultes escape rooms by user ID\r\n     * @function\r\n     * @param {String} userId\r\n     * @returns {Array}\r\n     */\r\n    populateEscapeRooms = async (userId) => {\r\n        //Get User Details and Update Redux Store\r\n        if (userId !== null && userId !== undefined){\r\n            try{\r\n                let result = await this.props.services['escape-rooms'].find({query:{userId:userId}});\r\n                if(result.action.type.includes('FULFILLED')){\r\n                    const escapeRooms = result.value.data;\r\n                    if (escapeRooms!==null && escapeRooms!==undefined){\r\n                        this.props.redux.actions.escapeRooms.updateEscapeRooms(escapeRooms);\r\n                        this.setState({loading:false});\r\n                    }\r\n                }\r\n                return true;\r\n            }catch(e){\r\n                // User Not Verified\r\n                if(e.message.includes(\"verified\")){\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /** \r\n     * Logs out user, tidys up \r\n     * @function \r\n     */\r\n    logout = () => {\r\n        this.props.feathersClient.logout();\r\n        window.localStorage.removeItem('feathers-jwt');\r\n        this.setState({profile:null});\r\n        this.props.redux.actions.user.logout();\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    /**\r\n     * Edits a users email\r\n     * @function\r\n     * @param {String} email\r\n     * @param {String} password\r\n     * @param {Object} change\r\n     * @returns {Object} \r\n     */\r\n    identityChange = async(user, password, changes) => {\r\n        let result = await this.props.services['auth-management'].create({action:'identityChange'},{user,password,changes});\r\n        if(result.action.type.include('FULFILLED')){\r\n            return {color:\"success\", message:\"Email Saved\"};\r\n        } else {\r\n            return {color:\"danger\", message:\"Error\"}\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends Password Reset\r\n     * @function\r\n     * @returns {Object}\r\n     */\r\n    sendPasswordReset = async() => {\r\n        let result = await this.props.services['auth-management'].create({action:'sendResetPwd'},{value:{email:this.props.redux.state.user.email}});\r\n        if(result.action.type.include('FULFILLED')){\r\n            return {color:\"success\", message:\"Email Saved\"};\r\n        } else {\r\n            return {color:\"danger\", message:\"Error\"}\r\n        }\r\n    }\r\n\r\n    /**\r\n     * React lifecycle method \r\n     * Renders main layout\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        const loading = this.state.loading || this.props.redux.state.usersService.isLoading || this.props.redux.state.escapeRoomsService.isLoading || this.props.redux.state.authManagementService.isLoading;\r\n        const modal = this.props.redux.state.modal;\r\n        const hideModal = this.props.redux.actions.modal.hideModal;\r\n        let user = this.props.redux.state.user;\r\n        let profile;\r\n        if(this.state.profile){\r\n            profile =                                 \r\n            <Dropdown isOpen={this.state.isProfileOpen} toggle={this.toggleProfile} nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                Profile\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                    <Profile user={user} identityChange={this.identityChange} sendPasswordReset={this.sendPasswordReset}/>\r\n                    <Button id=\"LogoutButton\" onClick={this.logout} block>Logout</Button>\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        } else {\r\n            profile = null;\r\n        }\r\n        return (\r\n            <div>   \r\n                <LoadingOverlay className={'loading-overlay'} active={loading} spinner>       \r\n                    <header>\r\n                        <Navbar color=\"light\" light expand=\"md\">\r\n                            <NavbarBrand href=\"/\"><img src=\"/images/logos/main.svg\" alt=\"Logo\"/></NavbarBrand>\r\n                            <NavbarToggler onClick={this.toggle} />\r\n                            <Collapse isOpen={this.state.isOpen} navbar>\r\n                                <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <NavLink href=\"https://forms.office.com/Pages/ResponsePage.aspx?id=nKagUU8OPUu2QhLgExmGNYQo7GuPpvBIkCZBfnEHlpZUOUZWQkVHTlNCOVNQS0xOWlMyTzZSRjU2Mi4u\">Survey</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink href=\"https://github.com/AldoAbdn/Escape-Room-Generator\">GitHub</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <Link className=\"nav-link\" to=\"/tutorials\">Tutorials</Link>\r\n                                </NavItem>\r\n                                {profile}\r\n                                </Nav>\r\n                            </Collapse>\r\n                        </Navbar>\r\n                    </header>\r\n                    <main>\r\n                        <BusinessLogic history={this.props.history} feathersClient={this.props.feathersClient} redux={this.props.redux} services={this.props.services}/>\r\n                    </main>\r\n                </LoadingOverlay>\r\n                <Modal isOpen={modal.isOpen} >\r\n                    <ModalHeader>{modal.header}</ModalHeader>\r\n                    <ModalBody>\r\n                        {modal.body}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"success\" onClick={()=>{\r\n                            modal.confirm.action();\r\n                            hideModal();\r\n                        }}>{modal.confirm.text}</Button>\r\n                        <Button color=\"danger\" onClick={()=>{\r\n                            modal.cancel.action();\r\n                            hideModal();\r\n                        }}>{modal.cancel.text}</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nMain.propTypes = {\r\n    redux: PropTypes.object,\r\n    history: PropTypes.object,\r\n    services: PropTypes.array,\r\n    feathersClient: PropTypes.object,\r\n}\r\n\r\nexport default Main;","/**\r\n * Redux Actions for User\r\n * @module Actions/User\r\n * @author Alistair Quinn\r\n */\r\n\r\n /** \r\n  * Set User \r\n  * @param {User} user\r\n  * @returns {Action} Action \r\n  */\r\nexport function login(user) {\r\n    return {\r\n        type: 'LOGIN', user\r\n    }\r\n}\r\n\r\n/** \r\n * Unset User \r\n * @returns {Action} Action\r\n */\r\nexport function logout() {\r\n    return {\r\n        type: 'LOGOUT'\r\n    }\r\n}\r\n\r\n","/**\r\n * Redux Actions for EscapeRooms\r\n * @module Actions/EscapeRooms\r\n * @author Alistair Quinn\r\n */\r\n\r\n /** \r\n  * Add an Escape Room \r\n  * @param {EscapeRoom} escapeRoom\r\n  * @returns {Action} Action\r\n  */\r\nexport function addEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'ADD_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\n/** \r\n * Remove an Escape Room \r\n * @param {EscapeRoom} escapeRoom\r\n * @returns {Action} Action \r\n */\r\nexport function removeEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'REMOVE_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\n/** \r\n * Updates an Existing Escape Room \r\n * @param {EscapeRoom} escapeRoom\r\n * @returns {Action} Action\r\n */\r\nexport function updateEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'UPDATE_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\n/** \r\n * Update List of Escape Rooms \r\n * @param {Array<EscapeRoom>} escapeRooms \r\n * @returns {Action} Action\r\n */\r\nexport function updateEscapeRooms(escapeRooms){\r\n    return {\r\n        type: 'UPDATE_ESCAPE_ROOMS',\r\n        escapeRooms\r\n    }\r\n}","import { Accessibility } from \"../components\"\r\n\r\n/**\r\n * Redux Actions for EscapeRoom\r\n * @module Actions/EscapeRoom\r\n * @author Alistair Quinn\r\n */\r\n\r\n /** \r\n  * Set Selected Escape Room \r\n  * @param {EscapeRoom} escapeRoom \r\n  * @return {Action} Action\r\n  */\r\nexport function setSelectedEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'SET_SELECTED_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\n/** Clears Selected Escape Room \r\n * @param {EscapeRoom} escapeRoom \r\n * @return {Action} Action\r\n */\r\nexport function clearSelectedEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'CLEAR_SELECTED_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\n/** \r\n * Update Selected Escape Room's Details \r\n * @param {EscapeRoom} escapeRoom \r\n * @return {Action} Action\r\n */\r\nexport function updateDetails(details){\r\n    return {\r\n        type: 'UPDATE_DETAILS',\r\n        details\r\n    }\r\n}\r\n\r\n/** \r\n * Update Selected Escape Rooms's Accessibility \r\n * @param {Accessibility} accessibility \r\n * @return {Action} Action\r\n */\r\nexport function updateAccessibility(accessibility){\r\n    return {\r\n        type: 'UPDATE_ACCESSIBILITY',\r\n        accessibility\r\n    }\r\n}\r\n\r\n/** \r\n * Add Component to Selected Escape Room \r\n * @param {Component} component\r\n * @param {string} areaId \r\n * @return {Action} Action\r\n */\r\nexport function addComponent(component, areaId){\r\n    return {\r\n        type: 'ADD_COMPONENT',\r\n        component,\r\n        areaId\r\n    }\r\n}\r\n\r\n/** \r\n * Remove Component to Selected Escape Room \r\n * @param {string} componentId \r\n * @return {Action} Action\r\n */\r\nexport function removeComponent(componentId){\r\n    return {\r\n        type: 'REMOVE_COMPONENT',\r\n        componentId\r\n    }\r\n}\r\n\r\n/** \r\n * Update an Existing Component to Selected Escape Room \r\n * @param {Component} component\r\n * @param {string} areaId \r\n * @return {Action} Action\r\n */\r\nexport function updateComponent(component,areaId){\r\n    return {\r\n        type: 'UPDATE_COMPONENT',\r\n        component,\r\n        areaId\r\n    }\r\n}\r\n\r\n/** \r\n * Add Relationship Between Components \r\n * @param {string} componentId\r\n * @param {string} stringId\r\n * @param {bool} isInput \r\n * @return {Action} Action\r\n */\r\nexport function addRelationship(componentId,parentId,isInput){\r\n    return {\r\n        type: 'ADD_RELATIONSHIP',\r\n        componentId,\r\n        parentId,\r\n        isInput\r\n    }\r\n}\r\n\r\n/** \r\n * Remove Relationship Between Components \r\n * @param {string} componentId\r\n * @param {string} stringId\r\n * @param {bool} isInput\r\n * @return {Action} Action \r\n */\r\nexport function removeRelationship(componentId,parentId,isInput){\r\n    return {\r\n        type: 'REMOVE_RELATIONSHIP',\r\n        componentId,\r\n        parentId,\r\n        isInput\r\n    }\r\n}\r\n\r\n","/**\r\n * Redux Actions for Modal\r\n * @module Actions/Modal\r\n * @author Alistair Quinn\r\n */\r\n\r\n /** \r\n  * Shows Modal \r\n  * @param {Modal} modal\r\n  * @returns {Action} Action\r\n  */\r\nexport function showModal(modal){\r\n    return {\r\n        type: 'SHOW_MODAL',\r\n        modal\r\n    }\r\n}\r\n\r\n/** \r\n * Hide Modal \r\n * @returns {Action} Action \r\n */\r\nexport function hideModal(){\r\n    return {\r\n        type: 'HIDE_MODAL'\r\n    }\r\n}","/**\r\n * Connects redux state and actions to the whole app\r\n * makes sure routing is possible\r\n * @class App\r\n * @author Alistair Quinn  \r\n */\r\n\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router'\r\nimport '../styles/App.css';\r\nimport Main from './Main';\r\nimport * as userActionCreators from '../actions/user';\r\nimport * as escapeRoomsActionCreators from '../actions/escapeRooms';\r\nimport * as escapeRoomActionCreators from '../actions/escapeRoom';\r\nimport * as modalActionCreators from '../actions/modal';\r\n\r\n/**\r\n * Maps state to props\r\n * @param {object} state \r\n */\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    redux: state\r\n  }\r\n}\r\n\r\n/**\r\n * Maps dispatch to props\r\n * @param {object} dispatch \r\n */\r\nfunction mapDispatchToProps(dispatch){\r\n  const user = bindActionCreators(userActionCreators, dispatch);\r\n  const escapeRooms = bindActionCreators(escapeRoomsActionCreators, dispatch);\r\n  const escapeRoom = bindActionCreators(escapeRoomActionCreators, dispatch);\r\n  const modal = bindActionCreators(modalActionCreators, dispatch);\r\n  return {user, escapeRooms, escapeRoom, modal};\r\n}\r\n\r\n/**\r\n * \r\n * @param {object} stateProps \r\n * @param {object} dispatchProps \r\n * @param {object} ownProps \r\n */\r\nfunction mergeProps(stateProps, dispatchProps, ownProps) {\r\n  return {\r\n    ...ownProps,\r\n    redux: {\r\n      state: stateProps.redux,\r\n      actions: dispatchProps\r\n    }\r\n  }\r\n}\r\n\r\n/** Main App Component */\r\nconst App = connect(mapStateToProps, mapDispatchToProps, mergeProps)(Main);\r\n\r\n/** App with Router */\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/**\r\n * Main file, starts front end and renders App \r\n * @author Alistair Quinn\r\n */\r\n//Polyfills\r\nimport 'react-app-polyfill/ie9';\r\n//React Imports \r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n//Redux Imports\r\nimport { Provider } from 'react-redux';\r\n//Store \r\nimport configureStore from './stores/store'\r\n//Feathers\r\nimport io from 'socket.io-client';\r\nimport feathers from '@feathersjs/client';\r\n//Feathers-Redux\r\nimport reduxifyServices, {getServicesStatus, bindWithDispatch} from 'feathers-redux';\r\n//CSS\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//Components\r\nimport App from './components/App';\r\n//Service Worker \r\nimport * as serviceWorker from './serviceWorker';\r\n//ReactDnD\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport TouchBackend from 'react-dnd-touch-backend';\r\nimport MultiBackend, { TouchTransition } from 'react-dnd-multi-backend';\r\nimport { DragDropContextProvider } from 'react-dnd';\r\nlet pipline = {\r\n    backends: [\r\n        {backend: HTML5Backend},\r\n        {\r\n            backend: TouchBackend({enableMouseEvents:true}),\r\n            preview: true,\r\n            transition: TouchTransition\r\n        }\r\n    ]\r\n};\r\nlet backend = MultiBackend(pipline);\r\n\r\n//Feathers Configuration \r\nexport const feathersClient = feathers()\r\n    .configure(feathers.socketio(io()))\r\n    .configure(feathers.authentication());\r\n\r\n//Configure Redux\r\nconst rawServices = reduxifyServices(feathersClient, ['users', 'escape-rooms', 'auth-management']);\r\nconst store = configureStore(rawServices,{user:{},escapeRooms:[],escapeRoom:{}});\r\nconst services = bindWithDispatch(store.dispatch, rawServices);\r\n\r\n//Router\r\nconst router = (\r\n    <DragDropContextProvider backend={backend}>\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <App feathersClient={feathersClient} services={services} getServicesStatus={getServicesStatus}/>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    </DragDropContextProvider>\r\n);\r\n\r\n//Render Router \r\nReactDOM.render(router, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport middlewares from '../middleware';\r\nimport rootReducer from '../reducers';\r\n\r\n/**\r\n * Configures store \r\n * @param {Array<Service>} reduxifiedServices \r\n * @param {Object} initialState \r\n * @returns {Object}\r\n */\r\nexport default function configureStore(reduxifiedServices, initialState) {\r\n    const createStoreWithDevTools = window.devToolsExtension ? window.devToolsExtension()(createStore) : createStore;\r\n    const createStoreWithMiddlewares = applyMiddleware(...middlewares)(createStoreWithDevTools);\r\n    return createStoreWithMiddlewares(rootReducer(reduxifiedServices),initialState);\r\n}"],"sourceRoot":""}