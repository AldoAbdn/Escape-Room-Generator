{"version":3,"sources":["middleware/logger.js","middleware/index.js","reducers/user.js","reducers/escapeRooms.js","reducers/escapeRoom.js","reducers/modal.js","reducers/index.js","models/Modal.js","components/Dashboard.js","components/Profile.js","models/Component.js","models/Area.js","models/Puzzle.js","models/Prop.js","models/Lock.js","models/Event.js","models/Music.js","models/EscapeRoom.js","components/EscapeRoomDesigner.js","components/Details.js","components/Design.js","components/ComponentDnDTarget.js","components/ComponentDnDSource.js","components/AreaDnDTarget.js","components/AreaDnDSource.js","components/Pallet.js","components/ComponentArranger.js","components/ComponentDetails.js","components/Accessibility.js","components/Login.js","components/SignUp.js","components/About.js","components/Tutorials.js","components/ProtectedRoute.js","components/NotFound.js","components/BusinessLogic.js","components/Main.js","actions/user.js","actions/escapeRooms.js","actions/escapeRoom.js","actions/modal.js","components/App.js","serviceWorker.js","index.js","stores/store.js"],"names":["logger","store","next","action","console","groupCollapsed","type","info","result","log","getState","groupEnd","middleware","reduxThunk","reduxPromiseMiddleware","user","state","arguments","length","undefined","Object","objectSpread","escapeRooms","i","push","escapeRoom","slice","findIndex","_id","concat","toConsumableArray","newState","details","accessibility","components","component","areaId","outputComponents","componentId","forEach","index","inputComponents","filter","inputId","outputId","parentId","isInput","indexOf","id","modal","isOpen","reducers","reduxifiedServices","combineReducers","usersService","users","reducer","escapeRoomsService","routing","routerReducer","Modal","header","body","confirmText","confirmCallback","cancelText","cancelCallback","classCallCheck","this","confirm","text","toString","cancel","Dashboard","props","_this","possibleConstructorReturn","getPrototypeOf","call","handleToggle","e","dropdownOpen","setState","handleClick","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","newEscapeRoom","stop","_x","apply","handleItemClick","editEscapeRoom","saveJSON","savePDF","deleteEscapeRoom","showModal","name","mapEscapeRoomToList","react_default","createElement","ListGroupItem","key","Dropdown","style","display","position","right","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","onClick","blob","Blob","JSON","stringify","saveAs","doc","jsPDF","save","Container","Row","Col","Button","block","ListGroup","map","Component","Profile","handleSubmit","event","preventDefault","updateUser","email","password","handleChange","defineProperty","target","value","handleDismiss","errorMessage","_ref2","_callee2","_context2","t0","edit","abrupt","sent","_x2","oldProps","newProps","profile","Card","CardImg","height","src","avatar","alt","CardBody","CardTitle","className","editProfile","Form","onSubmit","FormGroup","Label","for","Input","onChange","Alert","color","uniqid","description","top","left","estimatedCost","Area","Puzzle","puzzleType","Prop","Lock","lockType","Event","eventType","Music","startTime","endTime","EscapeRoom","userId","designers","theme","minPlayers","maxPlayers","targetTime","difficulty","objective","protanomaly","protanopia","deuteranomaly","deuteranopia","tritanomaly","tritanopia","coneMonochromacy","rodMonochromacy","largeFonts","highContrast","EscapeRoomDesigner","saveEscapeRoom","handleNav","tab","activeTab","history","xs","md","lg","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","components_Details","updateDetails","components_Accessibility","updateAccessibility","components_Design","addComponent","removeComponent","updateComponent","addRelationship","removeRelationship","Details","placeholder","min","max","Design","handleComponentClick","stopPropagation","selected","handleComponentDrop","searchResult","findComponent","area","find","comp","com","components_Pallet","components_ComponentArranger","components_ComponentDetails","ComponentDnDTarget","item","classNames","isOver","canDrop","connectDropTarget","DropTarget","drop","monitor","didDrop","getItem","moved","connect","dropTarget","isOverCurrent","shallow","itemType","getItemType","componentSource","canDrag","isDragging","beginDrag","endDrag","ComponentDnDSource","mapRelationships","label","strokeColor","targetId","targetAnchor","sourceAnchor","nextProps","nextState","_this3","isTarget","components_ComponentDnDTarget","archer","react_archer","relations","connectDragSource","DragSource","dragSource","componentTarget","clientOffset","getClientOffset","targetRect","ReactDOM","findDOMNode","getBoundingClientRect","y","x","width","delta","getDifferenceFromInitialOffset","Math","round","AreaDnDTarget","components_ComponentDnDSource","areaSource","AreaDnDSource","_this2","components_AreaDnDTarget","Pallet","components_AreaDnDSource","areaArrangerTarget","AreaModel","ComponentArranger","mapAreas","render","ComponentDetails","mapDetailToInput","handleOnClick","oldId","mapIDToP","properties","inputs","outputs","inputRelationships","outputRelationships","keys","margin-bottom","Accessibility","CustomInput","checked","wheelchairAccessible","motorAccessible","Login","err","authenticateCredentials","strategy","FormText","Link","to","Signup","signUp","About","href","Tutorials","dist_default","api_key","process","youtubeAPIKey","playlist_id","scrolling","ProtectedRoute","window","localStorage","condition","Route","Redirect","redirect","location","NotFound","BusinessLogic","credentials","queryResult","feathersClient","authenticate","services","query","includes","total","data","token","redux","actions","login","message","create","setSelectedEscapeRoom","_callee3","response","_context3","addEscapeRoom","remove","removeEscapeRoom","_ref4","_callee4","update","_context4","patch","_x3","_ref5","_callee5","_context5","updateEscapeRoom","_x4","escapeRoomActions","Switch","exact","from","components_ProtectedRoute","path","routeProps","components_Dashboard","components_Profile","components_EscapeRoomDesigner","components_Login","SignUp","Main","jwt","authenticateJWT","populateUserFromJWT","populateEscapeRooms","accessToken","logout","_ref3","setProfile","passport","verifyJWT","get","updateEscapeRooms","loading","removeItem","tooltipOpen","prevProps","loggedIn","isLoading","hideModal","LoadingOverlay_default","spinner","components_BusinessLogic","es_Modal","ModalHeader","ModalBody","ModalFooter","Function","clearSelectedEscapeRoom","App","dispatch","bindActionCreators","userActionCreators","escapeRoomsActionCreators","escapeRoomActionCreators","modalActionCreators","stateProps","dispatchProps","ownProps","withRouter","Boolean","hostname","match","__webpack_require__","d","__webpack_exports__","pipline","backends","backend","HTML5Backend","TouchBackend","enableMouseEvents","preview","transition","TouchTransition","MultiBackend","feathers","configure","socketio","io","hooks","authentication","storage","rawServices","reduxifyServices","initialState","createStoreWithDevTools","devToolsExtension","createStore","applyMiddleware","middlewares","createStoreWithMiddlewares","rootReducer","configureStore","bindWithDispatch","router","react_dnd_lib","es","BrowserRouter","components_App","getServicesStatus","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8ec02795.chunk.js","sourcesContent":["/*\r\n A basic middleware logger\r\n See http://redux.js.org/docs/advanced/Middleware.html\r\n */\r\n\r\nconst logger = store => next => action => {\r\n    console.groupCollapsed(action.type); // eslint-disable-line no-console\r\n    console.info('dispatching', action); // eslint-disable-line no-console\r\n    const result = next(action);\r\n    console.log('next state', store.getState()); // eslint-disable-line no-console\r\n    console.groupEnd(action.type); // eslint-disable-line no-console\r\n    return result;\r\n  };\r\n  \r\n  export default logger;","// eslint no-unused-vars: 0,\r\n\r\nimport reduxThunk from 'redux-thunk';\r\nimport reduxPromiseMiddleware from 'redux-promise-middleware';\r\n// import { routerMiddleware } from 'react-router-redux';\r\n// import { browserHistory } from 'react-router';\r\nimport logger from './logger'; // eslint-disable-line no-unused-vars\r\n\r\nexport default [\r\n  reduxThunk, // Thunk middleware for Redux\r\n  reduxPromiseMiddleware(), // Resolve, reject promises with conditional optimistic updates\r\n  // routerMiddleware(browserHistory), // !! IMPORTANT for location.href changes\r\n  logger, // A basic middleware logger\r\n];","function user(state={},action){\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            return {...action.user};\r\n            break;\r\n        case 'LOGOUT':\r\n            return {};\r\n            break;\r\n        default:\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default user;","function escapeRooms(state=[],action){\r\n    let i;\r\n    switch(action.type){\r\n        case 'ADD_ESCAPE_ROOM':\r\n            state.push(action.escapeRoom);\r\n            return state.slice();\r\n            break;\r\n        case 'REMOVE_ESCAPE_ROOM':\r\n            i = state.findIndex(escapeRoom => escapeRoom._id === action.escapeRoom._id);\r\n            return [...state.slice(0,i),...state.slice(i+1)];\r\n            break;\r\n        case 'UPDATE_ESCAPE_ROOM':\r\n            i = state.findIndex(escapeRoom=>escapeRoom._id === action.escapeRoom._id);\r\n            state[i] = action.escapeRoom;\r\n            return state.slice(); \r\n            break;\r\n        case 'UPDATE_ESCAPE_ROOMS':\r\n            return action.escapeRooms.slice();\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default escapeRooms;","function escapeRoom(state={},action){\r\n    let newState = {};\r\n    let i;\r\n    switch(action.type){\r\n        case 'SET_SELECTED_ESCAPE_ROOM':\r\n            return {...action.escapeRoom};\r\n            break;\r\n        case 'CLEAR_SELECTED_ESCAPE_ROOM':\r\n            return {}\r\n            break;\r\n        case 'UPDATE_DETAILS':\r\n            newState = {...state};\r\n            newState.details = {...newState.details, ...action.details};\r\n            return newState;\r\n            break;\r\n        case 'UPDATE_ACCESSIBILITY':\r\n            newState = {...state};\r\n            newState.accessibility = {...newState.accessibility, ...action.accessibility};\r\n            return newState;\r\n            break;\r\n        case 'ADD_COMPONENT':\r\n            newState = {...state};\r\n            newState.components.push(action.component);\r\n            i = newState.components.findIndex(component=>component._id===action.areaId);\r\n            newState.components[i].outputComponents.push(action.component._id);\r\n            return newState;\r\n            break;\r\n        case 'REMOVE_COMPONENT':\r\n            newState = {...state};\r\n            i = newState.components.findIndex(component=>component._id===action.componentId);\r\n            newState.components = [...newState.components.slice(0,i),...newState.components.slice(i+1)]\r\n            newState.components.forEach((component,index,components)=>{\r\n                components[index].inputComponents = component.inputComponents.filter(inputId=>inputId!==action.componentId);\r\n                components[index].outputComponents = component.outputComponents.filter(outputId=>outputId!==action.componentId);\r\n            })\r\n            return newState;\r\n            break;\r\n        case 'UPDATE_COMPONENT':\r\n            newState = {...state};\r\n            i = newState.components.findIndex(component=>component._id===action.component._id);\r\n            newState.components[i] = {...newState.components[i],...action.component};\r\n            return newState;\r\n            break;\r\n        case 'ADD_RELATIONSHIP':\r\n            newState = {...state};\r\n            newState.components.forEach((component,index,components)=>{\r\n                if(component._id===action.parentId){\r\n                    if(action.isInput){\r\n                        if(component.inputComponents.indexOf(action.componentId)===-1)\r\n                            component.inputComponents.push(action.componentId);\r\n                    } else {\r\n                        if(component.outputComponents.indexOf(action.componentId)===-1)\r\n                            component.outputComponents.push(action.componentId);\r\n                    }\r\n                }\r\n            });\r\n            return newState;\r\n            break;\r\n        case 'REMOVE_RELATIONSHIP':\r\n            newState = {...state};\r\n            newState.components.forEach((component,index,components)=>{\r\n                if(component._id===action.parentId){\r\n                    if(action.isInput){\r\n                        if(component.inputComponents.indexOf(action.componentId)===-1)\r\n                            component.inputComponents = component.inputComponents.filter(id=>id!==action.componentId);\r\n                    } else {\r\n                        if(component.outputComponents.indexOf(action.componentId)===-1)\r\n                            component.outputComponents = component.outputComponents.filter(id=>id!==action.componentId);\r\n                    }\r\n                }\r\n            });\r\n            return newState;\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default escapeRoom;","function modal(state={isOpen:false},action){\r\n    switch(action.type){\r\n        case 'SHOW_MODAL':\r\n            return {...action.modal,isOpen:true};\r\n            break;\r\n        case 'HIDE_MODAL':\r\n            return {isOpen:false};\r\n            break;\r\n        default:\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default modal;","import { combineReducers } from 'redux';\r\nimport { routerReducer } from 'react-router-redux';\r\n\r\nimport user from './user';\r\nimport escapeRooms from './escapeRooms';\r\nimport escapeRoom from './escapeRoom';\r\nimport modal from './modal';\r\n\r\nexport default function(reduxifiedServices){\r\n    return combineReducers({\r\n        usersService: reduxifiedServices.users.reducer,\r\n        escapeRoomsService: reduxifiedServices['escape-rooms'].reducer,\r\n        routing: routerReducer,\r\n        user,\r\n        escapeRooms,\r\n        escapeRoom,\r\n        modal\r\n    })\r\n}\r\n","class Modal {\r\n    constructor(header,body,confirmText,confirmCallback,cancelText,cancelCallback,isOpen=true){\r\n        this.header = header;\r\n        this.body = body;\r\n        this.confirm = {text:confirmText,action:confirmCallback.toString()}; //Converts callback to a string, because redux can't store funcs\r\n        this.cancel = {text:cancelText,action:cancelCallback.toString()};\r\n        this.isOpen = isOpen;\r\n    }\r\n}\r\n\r\nexport default Modal","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Dropdown, DropdownToggle, DropdownMenu, DropdownItem , ListGroup, ListGroupItem , Button } from 'reactstrap';\r\nimport { saveAs } from 'file-saver';\r\nimport jsPDF from 'jspdf';\r\nimport Modal from '../models/Modal';\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: [false,false]\r\n        }\r\n    }\r\n    handleToggle = (i) => (e) => {\r\n        var dropdownOpen = this.state.dropdownOpen;\r\n        dropdownOpen[i] = !dropdownOpen[i];\r\n        this.setState({dropdownOpen});\r\n    }\r\n    handleClick = async (e) => {\r\n        if(this.props.newEscapeRoom)\r\n            this.props.newEscapeRoom();\r\n    }\r\n    saveJSON(escapeRoom) {\r\n        const blob = new Blob([JSON.stringify(escapeRoom)],{type:'text/plain;charset=utf-8'});\r\n        saveAs(blob, escapeRoom.details.name+\".json\");\r\n    }\r\n    savePDF(escapeRoom) {\r\n        var doc = new jsPDF();\r\n        doc.text(JSON.stringify(escapeRoom),10,10);\r\n        doc.save(escapeRoom.details.name+'.pdf');\r\n    }\r\n    handleItemClick = (i, action) => (e) => {\r\n        const escapeRoom = this.props.escapeRooms[i];\r\n        switch(action){\r\n            case 'EDIT':\r\n                if(this.props.editEscapeRoom)   \r\n                    this.props.editEscapeRoom(escapeRoom);\r\n                break;\r\n            case 'JSON':\r\n                this.saveJSON(escapeRoom);\r\n                break;\r\n            case 'PDF':\r\n                this.savePDF(escapeRoom);\r\n                break;\r\n            case 'DELETE':\r\n                if(this.props.deleteEscapeRoom)\r\n                    this.props.showModal(new Modal(\"Warning\",\"Are you sure you want to delete \"+escapeRoom.details.name+\"?\",\"Yes\",()=>{this.props.deleteEscapeRoom(escapeRoom)},\"No\",()=>{}));\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    mapEscapeRoomToList = (escapeRoom,i) => {\r\n        return (\r\n        <ListGroupItem key={i}>{escapeRoom.details.name}\r\n            <Dropdown style={{display:'inline', position: 'absolute', right:'20px'}} isOpen={this.state.dropdownOpen[i]} toggle={this.handleToggle(i)}>\r\n                <DropdownToggle caret/>\r\n                <DropdownMenu right>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'EDIT')}>Edit</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'JSON')}>Export as JSON</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'PDF')}>Export as PDF</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'DELETE')}>Delete</DropdownItem>\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        </ListGroupItem>)\r\n    };\r\n    render() {\r\n        const escapeRooms = this.props.escapeRooms;\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Button block onClick={this.handleClick}>NEW</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <ListGroup>\r\n                            {escapeRooms.map(this.mapEscapeRoomToList)}\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Dashboard;","import React, {Component}  from 'react';\r\nimport { Container, Row, Col, Card, CardImg, CardBody,\r\n    CardTitle, Alert, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nclass Profile extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            edit: false,\r\n            errorMessage: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            _id: \"\"\r\n        };\r\n    }\r\n    //Handles login form submit event\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(this.props.updateUser)\r\n            this.props.updateUser({email:this.state.email,password:this.state.password});\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    //Handles error dismiss\r\n    handleDismiss = (event) => {\r\n        this.setState({errorMessage: \"\"});\r\n    }\r\n\r\n    handleClick = async (event) => {\r\n        switch (event.target.id) {\r\n            case 'editButton':\r\n                this.setState({edit:true});\r\n                break;\r\n            case 'saveButton':\r\n                let user = this.props.user;\r\n                if(this.state.email===\"\"){\r\n                    this.setState({errorMessage:\"Email Required\"});\r\n                    return;\r\n                } else {\r\n                    user.email = this.state.email;\r\n                }\r\n                if(this.state.password!==\"\")\r\n                    user.password = this.state.password;\r\n                if(this.props.updateUser!==undefined){\r\n                    let response = await this.props.updateUser(user);\r\n                    if(response===true){\r\n                        this.setState({edit:false});\r\n                    } else {\r\n                        this.setState({errorMessage:\"Error, Please Try Again Later\"});\r\n                    }\r\n                }\r\n                    \r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const user = this.props.user;\r\n        this.setState({\r\n            email: user.email\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(oldProps){\r\n        const newProps = this.props;\r\n        if(oldProps.user.email !== newProps.user.email){\r\n            const user = this.props.user;\r\n            this.setState({\r\n                email: user.email,\r\n                _id: user._id\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.profile = \r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <CardImg height=\"50%\" src={this.props.user.avatar} alt=\"Profile Image\" />\r\n                        <CardBody>\r\n                        <CardTitle className=\"text-center\">{this.props.user.email}</CardTitle>\r\n                        <Button id=\"editButton\" block={true} className=\"text-center\" onClick={this.handleClick}>Edit Profile</Button>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        this.editProfile = \r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup>\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"password\">Password</Label>\r\n                            <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <Button id=\"saveButton\" onClick={this.handleClick}>Save</Button>\r\n                        <Alert isOpen={this.state.errorMessage !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.errorMessage}</Alert>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        if(this.state.edit)\r\n            return this.editProfile;\r\n        else \r\n            return this.profile;\r\n    }\r\n};\r\n\r\nexport default Profile;","import uniqid from 'uniqid';\r\n\r\nexport default class Component {\r\n    constructor(){\r\n        this._id = uniqid();\r\n        this.name = \"\";\r\n        this.description = \"\";\r\n        this.inputComponents = [];\r\n        this.outputComponents = [];\r\n        this.type = \"Component\";\r\n        this.position = {top:0,left:0};\r\n        this.estimatedCost = \"\";\r\n    }\r\n}","import Component from './Component';\r\nexport default class Area extends Component {\r\n    constructor(){\r\n        super();\r\n        this.type=\"Area\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Puzzle extends Component {\r\n    constructor(){\r\n        super();\r\n        this.puzzleType=\"\";\r\n        this.type=\"Puzzle\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Prop extends Component {\r\n    constructor(){\r\n        super();\r\n        this.type=\"Prop\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Lock extends Component {\r\n    constructor(){\r\n        super();\r\n        this.lockType=\"\";\r\n        this.type=\"Lock\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Event extends Component {\r\n    constructor(){\r\n        super();\r\n        this.eventType=\"\";\r\n        this.type=\"Event\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Music extends Component {\r\n    constructor(){\r\n        super();\r\n        this.startTime=\"\";\r\n        this.endTime=\"\"\r\n        this.type=\"Music\";\r\n    }   \r\n}","import { Area } from \".\";\r\nexport default class EscapeRoom {\r\n    constructor(userId){\r\n        this.userId = userId;\r\n        this.details = {\r\n            name: \"Unnamed\",\r\n            designers: \"\",\r\n            theme: \"\",\r\n            minPlayers: \"\",\r\n            maxPlayers: \"\",\r\n            targetTime: \"\",\r\n            difficulty: \"3\",\r\n            objective: \"\",\r\n            description: \"\"\r\n        }\r\n        this.accessibility = {\r\n            protanomaly: false,\r\n            protanopia: false,\r\n            deuteranomaly: false,\r\n            deuteranopia: false,\r\n            tritanomaly: false,\r\n            tritanopia: false,\r\n            coneMonochromacy: false,\r\n            rodMonochromacy: false,\r\n            largeFonts: false,\r\n            highContrast: false\r\n        }\r\n        this.components = [new Area()]\r\n    }  \r\n}","import React, {Component}  from 'react';\r\nimport { Container, Dropdown, DropdownToggle , DropdownMenu , DropdownItem , Row, Col, Nav, NavItem, NavLink, TabContent, TabPane , Button } from 'reactstrap';\r\nimport { Details, Accessibility, Design } from './index';\r\nimport classnames from 'classnames';\r\nimport { saveAs } from 'file-saver';\r\nimport jsPDF from 'jspdf';\r\nimport EscapeRoom from '../models/EscapeRoom';\r\n\r\nclass EscapeRoomDesigner extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {activeTab:'design', dropdownOpen: false};\r\n    }\r\n    saveJSON(escapeRoom) {\r\n        const blob = new Blob([JSON.stringify(escapeRoom)],{type:'text/plain;charset=utf-8'});\r\n        saveAs(blob, escapeRoom.details.name+\".json\");\r\n    }\r\n    savePDF(escapeRoom) {\r\n        var doc = new jsPDF();\r\n        doc.text(JSON.stringify(escapeRoom),10,10);\r\n        doc.save(escapeRoom.details.name+'.pdf');\r\n    }\r\n    handleClick = (action) => (e) => {\r\n        switch(action){\r\n            case 'EXIT':\r\n                if(this.props.saveEscapeRoom)\r\n                    this.props.saveEscapeRoom(this.props.escapeRoom);\r\n                break;\r\n            case 'JSON':\r\n                if(this.props.saveEscapeRoom)\r\n                    this.props.saveEscapeRoom(this.props.escapeRoom);\r\n                this.saveJSON(this.props.escapeRoom);\r\n                break;\r\n            case 'PDF':\r\n                if(this.props.saveEscapeRoom)\r\n                    this.props.saveEscapeRoom(this.props.escapeRoom);\r\n                this.savePDF(this.props.escapeRoom);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    handleToggle = (e) => {\r\n        this.setState({dropdownOpen: !this.state.dropdownOpen});\r\n    }\r\n    handleNav = (tab) => (e) => {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const escapeRoom = this.props.escapeRoom;\r\n        if(escapeRoom===undefined){\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col xs=\"6\" md=\"3\" lg=\"3\"><Button block onClick={this.handleClick('EXIT')}>Save and Exit</Button></Col>\r\n                    <Col xs=\"6\" md=\"3\" lg=\"3\">\r\n                        <Dropdown block isOpen={this.state.dropdownOpen} toggle={this.handleToggle}>\r\n                            <DropdownToggle caret>Save and Export</DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem onClick={this.handleClick('JSON')}>Export as JSON</DropdownItem>\r\n                                <DropdownItem onClick={this.handleClick('PDF')}>Export as PDF</DropdownItem>\r\n                            </DropdownMenu>\r\n                        </Dropdown>\r\n                    </Col>\r\n                    <Col xs=\"6\"/>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Nav tabs>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'details'})}\r\n                                    onClick={this.handleNav('details')}    \r\n                                >\r\n                                    Details\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'accessibility'})}\r\n                                    onClick={this.handleNav('accessibility')}    \r\n                                >\r\n                                    Accessibility\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'design'})}\r\n                                    onClick={this.handleNav('design')}    \r\n                                >\r\n                                    Design\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <TabContent activeTab={this.state.activeTab}>\r\n                            <TabPane tabId=\"details\">\r\n                                <Details details={this.props.escapeRoom.details} updateDetails={this.props.updateDetails}/>\r\n                            </TabPane>\r\n                            <TabPane tabId=\"accessibility\">\r\n                                <Accessibility accessibility={this.props.escapeRoom.accessibility} updateAccessibility={this.props.updateAccessibility}/>\r\n                            </TabPane>\r\n                            <TabPane tabId=\"design\">\r\n                                <Design components={{components:this.props.escapeRoom.components}} showModal={this.props.showModal} accessibility={this.props.escapeRoom.accessibility} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} updateComponent={this.props.updateComponent} addRelationship={this.props.addRelationship} removeRelationship={this.props.removeRelationship}/>\r\n                            </TabPane>\r\n                        </TabContent>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default EscapeRoomDesigner;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Form, FormGroup, Label, Input} from 'reactstrap';\r\n\r\nclass Details extends Component {\r\n    //Changes state on input change\r\n    handleChange = (event) => { \r\n        var state = {};\r\n        state[event.target.id] = event.target.value;    \r\n        this.props.updateDetails(state);\r\n    }\r\n    render(){\r\n        return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Room Name</Label>\r\n                            <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Room Name\" value={this.props.details.name} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"designers\">Designers</Label>\r\n                            <Input type=\"text\" name=\"designers\" id=\"designers\" placeholder=\"Designer(s)\" value={this.props.details.designers} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"theme\">Theme</Label>\r\n                            <Input type=\"text\" name=\"theme\" id=\"theme\" placeholder=\"theme\" value={this.props.details.theme} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label>Players</Label>\r\n                            <Input type=\"text\" name=\"minPlayers\" id=\"minPlayers\" placeholder=\"Min\" value={this.props.details.minPlayers} onChange={this.handleChange}/>\r\n                            <Input type=\"text\" name=\"maxPlayers\" id=\"maxPlayers\" placeholder=\"Max\" value={this.props.details.maxPlayers} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"targetTime\">Target Time</Label>\r\n                            <Input type=\"text\" name=\"targetTime\" id=\"targetTime\" placeholder=\"Time\" value={this.props.details.targetTime} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"difficulty\">Difficulty</Label>\r\n                            <Input type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" id=\"difficulty\" value={this.props.details.difficulty} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </Col>\r\n                <Col>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"objective\">Objective</Label>\r\n                            <Input type=\"text\" name=\"objective\" id=\"objective\" placeholder=\"Main Objective\" value={this.props.details.objective} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"description\">Description</Label>\r\n                            <Input type=\"textarea\" name=\"description\" id=\"description\" placeholder=\"Description\" value={this.props.details.description} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>)\r\n    }\r\n}\r\n\r\nexport default Details;","import React, {Component} from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Pallet, ComponentArranger, ComponentDetails } from './index';\r\nimport Area from '../models/Area';\r\nimport Modal from '../models/Modal';\r\n\r\nclass Design extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {selected: {}};\r\n    }\r\n    handleComponentClick = (component) => (e) => {\r\n        e.stopPropagation();\r\n        this.setState({selected:component});\r\n    }\r\n    handleComponentDrop = (component, parentId, isInput = true) => {\r\n        let components = [...this.props.state.components];\r\n        let searchResult = this.findComponent(component._id);\r\n        if(parentId != null){\r\n            components = this.props.addRelationship(component._id,parentId,isInput)\r\n            if(searchResult==null){\r\n                let parent = this.findComponent(parentId);\r\n                if(parent.type!=='Area'){\r\n                    let area = components.find((comp)=>{\r\n                        if(comp.type==='Area'){\r\n                            return comp.outputComponents.find((com)=>{\r\n                                return com === parentId;\r\n                            });\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    });\r\n                    if(area!==undefined){\r\n                        components = this.addRelationship(component._id,area._id,false);\r\n                    }\r\n                }\r\n                components.push(component);\r\n            } else {\r\n                components = this.updateComponent(component);\r\n            }\r\n            this.props.handleChange(components);\r\n        } else {\r\n            components.push(component);\r\n            this.props.handleChange(components);\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col md=\"2\">\r\n                        <Pallet/>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                        <ComponentArranger showModal={this.props.showModal} handleComponentClick={this.handleComponentClick} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship} components={this.props.state.components}/>            \r\n                    </Col>\r\n                    <Col md=\"2\">\r\n                        <ComponentDetails selected={this.state.selected} updateComponent={this.props.updateComponent}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Design;","import React, {Component}  from 'react';\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport { DropTarget } from 'react-dnd';\r\nimport { Puzzle, Event, Music, Lock, Prop } from '../models/index';\r\n\r\nconst Types = {\r\n    COMPONENT: 'COMPONENT'\r\n}\r\n\r\nconst componentTarget = {\r\n    drop(props,monitor,component){\r\n        if (monitor.didDrop()){\r\n            return;\r\n        }\r\n        const item = monitor.getItem();\r\n        const isInput = props.isInput;\r\n        component.handleComponentDrop(item,isInput);\r\n        return {moved:true};\r\n    }\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        isOverCurrent: monitor.isOver({shallow:true}),\r\n        canDrop: monitor.canDrop(),\r\n        itemType: monitor.getItemType()\r\n    }\r\n}\r\n\r\nclass ComponentDnDTarget extends Component {\r\n    handleComponentDrop(item,isInput=true){\r\n        var component = null;\r\n        if (item.id!==undefined){\r\n            switch(item.id){\r\n                case 'Puzzle':\r\n                    component = new Puzzle();\r\n                    break;\r\n                case 'Lock':\r\n                    component = new Lock();\r\n                    break;\r\n                case 'Event':\r\n                    component = new Event();\r\n                    break;\r\n                case 'Music':\r\n                    component = new Music();\r\n                    break;\r\n                case 'Prop':\r\n                    component = new Prop();\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            this.props.addComponent(component,this.props.component._id);\r\n        }else {\r\n            component = item;\r\n            if(component._id!==this.props.component._id)\r\n                this.props.addRelationship(component._id,this.props.component._id,isInput);\r\n        }\r\n\r\n    }\r\n    render() {\r\n        var classNames;\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames=\"canDrop\";\r\n        } else if(this.props.isOver){\r\n            classNames=\"cantDrop\";\r\n        }\r\n        return this.props.connectDropTarget(\r\n            <div className={classNames} key={this.props.component._id}>\r\n                <Card onClick={this.props.handleComponentClick(this.props.component)}>\r\n                    <CardBody>\r\n\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DropTarget(Types.COMPONENT, componentTarget, collect)(ComponentDnDTarget);","import React, {Component} from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport ComponentDnDTarget from './ComponentDnDTarget';\r\nimport { Row, Col } from 'reactstrap'\r\nimport '../styles/Component.css';\r\nimport { ArcherElement } from 'react-archer';\r\nimport Modal from '../models/Modal';\r\n\r\n// Drag sources and drop targets only interact\r\n// if they have the same string type.\r\n// You want to keep types in a separate file with\r\n// the rest of your app's constants.\r\nconst Types = {\r\n  COMPONENT: 'COMPONENT'\r\n};\r\n\r\n/**\r\n * Specifies the drag source contract.\r\n * Only `beginDrag` function is required.\r\n */\r\nconst componentSource = {\r\n  canDrag(props) {\r\n    // You can disallow drag based on props\r\n    return true;\r\n  },\r\n\r\n  isDragging(props, monitor) {\r\n    return monitor.getItem().id === props.id;\r\n  },\r\n\r\n  beginDrag(props, monitor, component) {\r\n    // Return the data describing the dragged item\r\n    var item\r\n    if(props.component === undefined){\r\n      item = {id: props.id}\r\n    } else {\r\n      item = {...props.component};\r\n    }\r\n    return item;\r\n  },\r\n\r\n  endDrag(props, monitor, component) {\r\n    if (!monitor.didDrop()) {\r\n      if(props.component!==undefined||props.component!==null)\r\n        props.showModal(new Modal(\"Warning\", \"Are you sure you want to delete this component?\",\"Yes\",()=>{this.props.removeComponent(props.component._id)},\"No\",()=>{}));\r\n        return;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    // Call this function inside render()\r\n    // to let React DnD handle the drag events:\r\n    connectDragSource: connect.dragSource(),\r\n    // You can ask the monitor about the current drag state:\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nclass ComponentDnDSource extends Component{\r\n  mapRelationships = (componentId,type) => {\r\n    let style;\r\n    let label=\"\";\r\n    switch(type){\r\n      case 'input':\r\n        style = {\r\n          strokeColor:'blue'\r\n        }\r\n        label='input';\r\n        break;\r\n      case 'output':\r\n        style = {\r\n          strokeColor:'green'\r\n        }\r\n        label=\"output\"\r\n      break;\r\n      default:\r\n        style={};\r\n    }\r\n    return ({\r\n      targetId: componentId,\r\n      targetAnchor: 'top',\r\n      sourceAnchor: 'bottom',\r\n      style,\r\n      label,\r\n    });\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    return true;\r\n  }\r\n  findComponent(component){\r\n    if(this.props.findComponent!==undefined){\r\n      return this.props.findComponent(component);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  render() {\r\n      var target;\r\n      if (this.props.isTarget){\r\n        target = (\r\n          <Row>\r\n              <Col xs=\"6\"><ComponentDnDTarget isInput={true} component={this.props.component} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/></Col>\r\n              <Col xs=\"6\"><ComponentDnDTarget isInput={false} component={this.props.component} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/></Col>\r\n          </Row>  \r\n        );\r\n      }\r\n      var style = {};\r\n      let inputComponents;\r\n      let outputComponents; \r\n      let id=\"\";\r\n      let classNames = \"component\";\r\n      let archer;\r\n      if(this.props.component!==undefined){\r\n        style.top = this.props.component.position.top;\r\n        style.left = this.props.component.position.left;\r\n        style.position = 'relative';\r\n        classNames += \" \" + this.props.component.type + \" \" + this.props.component._id;\r\n        id=this.props.component._id;\r\n        inputComponents = this.props.component.inputComponents.map(id=>this.mapRelationships(id,'input'));\r\n        outputComponents = this.props.component.outputComponents.map(id=>this.mapRelationships(id,'output'));\r\n        archer = (\r\n          <ArcherElement id={id} relations={[...outputComponents,...inputComponents]}>\r\n            <span>{id}</span>\r\n          </ArcherElement>\r\n        );\r\n      } \r\n      return this.props.connectDragSource(\r\n          <div className={classNames} style={style} onClick={this.props.handleComponentClick(this.props.component)}>\r\n            <span>{this.props.id}</span>\r\n            {target}\r\n            {archer}\r\n          </div>\r\n      )\r\n  }\r\n};\r\n\r\nexport default DragSource(Types.COMPONENT, componentSource, collect)(ComponentDnDSource);","import React, {Component}  from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Card, CardBody ,CardTitle } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport { DropTarget } from 'react-dnd';\r\nimport ComponentDnDSource from './ComponentDnDSource';\r\nimport { Puzzle, Prop, Lock, Music, Event } from '../models/index.js';\r\nimport { ArcherContainer } from 'react-archer';\r\n\r\nconst Types = {\r\n    COMPONENT: 'COMPONENT'\r\n}\r\n\r\nconst componentTarget = {\r\n    drop(props,monitor,component){\r\n        if (monitor.didDrop() || !component || typeof props.component===undefined){\r\n            return;\r\n        }\r\n        const item = monitor.getItem();\r\n        if (item.position === undefined){\r\n            let clientOffset = monitor.getClientOffset();\r\n            let targetRect = ReactDOM.findDOMNode(component).getBoundingClientRect();\r\n            item.position = {top:clientOffset.y-targetRect.y-(targetRect.height*0.20),left:clientOffset.x-targetRect.x-(targetRect.width*0.10)};\r\n        } else {\r\n            const delta = monitor.getDifferenceFromInitialOffset()\r\n            item.position.left = Math.round(item.position.left + delta.x);\r\n            item.position.top = Math.round(item.position.top + delta.y);\r\n        }\r\n        component.handleComponentDrop(item);\r\n        return {moved:true};\r\n    }\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        isOverCurrent: monitor.isOver(),\r\n        canDrop: monitor.canDrop(),\r\n        itemType: monitor.getItemType()\r\n    }\r\n}\r\n\r\nclass AreaDnDTarget extends Component {\r\n    handleComponentDrop(item,isInput=false){\r\n        var component = null;\r\n        if (item.id!==undefined && item._id === undefined){\r\n            switch(item.id){\r\n                case 'Puzzle':\r\n                    component = new Puzzle();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Prop':\r\n                    component = new Prop();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Lock':\r\n                    component = new Lock();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Event':\r\n                    component = new Event();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Music':\r\n                    component = new Music();\r\n                    component.position = item.position;\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            this.props.addComponent(component,this.props.component._id);\r\n        } else {\r\n            component = item;\r\n            this.props.updateComponent(component);\r\n        }\r\n    }\r\n    render() {\r\n        var classNames;\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames=\"canDrop\";\r\n        } else if(this.props.isOver){\r\n            classNames=\"cantDrop\";\r\n        }\r\n        return this.props.connectDropTarget(\r\n            <div className={classNames} key={this.props.component._id}>                \r\n                <Card className={this.props.component.type} onClick={this.props.handleComponentClick(this.props.component)}>\r\n                    <CardBody>\r\n                        <CardTitle>{this.props.component.type}</CardTitle>\r\n                        <ArcherContainer>   \r\n                            {this.props.outputComponents.map((component,i)=>{\r\n                                console.log(component);\r\n                                return(<ComponentDnDSource key={component._id} isTarget handleComponentClick={this.props.handleComponentClick}  component={component} findComponent={this.props.findComponent} id={component.type} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/>)\r\n                            })}\r\n                            </ArcherContainer>\r\n                    </CardBody>\r\n                </Card>   \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DropTarget(Types.COMPONENT, componentTarget, collect)(AreaDnDTarget);","import React, {Component} from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport AreaDnDTarget from './AreaDnDTarget';\r\nimport '../styles/Component.css';\r\nimport { Card } from 'reactstrap';\r\nimport Modal from '../models/Modal';\r\n\r\n// Drag sources and drop targets only interact\r\n// if they have the same string type.\r\n// You want to keep types in a separate file with\r\n// the rest of your app's constants.\r\nconst Types = {\r\n  AREA: 'AREA'\r\n};\r\n\r\n/**\r\n * Specifies the drag source contract.\r\n * Only `beginDrag` function is required.\r\n */\r\nconst areaSource = {\r\n  canDrag(props) {\r\n    // You can disallow drag based on props\r\n    return true;\r\n  },\r\n\r\n  isDragging(props, monitor) {\r\n    // If your component gets unmounted while dragged\r\n    // (like a card in Kanban board dragged between lists)\r\n    // you can implement something like this to keep its\r\n    // appearance dragged:\r\n    return monitor.getItem().id === props.id;\r\n  },\r\n\r\n  beginDrag(props, monitor, component) {\r\n    // Return the data describing the dragged item\r\n    var item = null;\r\n    if (props.id!==undefined){\r\n       item = { id: props.id };\r\n    } else {\r\n       item = { component: props.component };\r\n    }\r\n    return item;\r\n  },\r\n\r\n  endDrag(props, monitor, component) {\r\n    if (!monitor.didDrop()) {\r\n      props.showModal(new Modal(\"Warning\", \"Are you sure you want to delete this component?\",\"Yes\",()=>{this.props.removeComponent(props.component._id)},\"No\",()=>{}));\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    // Call this function inside render()\r\n    // to let React DnD handle the drag events:\r\n    connectDragSource: connect.dragSource(),\r\n    // You can ask the monitor about the current drag state:\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nclass AreaDnDSource extends Component{\r\n  addComponent = (component,parentId)=>{\r\n    this.props.addComponent(component,this.props.component._id);\r\n    this.props.addRelationship(component._id,parentId);\r\n  }  \r\n\r\n  render() {\r\n    var target;\r\n    if (this.props.isTarget){\r\n      target = (\r\n        <AreaDnDTarget findComponent={this.props.findComponent} handleComponentClick={this.props.handleComponentClick} outputComponents={this.props.outputComponents} component={this.props.component} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/>\r\n      );\r\n    }\r\n\r\n    return this.props.connectDragSource(\r\n        <div onClick={this.props.handleComponentClick(this.props.component)}>\r\n          <Card className={\"component\"}>\r\n            {this.props.id}\r\n            {target}\r\n          </Card>\r\n        </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default DragSource(Types.AREA, areaSource, collect)(AreaDnDSource);","import React, {Component}  from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport AreaDnD from './AreaDnDSource';\r\nimport ComponentDnD from './ComponentDnDSource';\r\n\r\nclass Pallet extends Component {\r\n    handleComponentClick = (e) => {\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h3>Pallet</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <AreaDnD id=\"Area\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <ComponentDnD id=\"Puzzle\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <ComponentDnD id=\"Prop\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <ComponentDnD id=\"Lock\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <ComponentDnD id=\"Event\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <ComponentDnD id=\"Music\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Pallet;","import React, {Component}  from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport '../styles/ComponentArranger.css';\r\nimport Area from './AreaDnDSource';\r\nimport AreaModel from '../models/Area';\r\nimport { DropTarget } from 'react-dnd';\r\n\r\nconst Types = {\r\n    AREA: 'AREA'\r\n}\r\n\r\nconst areaArrangerTarget = {\r\n    drop(props, monitor, component){\r\n        const item = monitor.getItem();\r\n        if(item.component===undefined || item.component===null){\r\n            component.props.addComponent(new AreaModel());\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n    return {\r\n      // Call this function inside render()\r\n      // to let React DnD handle the drag events:\r\n      connectDropTarget: connect.dropTarget(),\r\n      // You can ask the monitor about the current drag state:\r\n      isOver: monitor.isOver(),\r\n      isOverCurrent: monitor.isOver({ shallow: true }),\r\n      canDrop: monitor.canDrop(),\r\n      itemType: monitor.getItemType()\r\n    };\r\n  }\r\n\r\nclass ComponentArranger extends Component {\r\n    findComponent = (id)=>{\r\n        return this.props.components.find((component)=>id===component._id);\r\n    }\r\n    mapAreas = (area,i)=>{\r\n        if(area.type==='Area'){\r\n            let outputComponents = area.outputComponents.map((componentId,i)=>{\r\n                return this.props.findComponent(componentId);\r\n            })\r\n            return (\r\n                <Col key={i} xs=\"12\"> \r\n                    <Area isTarget findComponent={this.findComponent} handleComponentClick={this.props.handleComponentClick} component={area} outputComponents={outputComponents} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/>\r\n                </Col>\r\n            )  \r\n        }\r\n    }\r\n    componentDidUpdate(props){\r\n        if(JSON.stringify(this.props.components)!==JSON.stringify(props.components)){\r\n            this.setState({render:true});\r\n        }\r\n    }\r\n    render() {\r\n        var classNames;\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames=\"canDrop\"\r\n        } else if (this.props.isOver){\r\n            classNames=\"cantDrop\"\r\n        }\r\n        return this.props.connectDropTarget(\r\n            <div className={classNames}>\r\n                <Container className=\"component-arranger\">\r\n                <Row>\r\n                    <Col>\r\n                        <h3>Components</h3>\r\n                    </Col>\r\n                </Row>\r\n                    <Row>\r\n                        {this.props.components.map(this.mapAreas)}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DropTarget(Types.AREA, areaArrangerTarget,collect)(ComponentArranger);","import React, {Component}  from 'react';\r\nimport { Container, Row, Col, Input, Label, ListGroupItem, Button, ListGroup } from 'reactstrap';\r\n\r\nclass ComponentDetails extends Component {\r\n    //Changes state on input change\r\n    handleChange = (event) => { \r\n        let state = {};\r\n        state[event.target.id] = event.target.value;  \r\n        state._id = this.props.selected._id;  \r\n        this.props.updateComponent(state);\r\n    }\r\n    mapDetailToInput = (key,i) => {\r\n        if(typeof this.props.selected[key] === \"string\" && key!==\"_id\" && key!==\"type\"){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{key}</Label>\r\n                        <Input type=\"text\" name={key} id={key} placeholder={key} value={this.props.selected[key]} onChange={this.handleChange}/>\r\n                    </Col>\r\n                </Row>)\r\n        } else {\r\n            return;\r\n        }\r\n    };\r\n    handleOnClick = (id,isInput)=> (e) => {\r\n        let component = {...this.props.selected};\r\n        let state = {};\r\n        state._id = component._id;\r\n        if(isInput){\r\n            state.inputComponents = component.inputComponents.filter(oldId => oldId!==id);\r\n        } else {\r\n            state.outputComponents = component.outputComponents.filter(oldId => oldId!==id);\r\n        }\r\n        this.props.updateComponent(state);\r\n    }\r\n    mapIDToP = (id,i,isInput) => {\r\n        return (\r\n            <ListGroupItem key={i}>\r\n                {id}\r\n                <Button onClick={this.handleOnClick(id,isInput)} color=\"danger\" style={{display:'inline', position: 'absolute', right:'2px', top:'0.3rem'}}>\r\n                    X\r\n                </Button>\r\n            </ListGroupItem>\r\n        )\r\n    }\r\n    render() {\r\n        let component = this.props.selected;\r\n        let type;\r\n        let properties;\r\n        let inputs;\r\n        let outputs;\r\n        let inputRelationships;\r\n        let outputRelationships;\r\n        if(component!==undefined || component!==null){\r\n            properties = Object.keys(component).map(this.mapDetailToInput)\r\n            type = this.props.selected.type;\r\n            if(component.type!=='Area'&&component.inputComponents!==undefined&&component.outputComponents!==undefined&&(component.inputComponents.length>0||component.outputComponents.length>0)){\r\n                inputs = component.inputComponents.map((id,i)=>this.mapIDToP(id,i,true));\r\n                outputs = component.outputComponents.map((id,i)=>this.mapIDToP(id,i,false));\r\n                inputRelationships = (\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>Inputs</h4>\r\n                            <ListGroup>\r\n                                {inputs}\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n                outputRelationships = (\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>Outputs</h4>\r\n                            <ListGroup>\r\n                                {outputs}\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            }\r\n        }\r\n        return (\r\n            <Container style={{\"margin-bottom\":\"5vh\"}}>\r\n                <Row>\r\n                    <Col>\r\n                        <h3>Details</h3>\r\n                        <h4>{type}</h4>\r\n                    </Col>\r\n                </Row>\r\n                {properties}\r\n                {inputRelationships}\r\n                {outputRelationships}\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ComponentDetails;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Card, CustomInput } from 'reactstrap';\r\n\r\nclass Accessibility extends Component {\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        var state = {};\r\n        state[event.target.id] = event.target.value;    \r\n        this.props.updateAccessibility(state);\r\n    }\r\n    render(){\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 className=\"text-center\">Visual Accessibility</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h2>Colour Blindness</h2>\r\n                                <p>\r\n                                    Please select the types of colour blindness your design must take into account\r\n                                </p>\r\n                            </Col>\r\n                            <Col>\r\n                                <h2>Other</h2>\r\n                                <p>\r\n                                    These are options to indicate restrictions on the design related to visual impairments such as blindness \r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card>\r\n                                   <CustomInput type=\"checkbox\" name=\"protanomaly\" id=\"protanomaly\" label=\"Protanomaly\" checked={this.props.accessibility.protanomaly} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"protanopia\" id=\"protanopia\" label=\"Protanopia\" checked={this.props.accessibility.protanopia} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"deuteranomaly\" id=\"deuteranomaly\" label=\"Deuteranomaly\" checked={this.props.accessibility.deuteranomaly} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"deuteranopia\" id=\"deuteranopia\" label=\"Deuteranopia\" checked={this.props.accessibility.deuteranopia} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"tritanomaly\" id=\"tritanomaly\" label=\"Tritanomaly\" checked={this.props.accessibility.tritanomaly} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"tritanopia\" id=\"tritanopia\" label=\"Tritanopia\" checked={this.props.accessibility.tritanopia} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"coneMonochromacy\" id=\"coneMonochromacy\" label=\"Cone Monochromacy\" checked={this.props.accessibility.coneMonochromacy} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"rodMonochromacy\" id=\"rodMonochromacy\" label=\"Rod Monochromacy\" checked={this.props.accessibility.rodMonochromacy} onChange={this.handleChange}/>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col>\r\n                                <Card>\r\n                                   <CustomInput type=\"checkbox\" name=\"largeFonts\" id=\"largeFonts\" label=\"Large Fonts\" value={this.props.accessibility.largeFonts} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"highContrast\" id=\"highContrast\" label=\"High Contrast\" value={this.props.accessibility.highContrast} onChange={this.handleChange}/>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 className=\"text-center\">Physical Accessibility</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <p>\r\n                                    These options are to indicate restrictions on the design related to physical impairments for example wheelchair accessibility and motor functions\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card>\r\n                                   <CustomInput type=\"checkbox\" name=\"Wheelchair Accessible\" id=\"heelchairAccessible\" label=\"wheelchairAccessible\" value={this.props.accessibility.wheelchairAccessible} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"motorAccessible\" id=\"motorAccessible\" label=\"Accessible for players with motor function issues\" value={this.props.accessibility.motorAccessible} onChange={this.handleChange}/>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <p>\r\n                            These options are designed to indicate the attempted accessibility of your design. These options will flag puzzles in your design that do not meet these restrictions\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Accessibility;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Alert, Button, Form, FormGroup, Label, Input, FormText} from 'reactstrap';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            errorMessage: \"\"\r\n        }\r\n    }\r\n\r\n    //Handles login form submit event\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        //Authenticate credentials \r\n        if(this.props.authenticateCredentials){\r\n            var err = await this.props.authenticateCredentials({strategy:'local',email:this.state.email,password:this.state.password});\r\n            this.setState({errorMessage:err});\r\n        }\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    //Handles error dismiss\r\n    handleDismiss = (event) => {\r\n        this.setState({errorMessage: \"\"});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"full-container verticaly-center-content\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup>\r\n                                    <Label for=\"email\">Email</Label>\r\n                                    <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"password\">Password</Label>\r\n                                    <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <Button>Login</Button>\r\n                                <FormText>\r\n                                    Don't have an account? Sign Up <Link to=\"/signup\">Here</Link>\r\n                                </FormText>\r\n                                <Alert isOpen={this.state.errorMessage !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.errorMessage}</Alert>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Alert, Button, Form, FormGroup, Label, Input, FormText} from 'reactstrap';\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            errorMessage: \"\"\r\n        }\r\n    }\r\n\r\n    //Handles login form submit event\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(this.props.signUp){\r\n            let err = await this.props.signUp({email:this.state.email,password:this.state.password});\r\n            this.setState({errorMessage:err});\r\n        }\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    //Handles error dismiss\r\n    handleDismiss = (event) => {\r\n        this.setState({errorMessage: \"\"});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"full-container verticaly-center-content\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup>\r\n                                    <Label for=\"email\">Email</Label>\r\n                                    <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"password\">Password</Label>\r\n                                    <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <Button>Sign Up</Button>\r\n                                <FormText>\r\n                                    Have an account? Log In <Link to=\"/login\">Here</Link>\r\n                                </FormText>\r\n                                <Alert isOpen={this.state.errorMessage !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.errorMessage}</Alert>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Signup;","import React, {Component}  from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <p>\r\n                            This is my honours project for BsC(Hons) Computing: Application Software Development at Robert Gordon University\r\n                            This is a web app for designing an escape room using drag and drop components\r\n                        </p>       \r\n                    </Col>\r\n                    <Col>\r\n                        <ul>\r\n                            <li><a href=\"https://github.com/AldoAbdn/Escape-Room-Generator/\">Github Repo</a></li>\r\n                            <li><a href=\"https://ninjamock.com/s/KCMW2Tx\">Wireframe</a></li>\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default About;","import React, {Component}  from 'react';\r\nimport YouTubePlaylist from 'react-youtube-playlist';\r\n\r\nclass Tutorials extends Component {\r\n    render() {\r\n        return (\r\n            <YouTubePlaylist\r\n                width={'85%'}\r\n                height={'100%'}\r\n                api_key={process.env.youtubeAPIKey}\r\n                playlist_id=\"PLWRRwFEmEuDKX5sobzWeb50xD14cpfkk3\"\r\n                scrolling={true}\r\n            />\r\n        )\r\n    }\r\n};\r\n\r\nexport default Tutorials;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass ProtectedRoute extends Component {\r\n    render(){\r\n        if (window.localStorage.getItem('feathers-jwt')){\r\n            if(this.props.condition!==undefined){\r\n                if(!this.props.condition){\r\n                    return(<Redirect to={this.props.redirect} state={this.props.location}/>)\r\n                } else {\r\n                    return (<Route {...this.props}/>)\r\n                }\r\n            } else {\r\n                return (<Route {...this.props}/>)\r\n            }\r\n        } else {\r\n            return (<Redirect to='/login' state={this.props.location}/>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default ProtectedRoute;","import React, {Component}  from 'react';\r\nimport { Container, Row } from 'reactstrap';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <h1>404 Page Not Found</h1>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default NotFound;","import React, {Component}  from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\n//Components\r\nimport { Dashboard, EscapeRoomDesigner, Login, Signup, Tutorials, About, ProtectedRoute, Profile, NotFound } from '../components/index.js';\r\nimport EscapeRoom from '../models/EscapeRoom.js';\r\n/**\r\n * Business logic of app \r\n * handles creating and updating of data \r\n * handles navigation \r\n * @class\r\n * @author Alistair Quinn\r\n */\r\nclass BusinessLogic extends Component {\r\n    /**\r\n     * Main construcutor\r\n     * handles initialising state\r\n     * @constructor\r\n     */\r\n    constructor(){\r\n        super();\r\n        this.state = {profile:null};\r\n    }\r\n    /**\r\n     * Authenticates login credentials \r\n     * @function\r\n     * @param {Object} credentials \r\n     */\r\n    authenticateCredentials = async(credentials)=>{\r\n        try {\r\n            await this.props.feathersClient.authenticate(credentials);\r\n            let queryResult = await this.props.services.users.find({query:{email:credentials.email}});\r\n            if(queryResult.action.type.includes('FULFILLED')&&queryResult.value.total>0){\r\n                var user = queryResult.value.data[0];\r\n                user.token = window.localStorage.getItem('feathers-jwt');\r\n                this.props.redux.actions.user.login(user);\r\n                this.props.history.push('/dashboard');\r\n            } else {\r\n                this.setState({})\r\n            }\r\n        } catch(err){\r\n            return err.message;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a new user \r\n     * @function\r\n     * @param {Object} credentials \r\n     */\r\n    signUp = async(credentials)=>{\r\n        //Create a new user \r\n        try{\r\n            await this.props.services.users.create(credentials);\r\n            //Authenticate with feathersjs\r\n            await this.props.feathersClient.authenticate({strategy:'local',email:credentials.email,password:credentials.password});\r\n            //Get User Details and Update Redux Store\r\n            let queryResult = await this.props.services.users.find({query:{email:credentials.email}});\r\n            if(queryResult.action.type.includes('FULFILLED')){\r\n                var user = queryResult.value.data[0];\r\n                user.token = window.localStorage.getItem('feathers-jwt');\r\n                this.props.redux.actions.user.login(user);\r\n                this.props.history.push('/dashboard');\r\n            }\r\n        } catch(error){\r\n            return error.message;\r\n        }\r\n    }\r\n    /**\r\n     * Opens escape room designer\r\n     * @function\r\n     * @param {EscapeRoom} escapeRoom\r\n     */\r\n    editEscapeRoom = (escapeRoom) => {\r\n        this.props.redux.actions.escapeRoom.setSelectedEscapeRoom(escapeRoom);\r\n        this.props.history.push('/designer');\r\n    }\r\n    /**\r\n     * Creates a new escape room \r\n     * then opens designer\r\n     * @function\r\n     */\r\n    newEscapeRoom = async() => {\r\n        const userId = this.props.redux.state.user._id;\r\n        const newEscapeRoom = new EscapeRoom(userId);\r\n        let response = await this.props.services['escape-rooms'].create(newEscapeRoom)\r\n        if(response.action.type.includes('FULFILLED')){\r\n            const escapeRoom = response.value;\r\n            if (escapeRoom!==null){\r\n                this.props.redux.actions.escapeRooms.addEscapeRoom(escapeRoom);\r\n                this.props.redux.actions.escapeRooms.setSelectedEscapeRoom(escapeRoom);\r\n                this.props.history.push('/designer');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Deletes an escape room\r\n     * @function\r\n     * @param {EscapeRoom} escapeRoom\r\n     */\r\n    deleteEscapeRoom = (escapeRoom) => {\r\n        this.props.services['escape-rooms'].remove(escapeRoom._id);\r\n        this.props.redux.actions.escapeRooms.removeEscapeRoom(escapeRoom);\r\n    }\r\n    /**\r\n     * Updates users details \r\n     * @function\r\n     * @param {Object} update\r\n     */\r\n    updateUser = async (update) => {\r\n        try{\r\n            const user = this.props.redux.state.user;\r\n            let response = await this.props.services.users.patch(user._id,update);\r\n            this.props.redux.actions.user.login(response.value);\r\n            this.props.history.push('/profile');\r\n            return true;\r\n        }catch(error){\r\n            return error.message;\r\n        }\r\n    }\r\n    /**\r\n     * Saves an escape room\r\n     * @function\r\n     * @param {EscapeRoom} escapeRoom\r\n     */\r\n    saveEscapeRoom = async(escapeRoom) => {\r\n        if(escapeRoom._id!==undefined){\r\n            await this.props.services['escape-rooms'].update(escapeRoom._id,escapeRoom);\r\n            await this.props.redux.actions.escapeRooms.updateEscapeRoom(escapeRoom);\r\n        }\r\n        this.props.history.push('/');\r\n    }\r\n    /**\r\n     * React lifecycle method\r\n     * Renders navigation \r\n     * @function\r\n     */\r\n    render() {\r\n        const escapeRooms = this.props.redux.state.escapeRooms;\r\n        const escapeRoom = this.props.redux.state.escapeRoom;\r\n        const escapeRoomActions = this.props.redux.actions.escapeRoom;\r\n        const user = this.props.redux.state.user;\r\n        const showModal = this.props.redux.actions.modal.showModal;\r\n        return (\r\n            <Switch>\r\n                <Redirect exact from=\"/\" to=\"dashboard\"/>\r\n                <ProtectedRoute path=\"/dashboard\" render={(routeProps) => (<Dashboard escapeRooms={escapeRooms} showModal={showModal} editEscapeRoom={this.editEscapeRoom} newEscapeRoom={this.newEscapeRoom} deleteEscapeRoom={this.deleteEscapeRoom}/>)}/>\r\n                <ProtectedRoute path=\"/profile\" condition={Object.keys(user).length > 0 && user!==undefined} redirect={'/login'} render={(routeProps) => (<Profile user={user} updateUser={this.updateUser}/>)}/>\r\n                <ProtectedRoute path=\"/designer\" condition={Object.keys(escapeRoom).length > 0 &&escapeRoom!==undefined} redirect={'/'} render={(routeProps) =>(<EscapeRoomDesigner showModal={showModal} escapeRoom={escapeRoom} saveEscapeRoom={this.saveEscapeRoom} updateDetails={escapeRoomActions.updateDetails} updateAccessibility={escapeRoomActions.updateAccessibility} addComponent={escapeRoomActions.addComponent} removeComponent={escapeRoomActions.removeComponent} updateComponent={escapeRoomActions.updateComponent} addRelationship={escapeRoomActions.addRelationship} removeRelationship={escapeRoomActions.removeRelationship}/>)}/>\r\n                <Route path=\"/login\" render={(routeProps) => (<Login authenticateCredentials={this.authenticateCredentials}/>)}/>\r\n                <Route path=\"/signup\" render={(routeProps) => (<Signup signUp={this.signUp}/>)}/>\r\n                <Route path=\"/about\" component={About}/>\r\n                <Route path=\"/tutorials\" component={Tutorials}/>\r\n                <Route component={NotFound}/>\r\n            </Switch> \r\n        )\r\n    }\r\n};\r\n\r\nexport default BusinessLogic;","import React, {Component}  from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport '../styles/Main.css';\r\n\r\n/**\r\n * Defines main layout of app \r\n * Handles re-authentication of logged in user \r\n * Renders business logic \r\n * @class Main \r\n * @author Alistair Quinn\r\n */\r\nimport BusinessLogic from './BusinessLogic.js';\r\nclass Main extends Component {\r\n    /**\r\n     * Main constructor to set initial state\r\n     * @constructor\r\n     */\r\n    constructor(){\r\n        super();\r\n        this.state = {profile:null,tooltipOpen:false};\r\n    }\r\n    /**\r\n     * React lifecycle method\r\n     * Updates profile if user has changed\r\n     * @function\r\n     * @param {Object} prevProps \r\n     */\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.redux.state.user.email!==this.props.redux.state.user.email){\r\n            this.populateEscapeRooms(this.props.redux.state.user._id);\r\n            if(this.props.redux.state.user.email !== undefined){\r\n                this.setProfile(true);\r\n            } else {\r\n                this.setProfile(false);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * React lifecycle method \r\n     * Updates profile is logged in\r\n     * @function\r\n     */\r\n    componentDidMount() {\r\n        if (window.localStorage.getItem('feathers-jwt') && this.props.redux.state.user.email!==undefined){\r\n            this.setProfile(true);\r\n        } else if (window.localStorage.getItem('feathers-jwt') && this.props.redux.state.user.email===undefined){\r\n            this.authenticate();\r\n        }\r\n    }\r\n    /**\r\n     * Authentication\r\n     * @function\r\n     */\r\n    authenticate = async() => {\r\n        //Authenticates JWT and then populates user/escapeRooms\r\n        let jwt = await this.authenticateJWT();\r\n        let user = await this.populateUserFromJWT(jwt);\r\n        if(user!=null)\r\n            await this.populateEscapeRooms(user._id);\r\n    }\r\n    /**\r\n     * Authenticates JWT \r\n     * @function \r\n     * @returns string\r\n     */\r\n    authenticateJWT = async() => {\r\n        try {\r\n            let response = await this.props.feathersClient.authenticate();\r\n            return response.accessToken;\r\n        } catch(error) {\r\n            this.logout();\r\n        }\r\n    }\r\n    /**\r\n     * Populates user from a jwt\r\n     * @function\r\n     * @param {String} jwt \r\n     * @returns {Object}\r\n     */\r\n    populateUserFromJWT = async(jwt) => {\r\n        if(jwt===undefined||jwt===null||jwt===\"\"){\r\n            this.setProfile(false);\r\n            return null;\r\n        }\r\n        let response = await this.props.feathersClient.passport.verifyJWT(jwt);\r\n        response = await this.props.services.users.get(response.userId);\r\n        var user = response.value;\r\n        if(user.email===undefined||user.email===\"\"){\r\n            this.setProfile(false);\r\n            return null;\r\n        }\r\n        user.token = window.localStorage.getItem('feathers-jwt');\r\n        this.props.redux.actions.user.login(user);\r\n        this.setProfile(true);\r\n        return user;\r\n    }\r\n    /**\r\n     * Popultes escape rooms by user ID\r\n     * @function\r\n     * @param {String} userId\r\n     * @returns {Array}\r\n     */\r\n    populateEscapeRooms = async (userId) => {\r\n        //Get User Details and Update Redux Store\r\n        if (userId !== null && userId !== undefined){\r\n            let queryResult = await this.props.services['escape-rooms'].find({query:{userId:userId}});\r\n            if(queryResult.action.type.includes('FULFILLED')){\r\n                const escapeRooms = queryResult.value.data;\r\n                if (escapeRooms!==null && escapeRooms!==undefined)\r\n                    this.props.redux.actions.escapeRooms.updateEscapeRooms(escapeRooms);\r\n                    this.setState({loading:false});\r\n                }\r\n        }\r\n    }\r\n    /**\r\n     * Logs out user, tidys up\r\n     * @function\r\n     */\r\n    logout = () => {\r\n        window.localStorage.removeItem('feathers-jwt');\r\n        this.setState({profile:null});\r\n        this.props.redux.actions.user.logout();\r\n        this.props.history.push('/');\r\n    }\r\n    /**\r\n     * Hides/shows user profile \r\n     * dependent on login status\r\n     * @param {Boolean} loggedIn \r\n     */\r\n    setProfile(loggedIn){\r\n        let state;\r\n        if(loggedIn){\r\n            state = \r\n            <div className=\"profile\" >\r\n                <Link to=\"/profile\">Profile</Link>\r\n                <Button onClick={this.logout}>Logout</Button>\r\n            </div>\r\n        } else {\r\n            state = null;\r\n        }\r\n        this.setState({profile:state});\r\n    }\r\n    /**\r\n     * React lifecycle method \r\n     * Renders main layout\r\n     * @function\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        const loading = this.state.loading || this.props.redux.state.usersService.isLoading || this.props.redux.state.escapeRoomsService.isLoading;\r\n        const modal = this.redux.state.modal;\r\n        const hideModal = this.redux.actions.modal.hideModal;\r\n        return (\r\n            <div>   \r\n                <LoadingOverlay className={'loading-overlay'} active={loading} spinner>       \r\n                    <header>\r\n                        <h1 className=\"title\">\r\n                            <Link to=\"/\">Escape Room Generator</Link>\r\n                        </h1>\r\n                    {this.state.profile}\r\n                    </header>\r\n                    \r\n                    <main>\r\n                        <BusinessLogic history={this.props.history} feathersClient={this.props.feathersClient} redux={this.props.redux} services={this.props.services}/>\r\n                    </main>\r\n                    <footer>\r\n                        <Link to=\"/about\">About</Link>\r\n                        <Link to=\"/tutorials\">Tutorials</Link>\r\n                    </footer>\r\n                </LoadingOverlay>\r\n                <Modal isOpen={modal.isOpen} >\r\n                    <ModalHeader>{modal.header}</ModalHeader>\r\n                    <ModalBody>\r\n                        {modal.body}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"success\" onClick={()=>{\r\n                            hideModal();\r\n                            new Function(`return ${modal.confirm.action}`)();\r\n                        }}>{modal.confirm.text}</Button>\r\n                        <Button color=\"danger\" onClick={()=>{\r\n                            hideModal();\r\n                            new Function(`return ${modal.cancel.action}`)();\r\n                        }}>{modal.cancel.text}</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Main;","export function login(user) {\r\n    return {\r\n        type: 'LOGIN', user\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return {\r\n        type: 'LOGOUT'\r\n    }\r\n}\r\n\r\n","export function addEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'ADD_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function removeEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'REMOVE_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function updateEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'UPDATE_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function updateEscapeRooms(escapeRooms){\r\n    return {\r\n        type: 'UPDATE_ESCAPE_ROOMS',\r\n        escapeRooms\r\n    }\r\n}","export function setSelectedEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'SET_SELECTED_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function clearSelectedEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'CLEAR_SELECTED_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function updateDetails(details){\r\n    return {\r\n        type: 'UPDATE_DETAILS',\r\n        details\r\n    }\r\n}\r\n\r\nexport function updateAccessibility(accessibility){\r\n    return {\r\n        type: 'UPDATE_ACCESSIBILITY',\r\n        accessibility\r\n    }\r\n}\r\n\r\nexport function addComponent(component, areaId){\r\n    return {\r\n        type: 'ADD_COMPONENT',\r\n        component,\r\n        areaId\r\n    }\r\n}\r\n\r\nexport function removeComponent(componentId){\r\n    return {\r\n        type: 'REMOVE_COMPONENT',\r\n        componentId\r\n    }\r\n}\r\n\r\nexport function updateComponent(component){\r\n    return {\r\n        type: 'UPDATE_COMPONENT',\r\n        component\r\n    }\r\n}\r\n\r\nexport function addRelationship(componentId,parentId,isInput){\r\n    return {\r\n        type: 'ADD_RELATIONSHIP',\r\n        componentId,\r\n        parentId,\r\n        isInput\r\n    }\r\n}\r\n\r\nexport function removeRelationship(componentId,parentId,isInput){\r\n    return {\r\n        type: 'REMOVE_RELATIONSHIP',\r\n        componentId,\r\n        parentId,\r\n        isInput\r\n    }\r\n}\r\n\r\n","export function showModal(modal){\r\n    return {\r\n        type: 'SHOW_MODAL',\r\n        modal\r\n    }\r\n}\r\n\r\nexport function hideModal(){\r\n    return {\r\n        type: 'HIDE_MODAL'\r\n    }\r\n}","/**\r\n * Connects redux state and actions to the whole app,\r\n * makes sure routing is possible,\r\n * @class App\r\n * @author Alistair Quinn  \r\n */\r\n\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router'\r\nimport '../styles/App.css';\r\nimport Main from './Main';\r\nimport * as userActionCreators from '../actions/user';\r\nimport * as escapeRoomsActionCreators from '../actions/escapeRooms';\r\nimport * as escapeRoomActionCreators from '../actions/escapeRoom';\r\nimport * as modalActionCreators from '../actions/modal';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    redux: state\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  const user = bindActionCreators(userActionCreators, dispatch);\r\n  const escapeRooms = bindActionCreators(escapeRoomsActionCreators, dispatch);\r\n  const escapeRoom = bindActionCreators(escapeRoomActionCreators, dispatch);\r\n  const modal = bindActionCreators(modalActionCreators, dispatch);\r\n  return {user, escapeRooms, escapeRoom, modal};\r\n}\r\n\r\nfunction mergeProps(stateProps, dispatchProps, ownProps) {\r\n  return {\r\n    ...ownProps,\r\n    redux: {\r\n      state: stateProps.redux,\r\n      actions: dispatchProps\r\n    }\r\n  }\r\n}\r\n\r\nconst App = connect(mapStateToProps, mapDispatchToProps, mergeProps)(Main);\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/**\r\n * Main file, starts front end and renders App \r\n * @author Alistair Quinn\r\n */\r\n\r\n//React Imports \r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n//Redux Imports\r\nimport { Provider } from 'react-redux';\r\n//Store \r\nimport configureStore from './stores/store'\r\n//Feathers\r\nimport io from 'socket.io-client';\r\nimport feathers from 'feathers-client';\r\n//Feathers-Redux\r\nimport reduxifyServices, {getServicesStatus, bindWithDispatch} from 'feathers-redux';\r\n//CSS\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//Components\r\nimport App from './components/App';\r\n//Service Worker \r\nimport * as serviceWorker from './serviceWorker';\r\n//ReactDnD\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport TouchBackend from 'react-dnd-touch-backend';\r\nimport MultiBackend, { TouchTransition } from 'react-dnd-multi-backend';\r\nimport { DragDropContextProvider } from 'react-dnd';\r\nlet pipline = {\r\n    backends: [\r\n        {backend: HTML5Backend},\r\n        {\r\n            backend: TouchBackend({enableMouseEvents:true}),\r\n            preview: true,\r\n            transition: TouchTransition\r\n        }\r\n    ]\r\n};\r\nlet backend = MultiBackend(pipline);\r\n\r\n//Feathers Configuration \r\nexport const feathersClient = feathers()\r\n    .configure(feathers.socketio(io()))\r\n    .configure(feathers.hooks())\r\n    .configure(feathers.authentication({\r\n        storage:window.localStorage\r\n    }));\r\n\r\n//Configure Redux\r\nconst rawServices = reduxifyServices(feathersClient, ['users', 'escape-rooms']);\r\nconst store = configureStore(rawServices,{user:{},escapeRooms:[],escapeRoom:{}});\r\nconst services = bindWithDispatch(store.dispatch, rawServices);\r\n\r\n//Router\r\nconst router = (\r\n    <DragDropContextProvider backend={backend}>\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <App feathersClient={feathersClient} services={services} getServicesStatus={getServicesStatus}/>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    </DragDropContextProvider>\r\n);\r\n\r\n//Render Router \r\nReactDOM.render(router, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport middlewares from '../middleware';\r\nimport rootReducer from '../reducers';\r\n\r\nexport default function configureStore(reduxifiedServices, initialState) {\r\n    const createStoreWithDevTools = window.devToolsExtension ? window.devToolsExtension()(createStore) : createStore;\r\n    const createStoreWithMiddlewares = applyMiddleware(...middlewares)(createStoreWithDevTools);\r\n    return createStoreWithMiddlewares(rootReducer(reduxifiedServices),initialState);\r\n}"],"sourceRoot":""}