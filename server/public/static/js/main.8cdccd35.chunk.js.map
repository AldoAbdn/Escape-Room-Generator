{"version":3,"sources":["middleware/logger.js","middleware/index.js","reducers/user.js","reducers/escapeRooms.js","models/Component.js","models/Area.js","models/Puzzle.js","models/Prop.js","models/Lock.js","models/Event.js","models/Music.js","models/EscapeRoom.js","reducers/escapeRoom.js","models/Modal.js","reducers/modal.js","reducers/index.js","components/Profile.js","pdf/pdf.js","components/Dashboard.js","components/EscapeRoomDesigner.js","components/Details.js","components/Design.js","components/ComponentDnDTarget.js","components/ComponentDnDSource.js","components/AreaDnDTarget.js","components/AreaDnDSource.js","components/PalletItem.js","components/Pallet.js","components/ComponentArranger.js","components/ComponentDetails.js","components/Accessibility.js","components/Login.js","components/SignUp.js","components/About.js","components/Tutorials.js","components/ProtectedRoute.js","components/NotFound.js","generators/LockGenerator.js","components/LockGenerator.js","puzzles/Puzzle.js","puzzles/Colour.js","puzzles/Crossword.js","puzzles/HiddenWord.js","puzzles/Riddle.js","puzzles/Cipher.js","generators/PuzzleGenerator.js","components/ListCreator.js","components/PuzzleGenerator.js","components/BusinessLogic.js","components/Main.js","actions/user.js","actions/escapeRooms.js","actions/escapeRoom.js","actions/modal.js","components/App.js","serviceWorker.js","index.js","stores/store.js"],"names":["logger","store","next","action","console","groupCollapsed","type","info","result","log","getState","groupEnd","middleware","reduxThunk","reduxPromiseMiddleware","user","state","arguments","length","undefined","Object","objectSpread","escapeRooms","i","push","escapeRoom","slice","findIndex","_id","concat","toConsumableArray","Component","classCallCheck","this","uniqid","version","name","description","output","inputComponents","outputComponents","position","top","left","estimatedCost","resources","Area","_this","possibleConstructorReturn","getPrototypeOf","call","Puzzle","puzzle","puzzleType","Prop","Lock","lockType","Event","eventType","Music","startTime","endTime","EscapeRoom","userId","details","designers","theme","minPlayers","maxPlayers","targetTime","difficulty","objective","accessibility","visual","protanomaly","protanopia","deuteranomaly","deuteranopia","tritanomaly","tritanopia","coneMonochromacy","rodMonochromacy","largeFonts","highContrast","physical","wheelchairAccessible","motorAccessible","components","cost","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","value","isNaN","parseFloat","parseInt","err","return","id","find","component","findComponent","outputs","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","string","join","reduce","sum","newState","areaId","calculateCost","componentId","forEach","index","filter","inputId","outputId","indexOf","parentId","isInput","Modal","header","body","confirmText","confirmCallback","cancelText","cancelCallback","isOpen","confirm","text","cancel","modal","reducers","reduxifiedServices","combineReducers","usersService","users","reducer","escapeRoomsService","routing","routerReducer","Profile","handleSubmit","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","event","wrap","_context","prev","preventDefault","props","updateUser","email","password","stop","_x","apply","handleChange","setState","defineProperty","target","handleDismiss","errorMessage","handleClick","_ref2","_callee2","_context2","t0","edit","abrupt","sent","_x2","oldProps","newProps","profile","react_default","createElement","Container","fluid","Row","Col","className","src","avatar","alt","Button","block","onClick","editProfile","Form","onSubmit","FormGroup","Label","for","Input","onChange","Alert","toggle","color","escapeRoomToPDF","doc","jsPDF","convertObject","object","_arr","keys","_i","key","contains","addImage","Array","JSON","stringify","save","Dashboard","handleToggle","e","dropdownOpen","newEscapeRoom","handleItemClick","editEscapeRoom","saveJSON","savePDF","deleteEscapeRoom","showModal","mapEscapeRoomToList","ListGroupItem","Dropdown","style","display","right","DropdownToggle","caret","DropdownMenu","DropdownItem","disabled","blob","Blob","saveAs","ListGroup","map","EscapeRoomDesigner","saveEscapeRoom","handleNav","tab","activeTab","toggleSvgs","lines","document","querySelectorAll","calculateOutput","calculateComponentOutput","history","prevProps","prevState","xs","md","lg","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","components_Details","updateDetails","components_Accessibility","updateAccessibility","components_Design","addComponent","removeComponent","updateComponent","addRelationship","removeRelationship","Details","class","aria-hidden","placeholder","UncontrolledTooltip","min","max","Design","handleComponentClick","stopPropagation","selected","components_Pallet","components_ComponentArranger","renderTrigger","components_ComponentDetails","ComponentDnDTarget","item","tooltip","classNames","isOver","canDrop","connectDropTarget","Card","CardBody","DropTarget","drop","monitor","didDrop","getItem","handleComponentDrop","moved","connect","dropTarget","isOverCurrent","shallow","itemType","getItemType","componentSource","canDrag","isDragging","beginDrag","endDrag","ComponentDnDSource","update","forceUpdate","window","addEventListener","removeEventListener","isTarget","components_ComponentDnDTarget","connectDragSource","DragSource","dragSource","componentTarget","clientOffset","getClientOffset","targetRect","ReactDOM","findDOMNode","getBoundingClientRect","y","height","x","width","AreaDnDTarget","updateScreenSize","screenWidth","innerHeight","screenHeight","render","_this2","title","CardTitle","origComponent","components_ComponentDnDSource","addRef","areaSource","AreaDnDSource","components_AreaDnDTarget","palletItem","PalletItem","Pallet","components_AreaDnDSource","components_PalletItem","areaArrangerTarget","AreaModel","ComponentArranger","mapAreas","area","includes","ref","refs","array","inputComponent","react_lineto_default","from","to","borderColor","outputComponent","ComponentDetails","handleOutputChange","handlePuzzleChange","generateFromInputs","mapDetailToInput","generator","components_LockGenerator","components_PuzzleGenerator","convertCamelCase","property","detail","mapKeysToRow","handleOnClick","oldId","mapIDToP","visualWarning","physicalWarning","replace","str","toUpperCase","properties","inputs","inputRelationships","outputRelationships","visualKeys","physicalKeys","Accessibility","handleVisualChange","handlePhysicalChange","CustomInput","label","Login","authenticateCredentials","strategy","FormText","Link","Signup","password2","signUp","About","href","Tutorials","dist_default","api_key","process","playlist_id","scrolling","ProtectedRoute","localStorage","condition","Route","Redirect","redirect","location","NotFound","LockGenerator","number","Math","floor","random","amount","wordsPerString","RandomWords","exactly","sequence","directions","handleNumericClick","lockGenerator","generateNumericCombination","handleWordClick","generateWords","handleDirectionalClick","generateDirectionSequence","lockGen","step","Colour","numbers","generateNumbers","num1","toString","num2","num3","num4","answer","colour","Crossword","words","hints","answers","crossword","CrosswordGenerator","HiddenWord","word","hiddenWord","generateHiddenWord","matrix","Riddle","riddle","generateRandomRiddle","riddles","Cipher","cipherType","encoder","encoders","decoder","decoders","encoderDATA","decoderDATA","PuzzleGenerator","options","ListCreator","items","addItem","alert","removeItem","mapItemsToInputs","InputGroup","InputGroupAddon","InputGroupText","addonType","handleListChange","list","generateWord","handleRiddleClick","handleCipherClick","generateCipher","cipher","puzzleGenerator","components_ListCreator","BusinessLogic","credentials","queryResult","feathersClient","authenticate","services","query","total","data","token","redux","actions","login","message","create","setSelectedEscapeRoom","_callee3","response","_context3","addEscapeRoom","remove","removeEscapeRoom","_ref4","_callee4","_context4","updateEscapeRoom","_x3","escapeRoomActions","Switch","exact","components_ProtectedRoute","path","routeProps","components_Dashboard","components_EscapeRoomDesigner","components_Login","SignUp","Main","toggleProfile","isProfileOpen","jwt","authenticateJWT","populateUserFromJWT","populateEscapeRooms","accessToken","logout","_ref3","passport","verifyJWT","get","updateEscapeRooms","loading","_ref5","_callee5","_context5","patch","tooltipOpen","isLoading","hideModal","nav","inNavbar","components_Profile","LoadingOverlay_default","spinner","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","components_BusinessLogic","es_Modal","ModalHeader","ModalBody","ModalFooter","clearSelectedEscapeRoom","App","dispatch","bindActionCreators","userActionCreators","escapeRoomsActionCreators","escapeRoomActionCreators","modalActionCreators","stateProps","dispatchProps","ownProps","withRouter","Boolean","hostname","match","__webpack_require__","d","__webpack_exports__","pipline","backends","backend","HTML5Backend","TouchBackend","enableMouseEvents","preview","transition","TouchTransition","MultiBackend","feathers","configure","socketio","io","hooks","authentication","storage","rawServices","reduxifyServices","initialState","createStoreWithDevTools","devToolsExtension","createStore","applyMiddleware","middlewares","createStoreWithMiddlewares","rootReducer","configureStore","bindWithDispatch","router","react_dnd_lib","es","BrowserRouter","components_App","getServicesStatus","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8cdccd35.chunk.js","sourcesContent":["/*\r\n A basic middleware logger\r\n See http://redux.js.org/docs/advanced/Middleware.html\r\n */\r\n\r\nconst logger = store => next => action => {\r\n    console.groupCollapsed(action.type); // eslint-disable-line no-console\r\n    console.info('dispatching', action); // eslint-disable-line no-console\r\n    const result = next(action);\r\n    console.log('next state', store.getState()); // eslint-disable-line no-console\r\n    console.groupEnd(action.type); // eslint-disable-line no-console\r\n    return result;\r\n  };\r\n  \r\n  export default logger;","// eslint no-unused-vars: 0,\r\n\r\nimport reduxThunk from 'redux-thunk';\r\nimport reduxPromiseMiddleware from 'redux-promise-middleware';\r\n// import { routerMiddleware } from 'react-router-redux';\r\n// import { browserHistory } from 'react-router';\r\nimport logger from './logger'; // eslint-disable-line no-unused-vars\r\n\r\nexport default [\r\n  reduxThunk, // Thunk middleware for Redux\r\n  reduxPromiseMiddleware(), // Resolve, reject promises with conditional optimistic updates\r\n  // routerMiddleware(browserHistory), // !! IMPORTANT for location.href changes\r\n  logger, // A basic middleware logger\r\n];","function user(state={},action){\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            return {...action.user};\r\n            \r\n        case 'LOGOUT':\r\n            return {};\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default user;","function escapeRooms(state=[],action){\r\n    let i;\r\n    switch(action.type){\r\n        case 'ADD_ESCAPE_ROOM':\r\n            state.push(action.escapeRoom);\r\n            return state.slice();\r\n            \r\n        case 'REMOVE_ESCAPE_ROOM':\r\n            i = state.findIndex(escapeRoom => escapeRoom._id === action.escapeRoom._id);\r\n            return [...state.slice(0,i),...state.slice(i+1)];\r\n            \r\n        case 'UPDATE_ESCAPE_ROOM':\r\n            i = state.findIndex(escapeRoom=>escapeRoom._id === action.escapeRoom._id);\r\n            state[i] = action.escapeRoom;\r\n            return state.slice(); \r\n            \r\n        case 'UPDATE_ESCAPE_ROOMS':\r\n            return action.escapeRooms.slice();\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default escapeRooms;","import uniqid from 'uniqid';\r\n\r\nexport default class Component {\r\n    constructor(){\r\n        this._id = uniqid();\r\n        this.version = \"1\";\r\n        this.name = \"\";\r\n        this.description = \"\";\r\n        this.output = \"\";\r\n        this.inputComponents = [];\r\n        this.outputComponents = [];\r\n        this.type = \"Component\";\r\n        this.position = {top:0,left:0};\r\n        this.estimatedCost = \"\";\r\n        this.resources = [];\r\n    }\r\n}","import Component from './Component';\r\nexport default class Area extends Component {\r\n    constructor(){\r\n        super();\r\n        this.type=\"Area\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Puzzle extends Component {\r\n    constructor(){\r\n        super();\r\n        this.puzzle = {};\r\n        this.puzzleType=\"Cipher\";\r\n        this.type=\"Puzzle\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Prop extends Component {\r\n    constructor(){\r\n        super();\r\n        this.type=\"Prop\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Lock extends Component {\r\n    constructor(){\r\n        super();\r\n        this.lockType=\"Numeric\";\r\n        this.type=\"Lock\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Event extends Component {\r\n    constructor(){\r\n        super();\r\n        this.eventType=\"Sound Effect\";\r\n        this.type=\"Event\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Music extends Component {\r\n    constructor(){\r\n        super();\r\n        this.startTime=\"\";\r\n        this.endTime=\"\"\r\n        this.type=\"Music\";\r\n    }   \r\n}","import { Area } from \".\";\r\nexport default class EscapeRoom {\r\n    constructor(userId){\r\n        this.userId = userId;\r\n        this.details = {\r\n            name: \"Unnamed\",\r\n            designers: \"\",\r\n            theme: \"\",\r\n            minPlayers: \"\",\r\n            maxPlayers: \"\",\r\n            targetTime: \"\",\r\n            difficulty: \"3\",\r\n            objective: \"\",\r\n            description: \"\",\r\n            estimatedCost: \"\"\r\n        }\r\n        this.accessibility = {   \r\n            visual:{\r\n                protanomaly: false,\r\n                protanopia: false,\r\n                deuteranomaly: false,\r\n                deuteranopia: false,\r\n                tritanomaly: false,\r\n                tritanopia: false,\r\n                coneMonochromacy: false,\r\n                rodMonochromacy: false,\r\n                largeFonts: false,\r\n                highContrast: false\r\n            },\r\n            physical:{\r\n                wheelchairAccessible: false,\r\n                motorAccessible: false\r\n            } \r\n        }\r\n        this.components = [new Area()]\r\n    }  \r\n\r\n    static calculateCost(escapeRoom){\r\n        let components = escapeRoom.components;\r\n        let cost = 0;\r\n        for (let component of components){\r\n            let estimatedCost = component.estimatedCost;\r\n            if(!isNaN(parseFloat(estimatedCost))){\r\n                cost += parseFloat(estimatedCost);\r\n            } else if (!isNaN(parseFloat(estimatedCost))){\r\n                cost += parseInt(estimatedCost);\r\n            }\r\n        }\r\n        return cost;\r\n    }\r\n\r\n    static findComponent(escapeRoom,id){\r\n        return escapeRoom.components.find((component)=>{return component._id===id})\r\n    }\r\n\r\n    static calculateComponentOutput(escapeRoom,id){\r\n        let component = EscapeRoom.findComponent(escapeRoom,id);\r\n        if(component!=null){\r\n            let outputs = [];\r\n            for(let id of component.inputComponents){\r\n                let component = EscapeRoom.findComponent(escapeRoom,id);\r\n                outputs.push(component.output);\r\n            }\r\n            let string = outputs.find((output)=>parseFloat(output));\r\n            if(string!==null||string!==undefined){\r\n                return outputs.join(\" \");\r\n            } else {\r\n                if(outputs.length>1)\r\n                    return outputs.reduce((sum,output)=>parseFloat(sum)+parseFloat(output));\r\n                else \r\n                    return \"\";\r\n            }\r\n        }\r\n    }\r\n}","import EscapeRoom from '../models/EscapeRoom';\r\nfunction escapeRoom(state={},action){\r\n    let newState = {};\r\n    let i;\r\n    switch(action.type){\r\n        case 'SET_SELECTED_ESCAPE_ROOM':\r\n            return {...action.escapeRoom};\r\n        case 'CLEAR_SELECTED_ESCAPE_ROOM':\r\n            return {}\r\n        case 'UPDATE_DETAILS':\r\n            newState = {...state};\r\n            newState.details = {...newState.details, ...action.details};\r\n            return newState;\r\n        case 'UPDATE_ACCESSIBILITY':\r\n            newState = {...state};\r\n            newState.accessibility = {...newState.accessibility, ...action.accessibility};\r\n            return newState;\r\n        case 'ADD_COMPONENT':\r\n            newState = {...state};\r\n            newState.components.push(action.component);\r\n            if(action.areaId!==undefined){\r\n                i = newState.components.findIndex(component=>component._id===action.areaId);\r\n                newState.components[i].outputComponents.push(action.component._id);\r\n            }\r\n            newState.details.estimatedCost = EscapeRoom.calculateCost(newState);\r\n            return newState;\r\n        case 'REMOVE_COMPONENT':\r\n            newState = {...state};\r\n            i = newState.components.findIndex(component=>component._id===action.componentId);\r\n            newState.components = [...newState.components.slice(0,i),...newState.components.slice(i+1)]\r\n            newState.components.forEach((component,index,components)=>{\r\n                components[index].inputComponents = component.inputComponents.filter(inputId=>inputId!==action.componentId);\r\n                components[index].outputComponents = component.outputComponents.filter(outputId=>outputId!==action.componentId);\r\n            })\r\n            newState.details.estimatedCost = EscapeRoom.calculateCost(newState);\r\n            return newState;\r\n        case 'UPDATE_COMPONENT':\r\n            newState = {...state};\r\n            i = newState.components.findIndex(component=>component._id===action.component._id);\r\n            newState.components[i] = {...newState.components[i],...action.component};\r\n            if(action.areaId!=null){\r\n                newState.components.forEach((component,index,components)=>{\r\n                    if(component.type===\"Area\")\r\n                        components[index].outputComponents = component.outputComponents.filter(outputId=>outputId!==action.component._id);\r\n                });\r\n                i = newState.components.findIndex(component=>component._id===action.areaId);\r\n                if(newState.components[i].outputComponents.indexOf(action.component._id)===-1)\r\n                    newState.components[i].outputComponents.push(action.component._id);\r\n            }\r\n            newState.details.estimatedCost = EscapeRoom.calculateCost(newState);\r\n            return newState;\r\n        case 'ADD_RELATIONSHIP':\r\n            newState = {...state};\r\n            newState.components.forEach((component,index,components)=>{\r\n                if(component._id===action.parentId){\r\n                    if(action.isInput){\r\n                        if(component.inputComponents.indexOf(action.componentId)===-1)\r\n                            component.inputComponents.push(action.componentId);\r\n                    } else {\r\n                        if(component.outputComponents.indexOf(action.componentId)===-1)\r\n                            component.outputComponents.push(action.componentId);\r\n                    }\r\n                }\r\n            });\r\n            return newState;\r\n        case 'REMOVE_RELATIONSHIP':\r\n            newState = {...state};\r\n            newState.components.forEach((component,index,components)=>{\r\n                if(component._id===action.parentId){\r\n                    if(action.isInput){\r\n                        if(component.inputComponents.indexOf(action.componentId)===-1)\r\n                            component.inputComponents = component.inputComponents.filter(id=>id!==action.componentId);\r\n                    } else {\r\n                        if(component.outputComponents.indexOf(action.componentId)===-1)\r\n                            component.outputComponents = component.outputComponents.filter(id=>id!==action.componentId);\r\n                    }\r\n                }\r\n            });\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default escapeRoom;","class Modal {\r\n    constructor(header,body,confirmText,confirmCallback,cancelText,cancelCallback,isOpen=true){\r\n        this.header = header;\r\n        this.body = body;\r\n        this.confirm = {text:confirmText,action:confirmCallback}; //Converts callback to a string, because redux can't store funcs\r\n        this.cancel = {text:cancelText,action:cancelCallback};\r\n        this.isOpen = isOpen;\r\n    }\r\n}\r\n\r\nexport default Modal","import Modal from \"../models/Modal\";\r\n\r\nfunction modal(state=new Modal(\"\",\"\",\"\",()=>{},\"\",()=>{},false),action){\r\n    switch(action.type){\r\n        case 'SHOW_MODAL':\r\n            return {...action.modal,isOpen:true};\r\n        case 'HIDE_MODAL':\r\n            return new Modal(\"\",\"\",\"\",()=>{},\"\",()=>{},false)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default modal;","import { combineReducers } from 'redux';\r\nimport { routerReducer } from 'react-router-redux';\r\n\r\nimport user from './user';\r\nimport escapeRooms from './escapeRooms';\r\nimport escapeRoom from './escapeRoom';\r\nimport modal from './modal';\r\n\r\nexport default function(reduxifiedServices){\r\n    return combineReducers({\r\n        usersService: reduxifiedServices.users.reducer,\r\n        escapeRoomsService: reduxifiedServices['escape-rooms'].reducer,\r\n        routing: routerReducer,\r\n        user,\r\n        escapeRooms,\r\n        escapeRoom,\r\n        modal\r\n    })\r\n}\r\n","import React, {Component}  from 'react';\r\nimport { Container, Row, Col, Alert, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nclass Profile extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            edit: false,\r\n            errorMessage: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            _id: \"\"\r\n        };\r\n    }\r\n    //Handles login form submit event\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(this.props.updateUser)\r\n            this.props.updateUser({email:this.state.email,password:this.state.password});\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    //Handles error dismiss\r\n    handleDismiss = (event) => {\r\n        this.setState({errorMessage: \"\"});\r\n    }\r\n\r\n    handleClick = async (event) => {\r\n        event.preventDefault();\r\n        switch (event.target.id) {\r\n            case 'editButton':\r\n                this.setState({edit:true});\r\n                break;\r\n            case 'saveButton':\r\n                let user = this.props.user;\r\n                if(this.state.email===\"\"){\r\n                    this.setState({errorMessage:\"Email Required\"});\r\n                    return;\r\n                } else {\r\n                    user.email = this.state.email;\r\n                }\r\n                if(this.state.password!==\"\")\r\n                    user.password = this.state.password;\r\n                if(this.props.updateUser!==undefined){\r\n                    let response = await this.props.updateUser(user);\r\n                    if(response===true){\r\n                        this.setState({edit:false});\r\n                    } else {\r\n                        this.setState({errorMessage:\"Error, Please Try Again Later\"});\r\n                    }\r\n                }\r\n                    \r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const user = this.props.user;\r\n        this.setState({\r\n            email: user.email\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(oldProps){\r\n        const newProps = this.props;\r\n        if(oldProps.user.email !== newProps.user.email){\r\n            const user = this.props.user;\r\n            this.setState({\r\n                email: user.email,\r\n                _id: user._id\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.profile = \r\n            <Container fluid>\r\n                <Row>\r\n                    <Col>\r\n                        <img id=\"ProfileImage\" className=\"img-fluid\" src={this.props.user.avatar} alt=\"Profile\" />\r\n                        <p className=\"text-center\">{this.props.user.email}</p>\r\n                        <Button id=\"editButton\" block className=\"text-center\" onClick={this.handleClick}>Edit Profile</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        this.editProfile = \r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup>\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"password\">Password</Label>\r\n                            <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <Button id=\"saveButton\" onClick={this.handleClick} block>Save</Button>\r\n                        <Alert isOpen={this.state.errorMessage !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.errorMessage}</Alert>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        if(this.state.edit)\r\n            return this.editProfile;\r\n        else \r\n            return this.profile;\r\n    }\r\n};\r\n\r\nexport default Profile;","import jsPDF from 'jspdf';\r\n\r\nfunction escapeRoomToPDF(escapeRoom){\r\n    let doc = jsPDF();\r\n    doc.text(\"The Escape Room Generator\");\r\n    doc = convertObject(escapeRoom);\r\n    doc.save(escapeRoom.details.name+\".pdf\");\r\n}\r\n\r\nfunction convertObject(object,doc){\r\n    for(let key of Object.keys(object)){\r\n        if(key.contains('DATA')){\r\n            //Add Images from DATA url\r\n            doc.text(key+\": \");\r\n            doc.addImage(object[key],'JPEG');\r\n        }\r\n        else if(typeof object[key]===object){\r\n            doc.text(key);\r\n            doc = convertObject(object[key],doc);\r\n        }\r\n        else if(typeof object[key]===Array)\r\n            doc.text(key+\": \" + JSON.stringify(object[key]));\r\n        else \r\n            doc.text(key+\": \"+object[key]);\r\n    }\r\n    return doc;\r\n}\r\n\r\nexport {escapeRoomToPDF};\r\n","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Dropdown, DropdownToggle, DropdownMenu, DropdownItem , ListGroup, ListGroupItem , Button } from 'reactstrap';\r\nimport { saveAs } from 'file-saver';\r\nimport Modal from '../models/Modal';\r\nimport {escapeRoomToPDF} from '../pdf/pdf';\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: [false,false]\r\n        }\r\n    }\r\n    handleToggle = (i) => (e) => {\r\n        var dropdownOpen = this.state.dropdownOpen;\r\n        dropdownOpen[i] = !dropdownOpen[i];\r\n        this.setState({dropdownOpen});\r\n    }\r\n    handleClick = async (e) => {\r\n        if(this.props.newEscapeRoom)\r\n            this.props.newEscapeRoom();\r\n    }\r\n    saveJSON(escapeRoom) {\r\n        const blob = new Blob([JSON.stringify(escapeRoom)],{type:'text/plain;charset=utf-8'});\r\n        saveAs(blob, escapeRoom.details.name+\".json\");\r\n    }\r\n    savePDF(escapeRoom) {\r\n        escapeRoomToPDF(escapeRoom);\r\n    }\r\n    handleItemClick = (i, action) => (e) => {\r\n        const escapeRoom = this.props.escapeRooms[i];\r\n        switch(action){\r\n            case 'EDIT':\r\n                if(this.props.editEscapeRoom)   \r\n                    this.props.editEscapeRoom(escapeRoom);\r\n                break;\r\n            case 'JSON':\r\n                this.saveJSON(escapeRoom);\r\n                break;\r\n            case 'PDF':\r\n                this.savePDF(escapeRoom);\r\n                break;\r\n            case 'DELETE':\r\n                if(this.props.deleteEscapeRoom)\r\n                    this.props.showModal(new Modal(\"Warning\",\"Are you sure you want to delete \"+escapeRoom.details.name+\"?\",\"Yes\",()=>{this.props.deleteEscapeRoom(escapeRoom)},\"No\",()=>{}));\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    mapEscapeRoomToList = (escapeRoom,i) => {\r\n        return (\r\n        <ListGroupItem key={i}>{escapeRoom.details.name}\r\n            <Dropdown style={{display:'inline', position: 'absolute', right:'20px'}} isOpen={this.state.dropdownOpen[i]} toggle={this.handleToggle(i)}>\r\n                <DropdownToggle caret/>\r\n                <DropdownMenu right>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'EDIT')} disabled={this.props.escapeRooms[i].components[0].version===undefined?false:true}>Edit</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'JSON')}>Export as JSON</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'PDF')}>Export as PDF</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'DELETE')}>Delete</DropdownItem>\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        </ListGroupItem>)\r\n    };\r\n    render() {\r\n        const escapeRooms = this.props.escapeRooms;\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Button block onClick={this.handleClick}>NEW</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <ListGroup>\r\n                            {escapeRooms.map(this.mapEscapeRoomToList)}\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Dashboard;","import React, {Component}  from 'react';\r\nimport { Container, Dropdown, DropdownToggle , DropdownMenu , DropdownItem , Row, Col, Nav, NavItem, NavLink, TabContent, TabPane , Button } from 'reactstrap';\r\nimport { Details, Accessibility, Design } from './index';\r\nimport classnames from 'classnames';\r\nimport { saveAs } from 'file-saver';\r\nimport {escapeRoomToPDF} from '../pdf/pdf';\r\nimport EscapeRoom from '../models/EscapeRoom';\r\nimport '../styles/EscapeRoomDesigner.css';\r\n\r\nclass EscapeRoomDesigner extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {activeTab:'design', dropdownOpen: false};\r\n    }\r\n    saveJSON(escapeRoom) {\r\n        const blob = new Blob([JSON.stringify(escapeRoom)],{type:'text/plain;charset=utf-8'});\r\n        saveAs(blob, escapeRoom.details.name+\".json\");\r\n    }\r\n    savePDF(escapeRoom) {\r\n        escapeRoomToPDF(escapeRoom);\r\n    }\r\n    handleClick = (action) => (e) => {\r\n        switch(action){\r\n            case 'EXIT':\r\n                if(this.props.saveEscapeRoom)\r\n                    this.props.saveEscapeRoom(this.props.escapeRoom);\r\n                break;\r\n            case 'JSON':\r\n                if(this.props.saveEscapeRoom)\r\n                    this.props.saveEscapeRoom(this.props.escapeRoom);\r\n                this.saveJSON(this.props.escapeRoom);\r\n                break;\r\n            case 'PDF':\r\n                if(this.props.saveEscapeRoom)\r\n                    this.props.saveEscapeRoom(this.props.escapeRoom);\r\n                this.savePDF(this.props.escapeRoom);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    handleToggle = (e) => {\r\n        this.setState({dropdownOpen: !this.state.dropdownOpen});\r\n    }\r\n    handleNav = (tab) => (e) => {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const escapeRoom = this.props.escapeRoom;\r\n        if(escapeRoom===undefined){\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps,prevState){\r\n        if(prevState.activeTab!==this.state.activeTab){\r\n            this.toggleSvgs();\r\n        }\r\n    }\r\n    toggleSvgs=()=>{\r\n        let lines = document.querySelectorAll(\"body > div:not(#root)\");\r\n        if(this.state.activeTab!==\"design\"){\r\n            for (let i = 0; i < lines.length;i++){\r\n                lines[i].style.display = 'none';\r\n            }\r\n        } else {\r\n            for (let i = 0; i < lines.length;i++){\r\n                lines[i].style.display = 'block';\r\n            }\r\n        }\r\n    }\r\n    calculateOutput=(id)=>{\r\n        return EscapeRoom.calculateComponentOutput(this.props.escapeRoom,id);\r\n    }\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Row className=\"save-options\">\r\n                    <Col xs=\"6\" md=\"3\" lg=\"3\"><Button block onClick={this.handleClick('EXIT')}>Save and Exit</Button></Col>\r\n                    <Col xs=\"6\" md=\"3\" lg=\"3\">\r\n                        <Dropdown block isOpen={this.state.dropdownOpen} toggle={this.handleToggle}>\r\n                            <DropdownToggle  className=\"full-width\" caret>Save and Export</DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem onClick={this.handleClick('JSON')}>Export as JSON</DropdownItem>\r\n                                <DropdownItem onClick={this.handleClick('PDF')}>Export as PDF</DropdownItem>\r\n                            </DropdownMenu>\r\n                        </Dropdown>\r\n                    </Col>\r\n                    <Col xs=\"6\"/>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Nav tabs>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'details'})}\r\n                                    onClick={this.handleNav('details')}    \r\n                                >\r\n                                    Details\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'accessibility'})}\r\n                                    onClick={this.handleNav('accessibility')}    \r\n                                >\r\n                                    Accessibility\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'design'})}\r\n                                    onClick={this.handleNav('design')}    \r\n                                >\r\n                                    Design\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <TabContent activeTab={this.state.activeTab}>\r\n                            <TabPane tabId=\"details\">\r\n                                <Details details={this.props.escapeRoom.details} updateDetails={this.props.updateDetails}/>\r\n                            </TabPane>\r\n                            <TabPane tabId=\"accessibility\">\r\n                                <Accessibility accessibility={this.props.escapeRoom.accessibility} updateAccessibility={this.props.updateAccessibility}/>\r\n                            </TabPane>\r\n                            <TabPane tabId=\"design\">\r\n                                <Design calculateOutput={this.calculateOutput} components={{components:this.props.escapeRoom.components}} showModal={this.props.showModal} accessibility={this.props.escapeRoom.accessibility} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} updateComponent={this.props.updateComponent} addRelationship={this.props.addRelationship} removeRelationship={this.props.removeRelationship}/>\r\n                            </TabPane>\r\n                        </TabContent>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default EscapeRoomDesigner;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Form, FormGroup, Label, Input, UncontrolledTooltip} from 'reactstrap';\r\n\r\nclass Details extends Component {\r\n    //Changes state on input change\r\n    handleChange = (event) => { \r\n        var state = {};\r\n        state[event.target.id] = event.target.value;    \r\n        this.props.updateDetails(state);\r\n    }\r\n    render(){\r\n        return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Room Name <span id=\"nameTooltip\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></span></Label>\r\n                            <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Room Name\" value={this.props.details.name} onChange={this.handleChange}/>\r\n                            <UncontrolledTooltip target=\"nameTooltip\">The name of your design</UncontrolledTooltip>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"designers\">Designers <span id=\"designersTooltip\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></span></Label>\r\n                            <Input type=\"text\" name=\"designers\" id=\"designers\" placeholder=\"Designer(s)\" value={this.props.details.designers} onChange={this.handleChange}/>\r\n                            <UncontrolledTooltip target=\"designersTooltip\">Names of the designers</UncontrolledTooltip>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"theme\">Theme <span id=\"themeTooltip\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></span></Label>\r\n                            <Input type=\"text\" name=\"theme\" id=\"theme\" placeholder=\"theme\" value={this.props.details.theme} onChange={this.handleChange}/>\r\n                            <UncontrolledTooltip target=\"themeTooltip\">The theme of the room: Noir, Medieval, Heist ect.</UncontrolledTooltip>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label>Players <span id=\"playersTooltip\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></span></Label>\r\n                            <Input type=\"text\" name=\"minPlayers\" id=\"minPlayers\" placeholder=\"Min\" value={this.props.details.minPlayers} onChange={this.handleChange}/>\r\n                            <Input type=\"text\" name=\"maxPlayers\" id=\"maxPlayers\" placeholder=\"Max\" value={this.props.details.maxPlayers} onChange={this.handleChange}/>\r\n                            <UncontrolledTooltip target=\"playersTooltip\">The maximum and minimum amount of players your room is designed for</UncontrolledTooltip>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"targetTime\">Target Time <span id=\"targetTimeTooltip\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></span></Label>\r\n                            <Input type=\"text\" name=\"targetTime\" id=\"targetTime\" placeholder=\"Time\" value={this.props.details.targetTime} onChange={this.handleChange}/>\r\n                            <UncontrolledTooltip target=\"targetTimeTooltip\">Can be the time players have to try and escape by, or the estimated time it will take players to complete the room</UncontrolledTooltip>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"difficulty\">Difficulty <span id=\"difficultyTooltip\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></span></Label>\r\n                            <Input type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" id=\"difficulty\" value={this.props.details.difficulty} onChange={this.handleChange}/>\r\n                            <UncontrolledTooltip target=\"difficultyTooltip\">How difficult the room is rated out of 5. It is up to the designer to gauge difficulty</UncontrolledTooltip>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </Col>\r\n                <Col>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"objective\">Objective <span id=\"objectiveTooltip\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></span></Label>\r\n                            <Input type=\"text\" name=\"objective\" id=\"objective\" placeholder=\"Main Objective\" value={this.props.details.objective} onChange={this.handleChange}/>\r\n                            <UncontrolledTooltip target=\"objectiveTooltip\">The objective of the room, for example: retrieve the diamond, foil the mad scientists evil plans ect.</UncontrolledTooltip>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"description\">Description <span id=\"descriptionTooltip\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></span></Label>\r\n                            <Input type=\"textarea\" name=\"description\" id=\"description\" placeholder=\"Description\" value={this.props.details.description} onChange={this.handleChange}/>\r\n                            <UncontrolledTooltip target=\"descriptionTooltip\">A descriptive paragraph of the room, you can define the overall story here or any extra details that may be needed to set it up</UncontrolledTooltip>\r\n                        </FormGroup>       \r\n                        <FormGroup>\r\n                            <Label for=\"estimatedCost\">Estimated Cost <span id=\"estimatedCostTooltip\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></span></Label>\r\n                            <p>{this.props.details.estimatedCost}</p>    \r\n                            <UncontrolledTooltip target=\"estimatedCostTooltip\">When you set estimated cost values on components in the design they will be totalled up and the total will be displayed here</UncontrolledTooltip>\r\n                        </FormGroup>             \r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>)\r\n    }\r\n}\r\n\r\nexport default Details;","import React, {Component} from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Pallet, ComponentArranger, ComponentDetails } from './index';\r\n\r\nclass Design extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {selected: {}};\r\n    }\r\n    handleComponentClick = (component) => (e) => {\r\n        e.stopPropagation();\r\n        this.setState({selected:component});\r\n    }\r\n    updateComponent = (component) => {\r\n        this.props.updateComponent(component);\r\n        this.setState({selected:{...this.state.selected,...component}});\r\n    }\r\n    findComponent = (id) => {\r\n        return this.props.components.components.find(component=>component._id===id);\r\n    }\r\n    render(){\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md=\"2\">\r\n                        <Pallet/>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                        <ComponentArranger renderTrigger={JSON.stringify(this.props.components.components)} findComponent={this.findComponent} showModal={this.props.showModal} handleComponentClick={this.handleComponentClick} updateComponent={this.props.updateComponent} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship} components={this.props.components.components}/>            \r\n                    </Col>\r\n                    <Col md=\"2\">\r\n                        <ComponentDetails calculateOutput={this.props.calculateOutput} accessibility={this.props.accessibility} selected={this.state.selected} updateComponent={this.updateComponent}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Design;","import React, {Component}  from 'react';\r\nimport { Card, CardBody, UncontrolledTooltip } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport { DropTarget } from 'react-dnd';\r\nimport { Puzzle, Event, Music, Lock, Prop } from '../models/index';\r\n\r\nconst Types = {\r\n    COMPONENT: 'COMPONENT'\r\n}\r\n\r\nconst componentTarget = {\r\n    drop(props,monitor,component){\r\n        if (monitor.didDrop()){\r\n            return;\r\n        }\r\n        const item = monitor.getItem();\r\n        const isInput = props.isInput;\r\n        component.handleComponentDrop(item,isInput);\r\n        return {moved:true};\r\n    }\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        isOverCurrent: monitor.isOver({shallow:true}),\r\n        canDrop: monitor.canDrop(),\r\n        itemType: monitor.getItemType()\r\n    }\r\n}\r\n\r\nclass ComponentDnDTarget extends Component {\r\n    handleComponentDrop(item,isInput=true){\r\n        var component = null;\r\n        if (item.id!==undefined){\r\n            switch(item.id){\r\n                case 'Puzzle':\r\n                    component = new Puzzle();\r\n                    break;\r\n                case 'Lock':\r\n                    component = new Lock();\r\n                    break;\r\n                case 'Event':\r\n                    component = new Event();\r\n                    break;\r\n                case 'Music':\r\n                    component = new Music();\r\n                    break;\r\n                case 'Prop':\r\n                    component = new Prop();\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            this.props.addComponent(component,this.props.component._id);\r\n        }else {\r\n            component = item;\r\n            if(component._id!==this.props.component._id)\r\n                this.props.addRelationship(component._id,this.props.component._id,isInput);\r\n        }\r\n\r\n    }\r\n    render() {\r\n        let id=this.props.component._id;\r\n        var classNames = \"hide-border\";\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames+=\" canDrop\";\r\n        } else if(this.props.isOver && !this.props.canDrop){\r\n            classNames+=\" cantDrop\";\r\n        } else if(this.props.canDrop){\r\n            classNames+=\" couldDrop\";\r\n        }\r\n        let tooltip;\r\n        if(this.props.isInput){\r\n            id+=\"-input\"\r\n            classNames+=\" isInput\";\r\n            tooltip = \"Drag another component to this blue square to add it as an input to this component\"\r\n        }\r\n        else {\r\n            id+=\"-output\"\r\n            classNames+=\" isOutput\";\r\n            tooltip = \"Drag another component to this green square to add it as an output of this component\"\r\n        }\r\n        return this.props.connectDropTarget(\r\n            <div key={this.props.component._id} id={id}>\r\n                <Card className={classNames} onClick={this.props.handleComponentClick(this.props.component)}>\r\n                    <CardBody>\r\n\r\n                    </CardBody>\r\n                </Card>\r\n                <UncontrolledTooltip target={id}>{tooltip}</UncontrolledTooltip>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DropTarget(Types.COMPONENT, componentTarget, collect)(ComponentDnDTarget);","import React, {Component} from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport ComponentDnDTarget from './ComponentDnDTarget';\r\nimport { Row, Col } from 'reactstrap'\r\nimport '../styles/Component.css';\r\nimport Modal from '../models/Modal';\r\n\r\n// Drag sources and drop targets only interact\r\n// if they have the same string type.\r\n// You want to keep types in a separate file with\r\n// the rest of your app's constants.\r\nconst Types = {\r\n  COMPONENT: 'COMPONENT'\r\n};\r\n\r\n/**\r\n * Specifies the drag source contract.\r\n * Only `beginDrag` function is required.\r\n */\r\nconst componentSource = {\r\n  canDrag(props) {\r\n    // You can disallow drag based on props\r\n    return true;\r\n  },\r\n\r\n  isDragging(props, monitor) {\r\n    return monitor.getItem().id === props.id;\r\n  },\r\n\r\n  beginDrag(props, monitor, component) {\r\n    // Return the data describing the dragged item\r\n    var item = {...props.component};\r\n    return item;\r\n  },\r\n\r\n  endDrag(props, monitor, component) {\r\n    if (!monitor.didDrop()) {\r\n      if((props.component!==undefined||props.component!==null)&&props.showModal)\r\n        props.showModal(new Modal(\"Warning\", \"Are you sure you want to delete this component?\",\"Yes\",component.removeComponent,\"No\",()=>{}));\r\n        return;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    // Call this function inside render()\r\n    // to let React DnD handle the drag events:\r\n    connectDragSource: connect.dragSource(),\r\n    // You can ask the monitor about the current drag state:\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nclass ComponentDnDSource extends Component{\r\n  removeComponent = ()=>{\r\n    this.props.removeComponent(this.props.component._id);\r\n  }\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.renderTrigger!==prevProps.renderTrigger)\r\n      this.forceUpdate();\r\n  }\r\n  findComponent(component){\r\n    if(this.props.findComponent!==undefined){\r\n      return this.props.findComponent(component);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  update = () => this.forceUpdate()\r\n  componentDidMount() {\r\n    window.addEventListener('click', this.update, true);\r\n    window.addEventListener('scroll', this.update, true);\r\n    window.addEventListener('resize', this.update);\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    window.removeEventListener('click', this.update);\r\n    window.removeEventListener('scroll', this.update);\r\n    window.removeEventListener('resize', this.update)\r\n  }\r\n  render() {\r\n      var target;\r\n      if (this.props.isTarget){\r\n        target = (\r\n            <Row>\r\n                <Col xs=\"6\"><ComponentDnDTarget isInput={true} component={this.props.component} handleComponentClick={this.props.handleComponentClick} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/></Col>\r\n                <Col xs=\"6\"><ComponentDnDTarget isInput={false} component={this.props.component} handleComponentClick={this.props.handleComponentClick} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/></Col>\r\n            </Row>\r\n        );\r\n      }\r\n      var style = {};\r\n      let classNames = \"component container-fluid\";\r\n      if(this.props.component!==undefined){\r\n        style.top = this.props.component.position.top;\r\n        style.left = this.props.component.position.left;\r\n        classNames += \" \" + this.props.component.type + \" \" + this.props.component._id;\r\n      } \r\n      return this.props.connectDragSource(\r\n          <div className={classNames} id={this.props.component._id} style={style} onClick={this.props.handleComponentClick(this.props.component)}>\r\n            <Row>\r\n              <Col>\r\n                <p>{this.props.component.type}</p>\r\n                <p>{this.props.component._id}</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n              <p>{this.props.component.name}</p>\r\n              </Col>\r\n            </Row>\r\n            {target}\r\n          </div>\r\n      )\r\n  }\r\n};\r\n\r\nexport default DragSource(Types.COMPONENT, componentSource, collect)(ComponentDnDSource);","import React, {Component}  from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Card, CardBody ,CardTitle } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport { DropTarget } from 'react-dnd';\r\nimport ComponentDnDSource from './ComponentDnDSource';\r\nimport { Puzzle, Prop, Lock, Music, Event } from '../models/index.js';\r\n\r\nconst Types = {\r\n    COMPONENT: 'COMPONENT'\r\n}\r\n\r\nconst componentTarget = {\r\n    drop(props,monitor,component){\r\n        if (monitor.didDrop() || !component || typeof props.component===undefined){\r\n            return;\r\n        }\r\n        const item = monitor.getItem();\r\n        let clientOffset = monitor.getClientOffset();\r\n        let targetRect = ReactDOM.findDOMNode(component).getBoundingClientRect();\r\n        item.position = {top:(((clientOffset.y-targetRect.y)/targetRect.height)*100)+\"%\",left:(((clientOffset.x-targetRect.x)/targetRect.width)*100)+\"%\"};\r\n        component.handleComponentDrop(item);\r\n        return {moved:true};\r\n    }\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        isOverCurrent: monitor.isOver(),\r\n        canDrop: monitor.canDrop(),\r\n        itemType: monitor.getItemType()\r\n    }\r\n}\r\n\r\nclass AreaDnDTarget extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={render:true,screenWidth:0,screenHeight:0};\r\n    }\r\n    updateScreenSize=()=>{\r\n        this.setState({screenWidth:window.innerHeight,screenHeight:window.innerHeight})\r\n    }\r\n    handleComponentDrop(item,isInput=false){\r\n        var component = null;\r\n        if (item.id!==undefined && item._id === undefined){\r\n            switch(item.id){\r\n                case 'Puzzle':\r\n                    component = new Puzzle();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Prop':\r\n                    component = new Prop();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Lock':\r\n                    component = new Lock();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Event':\r\n                    component = new Event();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Music':\r\n                    component = new Music();\r\n                    component.position = item.position;\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            this.props.addComponent(component,this.props.component._id);\r\n        } else {\r\n            component = item;\r\n            this.props.updateComponent(component,this.props.component._id);\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.updateScreenSize();\r\n        window.addEventListener('resize', this.updateScreenSize);\r\n    }\r\n    componentWillUnmount(){\r\n        window.removeEventListener('resize',this.updateScreenSize);\r\n    }\r\n    render() {\r\n        var classNames = \"Area\";\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames+=\" canDrop\";\r\n        } else if(this.props.isOver && !this.props.canDrop){\r\n            classNames+=\" cantDrop\";\r\n        } else if(this.props.canDrop){\r\n            classNames+=\" couldDrop\"\r\n        }\r\n        let title = this.props.component.type + \" (\" + this.props.component._id + \") \" + this.props.component.name;\r\n        return this.props.connectDropTarget(\r\n            <div className={this.props.component.type} key={this.props.component._id}>                \r\n                <Card className={classNames} onClick={this.props.handleComponentClick(this.props.component)}>\r\n                    <CardBody>\r\n                        <CardTitle>{title}</CardTitle>  \r\n                            {this.props.outputComponents.map((origComponent,i)=>{\r\n                                let component;\r\n                                component = this.props.findComponent(origComponent._id);\r\n                                return(<ComponentDnDSource addRef={this.props.addRef} key={i} renderTrigger={JSON.stringify(this.props.outputComponents)} isTarget handleComponentClick={this.props.handleComponentClick}  component={component} findComponent={this.props.findComponent} id={component.type} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/>)\r\n                            })}\r\n                    </CardBody>\r\n                </Card>   \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DropTarget(Types.COMPONENT, componentTarget, collect)(AreaDnDTarget);","import React, {Component} from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport AreaDnDTarget from './AreaDnDTarget';\r\nimport '../styles/Component.css';\r\nimport { Card } from 'reactstrap';\r\nimport Modal from '../models/Modal';\r\n\r\n// Drag sources and drop targets only interact\r\n// if they have the same string type.\r\n// You want to keep types in a separate file with\r\n// the rest of your app's constants.\r\nconst Types = {\r\n  AREA: 'AREA'\r\n};\r\n\r\n/**\r\n * Specifies the drag source contract.\r\n * Only `beginDrag` function is required.\r\n */\r\nconst areaSource = {\r\n  canDrag(props) {\r\n    // You can disallow drag based on props\r\n    return true;\r\n  },\r\n\r\n  isDragging(props, monitor) {\r\n    // If your component gets unmounted while dragged\r\n    // (like a card in Kanban board dragged between lists)\r\n    // you can implement something like this to keep its\r\n    // appearance dragged:\r\n    return monitor.getItem().id === props.id;\r\n  },\r\n\r\n  beginDrag(props, monitor, component) {\r\n    // Return the data describing the dragged item\r\n    var item = null;\r\n    if (props.id!==undefined){\r\n       item = { id: props.id };\r\n    } else {\r\n       item = { component: props.component };\r\n    }\r\n    return item;\r\n  },\r\n\r\n  endDrag(props, monitor, component) {\r\n    if (!monitor.didDrop() && component!=null) {\r\n      props.showModal(new Modal(\"Warning\", \"Are you sure you want to delete this component?\",\"Yes\",component.removeComponent,\"No\",()=>{}));\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    // Call this function inside render()\r\n    // to let React DnD handle the drag events:\r\n    connectDragSource: connect.dragSource(),\r\n    // You can ask the monitor about the current drag state:\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nclass AreaDnDSource extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state={render:true};\r\n  }\r\n  removeComponent = ()=>{\r\n    this.props.removeComponent(this.props.component._id);\r\n  }\r\n  addComponent = (component,parentId)=>{\r\n    this.props.addComponent(component,this.props.component._id);\r\n    this.props.addRelationship(component._id,parentId);\r\n  }  \r\n  componentDidUpdate(prevProps){\r\n    if(this.props.renderTrigger!==prevProps.renderTrigger)\r\n      this.forceUpdate();\r\n  }\r\n  render() {\r\n    var target;\r\n    if (this.props.isTarget){\r\n      target = (\r\n        <AreaDnDTarget renderTrigger={JSON.stringify(this.props.component)} addRef={this.props.addRef} findComponent={this.props.findComponent} handleComponentClick={this.props.handleComponentClick} outputComponents={this.props.outputComponents} component={this.props.component} showModal={this.props.showModal} addComponent={this.addComponent} updateComponent={this.props.updateComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/>\r\n      );\r\n    }\r\n    let classNames;\r\n    if(this.props.palletItem)\r\n      classNames += \" pallet-item\";\r\n    return this.props.connectDragSource(\r\n        <div onClick={this.props.handleComponentClick(this.props.component)}>\r\n          <Card className={classNames}>\r\n            {this.props.id}\r\n            {target}\r\n          </Card>\r\n        </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default DragSource(Types.AREA, areaSource, collect)(AreaDnDSource);","import React, {Component} from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport '../styles/Component.css';\r\n\r\n// Drag sources and drop targets only interact\r\n// if they have the same string type.\r\n// You want to keep types in a separate file with\r\n// the rest of your app's constants.\r\nconst Types = {\r\n  COMPONENT: 'COMPONENT'\r\n};\r\n\r\n/**\r\n * Specifies the drag source contract.\r\n * Only `beginDrag` function is required.\r\n */\r\nconst componentSource = {\r\n  beginDrag(props, monitor, component) {\r\n    // Return the data describing the dragged item\r\n    var item = {id: props.id}\r\n    return item;\r\n  }\r\n};\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    // Call this function inside render()\r\n    // to let React DnD handle the drag events:\r\n    connectDragSource: connect.dragSource(),\r\n    // You can ask the monitor about the current drag state:\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nclass PalletItem extends Component{\r\n  render() {\r\n      let id=this.props.id || \"\";\r\n      let classNames = id + \" component pallet-item\"\r\n      return this.props.connectDragSource(\r\n          <div className={classNames} id={id} >\r\n            <span>{id}</span>\r\n          </div>\r\n      )\r\n  }\r\n};\r\n\r\nexport default DragSource(Types.COMPONENT, componentSource, collect)(PalletItem);","import React, {Component}  from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport AreaDnD from './AreaDnDSource';\r\nimport PalletItem from './PalletItem';\r\nimport '../styles/Pallet.css';\r\n\r\nclass Pallet extends Component {\r\n    handleComponentClick = (e) => {\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid pallet\">\r\n                <Row>\r\n                    <Col className=\"col text-center\">\r\n                        <h3>Pallet</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs=\"6\" md=\"12\" lg=\"12\">\r\n                        <AreaDnD palletItem={true} id=\"Area\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"6\" md=\"12\" lg=\"12\">\r\n                        <PalletItem id=\"Puzzle\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"6\" md=\"12\" lg=\"12\">\r\n                        <PalletItem id=\"Prop\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"6\" md=\"12\" lg=\"12\">\r\n                        <PalletItem id=\"Lock\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"6\" md=\"12\" lg=\"12\">\r\n                        <PalletItem id=\"Event\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"6\" md=\"12\" lg=\"12\">\r\n                        <PalletItem id=\"Music\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Pallet;","import React, {Component}  from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport '../styles/ComponentArranger.css';\r\nimport Area from './AreaDnDSource';\r\nimport AreaModel from '../models/Area';\r\nimport { DropTarget } from 'react-dnd';\r\nimport LineTo from 'react-lineto';\r\n\r\nconst Types = {\r\n    AREA: 'AREA'\r\n}\r\n\r\nconst areaArrangerTarget = {\r\n    drop(props, monitor, component){\r\n        const item = monitor.getItem();\r\n        if(item.component===undefined || item.component===null){\r\n            component.props.addComponent(new AreaModel());\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n    return {\r\n      // Call this function inside render()\r\n      // to let React DnD handle the drag events:\r\n      connectDropTarget: connect.dropTarget(),\r\n      // You can ask the monitor about the current drag state:\r\n      isOver: monitor.isOver(),\r\n      isOverCurrent: monitor.isOver({ shallow: true }),\r\n      canDrop: monitor.canDrop(),\r\n      itemType: monitor.getItemType()\r\n    };\r\n  }\r\n\r\nclass ComponentArranger extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {refs:[]}\r\n    }\r\n    mapAreas = (area,i)=>{\r\n        if(area.type==='Area'){\r\n            let outputComponents = this.props.components.filter((component)=>{\r\n                return area.outputComponents.includes(component._id);\r\n            });\r\n            return (\r\n                <Row>\r\n                    <Col key={area._id} xs=\"12\"> \r\n                        <Area renderTrigger={JSON.stringify(area)} addRef={this.addRef} isTarget findComponent={this.props.findComponent} handleComponentClick={this.props.handleComponentClick} component={area} outputComponents={outputComponents} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} updateComponent={this.props.updateComponent} addRelationship={this.props.addRelationship}/>\r\n                    </Col>\r\n                </Row>\r\n            )  \r\n        }\r\n    }\r\n    addRef = (ref)=>{\r\n        if(ref!==undefined){\r\n            this.setState({refs:[...this.state.refs,ref]});\r\n        }\r\n    }\r\n    componentDidUpdate(props,state) {\r\n        if(JSON.stringify(this.props.components)!==JSON.stringify(props.components)){\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n    update = () => this.forceUpdate()\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.update, true);\r\n        window.addEventListener('resize', this.update);\r\n    }\r\n      \r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.update);\r\n        window.removeEventListener('resize', this.update)\r\n    }\r\n\r\n    render() {\r\n        var classNames = \"row component-arranger\";\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames+=\" canDrop\"\r\n        } else if (this.props.isOver){\r\n            classNames+=\" cantDrop\"\r\n        }\r\n        let lines = [];\r\n        this.props.components.forEach((component,index,array)=>{\r\n            if(component!==undefined && component.inputComponents!==undefined && component.type!==\"Area\"){\r\n                let inputComponents = component.inputComponents;\r\n                let outputComponents = component.outputComponents;\r\n                inputComponents.forEach((inputComponent,index,array)=>{\r\n                    inputComponent = this.props.findComponent(inputComponent);\r\n                    lines.push(<LineTo key={index} from={component._id} to={inputComponent._id} borderColor={\"#007bff\"}/>);\r\n                });\r\n                outputComponents.forEach((outputComponent,index,array)=>{\r\n                    outputComponent = this.props.findComponent(outputComponent);\r\n                    lines.push(<LineTo key={index} from={component._id} to={outputComponent._id} borderColor={\"#28a745\"}/>)\r\n                });\r\n            }\r\n        });\r\n        return this.props.connectDropTarget(\r\n            <div className={classNames}>\r\n                {lines}\r\n                    <Col xs=\"12\">\r\n                        <Row>\r\n                            <Col className=\"col text-center\">\r\n                                <h3>Components</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                {this.props.components.map(this.mapAreas)}\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DropTarget(Types.AREA, areaArrangerTarget,collect)(ComponentArranger);","import React, {Component}  from 'react';\r\nimport { Container, Row, Col, Input, Label, UncontrolledTooltip, ListGroupItem, Button, ListGroup } from 'reactstrap';\r\nimport {LockGenerator,PuzzleGenerator} from './index';\r\nimport '../styles/ComponentDetails.css';\r\n\r\nclass ComponentDetails extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={visualWarning:false,physicalWarning:false}\r\n    }\r\n    toggle = (event)=>{\r\n        this.setState({[event.target.id]:!this.state[event.target.id]});\r\n    }\r\n    convertCamelCase(string){\r\n        return string.replace(/([A-Z])/g, ' $1').replace(/^./,(str)=>{ return str.toUpperCase(); })\r\n    }\r\n    //Changes state on input change\r\n    handleChange = (event) => { \r\n        let state = {};\r\n        state[event.target.id] = event.target.value;  \r\n        if(event.target.id===\"puzzleType\")\r\n            state.puzzle = {}\r\n        if(event.target.id===\"lockType\")\r\n            state.output = \"\"\r\n        state._id = this.props.selected._id;  \r\n        this.props.updateComponent(state);\r\n    }\r\n    handleOutputChange = (output)=>{\r\n        this.props.updateComponent({output});\r\n    }\r\n    handlePuzzleChange = (puzzle)=>{\r\n        if(puzzle.output===undefined){\r\n            puzzle.output = \"\";\r\n        } \r\n        this.props.updateComponent({_id:this.props.selected._id,puzzle,output:puzzle.output});\r\n        this.forceUpdate();\r\n    }\r\n    generateFromInputs=()=>{\r\n        this.props.updateComponent({_id:this.props.selected._id,output:this.props.calculateOutput(this.props.selected._id)})\r\n    }\r\n    mapDetailToInput = (key,i) => {\r\n        if(key==='output') {\r\n            let generator;\r\n            if(this.props.selected.type==='Lock')\r\n                generator = <LockGenerator lockType={this.props.selected.lockType} handleOutputChange={this.handleOutputChange}></LockGenerator>\r\n            else if(this.props.selected.type==='Puzzle') {\r\n                generator = <PuzzleGenerator puzzleType={this.props.selected.puzzleType} handlePuzzleChange={this.handlePuzzleChange}></PuzzleGenerator>\r\n            }\r\n            return (<Row key={i}>\r\n                <Col>\r\n                    <Label for={key}>{this.convertCamelCase(key)}</Label>\r\n                    <Input type=\"text\" name={key} id={key} placeholder={this.convertCamelCase(key)} value={this.props.selected[key]} onChange={this.handleChange}/>\r\n                    <Button block color=\"primary\" onClick={this.generateFromInputs}>Generate From Inputs</Button>\r\n                    <br/>\r\n                    {generator}\r\n                    <br/>\r\n                </Col>\r\n            </Row>)\r\n        } else if (key==='lockType'){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{this.convertCamelCase(key)}</Label>\r\n                        <Input type=\"select\" name={key} id={key} placeholder={this.convertCamelCase(key)} value={this.props.selected[key]} onChange={this.handleChange}>\r\n                            <option>Numeric</option>\r\n                            <option>Word</option>\r\n                            <option>Directional</option>\r\n                            <option>Contactless</option>\r\n                            <option>Key</option>\r\n                        </Input>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        } else if (key==='eventType'){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{this.convertCamelCase(key)}</Label>\r\n                        <Input type=\"select\" name={key} id={key} placeholder={this.convertCamelCase(key)} value={this.props.selected[key]} onChange={this.handleChange}>\r\n                            <option>Sound Effect</option>\r\n                            <option>New Area</option>\r\n                            <option>Objective Complete</option>\r\n                            <option>Custom</option>\r\n                        </Input>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        } else if (key==='puzzleType'){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{this.convertCamelCase(key)}</Label>\r\n                        <Input type=\"select\" name={key} id={key} placeholder={this.convertCamelCase(key)} value={this.props.selected[key]} onChange={this.handleChange}>\r\n                            <option>Cipher</option>\r\n                            <option>Word</option>\r\n                            <option>Colour</option>\r\n                            <option>Hidden Word</option>\r\n                            <option>Hidden Object</option>\r\n                            <option>Riddle</option>\r\n                            <option>Custom</option>\r\n                        </Input>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        } else if (key==='puzzle'){\r\n            let component = this.props.selected;\r\n            let details = Object.keys(component[key]).map((property,index,array)=>{\r\n                let detail;\r\n                console.log(typeof component[key][property]);\r\n                if(typeof component[key][property] === Object || typeof[key][property] === Array)\r\n                    detail = JSON.stringify(component[key][property]);\r\n                else \r\n                    detail = component[key][property];\r\n                return(\r\n                <Row id={key}>\r\n                    <Col>\r\n                        <p>{\" \" + this.convertCamelCase(property) + \": \"+this.convertCamelCase(detail)}</p>\r\n                    </Col>\r\n                </Row>\r\n                )\r\n            });\r\n            if(Object.keys(component[key]).length>0){\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Label>{this.convertCamelCase(key)}</Label>\r\n                            {details}\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }else{\r\n                return null;\r\n            } \r\n        }else if(typeof this.props.selected[key] === \"string\" && key!==\"_id\" && key!==\"type\"){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{this.convertCamelCase(key)}</Label>\r\n                        <Input type=\"text\" name={key} id={key} placeholder={this.convertCamelCase(key)} value={this.props.selected[key]} onChange={this.handleChange}/>\r\n                    </Col>\r\n                </Row>)\r\n        }\r\n    };\r\n    mapKeysToRow = (property,index,array)=>{\r\n        \r\n    }\r\n    handleOnClick = (id,isInput)=> (e) => {\r\n        let component = {...this.props.selected};\r\n        let state = {};\r\n        state._id = component._id;\r\n        if(isInput){\r\n            state.inputComponents = component.inputComponents.filter(oldId => oldId!==id);\r\n        } else {\r\n            state.outputComponents = component.outputComponents.filter(oldId => oldId!==id);\r\n        }\r\n        this.props.updateComponent(state);\r\n    }\r\n    mapIDToP = (id,i,isInput) => {\r\n        return (\r\n            <ListGroupItem key={i}>\r\n                {id}\r\n                <Button onClick={this.handleOnClick(id,isInput)} color=\"danger\" style={{display:'inline', position: 'absolute', right:'2px', top:'0.3rem'}}>\r\n                    X\r\n                </Button>\r\n            </ListGroupItem>\r\n        )\r\n    }\r\n    \r\n    render() {\r\n        let component = this.props.selected;\r\n        let id=\"\";\r\n        let type=\"\";\r\n        let properties;\r\n        let inputs;\r\n        let outputs;\r\n        let inputRelationships;\r\n        let outputRelationships;\r\n        let visualWarning;\r\n        let physicalWarning;\r\n        if(component!==undefined || component!==null){\r\n            if(component._id!==undefined)\r\n                id = \" (\"+component._id+\")\";\r\n            else \r\n                id=\"\";\r\n            properties = Object.keys(component).map(this.mapDetailToInput)\r\n            type = component.type||\"\";\r\n            if(component.type!=='Area'&&component.inputComponents!==undefined&&component.outputComponents!==undefined&&(component.inputComponents.length>0||component.outputComponents.length>0)){\r\n                inputs = component.inputComponents.map((id,i)=>this.mapIDToP(id,i,true));\r\n                outputs = component.outputComponents.map((id,i)=>this.mapIDToP(id,i,false));\r\n                inputRelationships = (\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>Inputs</h4>\r\n                            <ListGroup>\r\n                                {inputs}\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n                outputRelationships = (\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>Outputs</h4>\r\n                            <ListGroup>\r\n                                {outputs}\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            }\r\n            //Accessibility\r\n            let visualKeys = [];\r\n            Object.keys(this.props.accessibility.visual).forEach((key)=>{\r\n                if(this.props.accessibility.visual[key]===true)\r\n                    visualKeys.push(key);\r\n            });\r\n            if(visualKeys.length>0)\r\n                visualWarning = (                \r\n                <Col className=\"col text-center\">\r\n                    <p id=\"visualWarning\"><i class=\"fa fa-wheelchair text-success\"  aria-hidden=\"true\"></i></p>  \r\n                    <UncontrolledTooltip id=\"visual\" target=\"visualWarning\">\r\n                    You selected: {visualKeys.join(',')} be careful with colour choices\r\n                    </UncontrolledTooltip>\r\n                </Col>\r\n                )\r\n            let physicalKeys = [];\r\n            Object.keys(this.props.accessibility.physical).forEach((key)=>{\r\n                if(this.props.accessibility.physical[key]===true)\r\n                    physicalKeys.push(key);\r\n            });\r\n            if(physicalKeys.length>0)\r\n                physicalWarning = (\r\n                <Col className=\"col text-center\">\r\n                    <p id=\"physicalWarning\"><i class=\"fa fa-wheelchair text-primary\" id=\"physicalWarning\" aria-hidden=\"true\"></i></p>\r\n                    <UncontrolledTooltip id=\"physical\" target=\"physicalWarning\">\r\n                    You selected: {physicalKeys.join(',')} ensure plenty of room around puzzles and check how difficult puzzle is to handle\r\n                    </UncontrolledTooltip>\r\n                </Col>\r\n                )\r\n        }\r\n        return (\r\n            <Container fluid className=\"container-fluid component-details\">\r\n                <Row>\r\n                    <Col className=\"col text-center\">\r\n                        <h3>Details</h3>\r\n                        <h4>{type + id}</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {visualWarning}\r\n                    {physicalWarning}\r\n                </Row>\r\n                {properties}\r\n                {inputRelationships}\r\n                {outputRelationships}\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ComponentDetails;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Card, CustomInput, UncontrolledTooltip } from 'reactstrap';\r\nimport '../styles/Accessibility.css';\r\n\r\nclass Accessibility extends Component {\r\n    handleVisualChange = (event) => {\r\n        var state = {...this.props.accessibility};\r\n        state.visual[event.target.id] = event.target.value===true?false:true;\r\n        this.props.updateAccessibility(state);\r\n    }\r\n    //Changes state on input change\r\n    handlePhysicalChange = (event) => {\r\n        var state = {...this.props.accessibility};\r\n        state.physical[event.target.id] = event.target.value===true?false:true;\r\n        this.props.updateAccessibility(state);\r\n    }\r\n    render(){\r\n        return (\r\n            <Container fluid className=\"accessibility\">\r\n                <Row>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 className=\"text-center text-success\">Visual Accessibility</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h2>Colour Blindness</h2>\r\n                                <p>\r\n                                    Please select the types of colour blindness your design must take into account\r\n                                </p>\r\n                            </Col>\r\n                            <Col>\r\n                                <h2>Other</h2>\r\n                                <p>\r\n                                    These are options to indicate restrictions on the design related to visual impairments such as blindness \r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card>\r\n                                    <h6 class=\"text-success\">Red-Green Colour Blindness</h6>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"protanomaly\" id=\"protanomaly\" label=\"Protanomaly\" value={this.props.accessibility.visual.protanomaly} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"protanomalyTooltip\"><i class=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"protanomalyTooltip\">Protanomaly: In males with protanomaly, the red cone photopigment is abnormal. Red, orange, and yellow appear greener and colors are not as bright. This condition is mild and doesn’t usually interfere with daily living. Protanomaly is an X-linked disorder estimated to affect 1 percent of males.</UncontrolledTooltip>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"protanopia\" id=\"protanopia\" label=\"Protanopia\" value={this.props.accessibility.visual.protanopia} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"protanopiaTooltip\"><i class=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"protanopiaTooltip\">Protanopia: In males with protanopia, there are no working red cone cells. Red appears as black. Certain shades of orange, yellow, and green all appear as yellow. Protanopia is an X-linked disorder that is estimated to affect 1 percent of males.</UncontrolledTooltip>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"deuteranomaly\" id=\"deuteranomaly\" label=\"Deuteranomaly\" value={this.props.accessibility.visual.deuteranomaly} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"deuteranomalyTooltip\"><i class=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"deuteranomalyTooltip\">Deuteranomaly: In males with deuteranomaly, the green cone photopigment is abnormal. Yellow and green appear redder and it is difficult to tell violet from blue. This condition is mild and doesn’t interfere with daily living. Deuteranomaly is the most common form of color blindness and is an X-linked disorder affecting 5 percent of males.</UncontrolledTooltip>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"deuteranopia\" id=\"deuteranopia\" label=\"Deuteranopia\" value={this.props.accessibility.visual.deuteranopia} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"deuteranopiaTooltip\"><i class=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"deuteranopiaTooltip\">Deuteranopia: In males with deuteranopia, there are no working green cone cells. They tend to see reds as brownish-yellow and greens as beige. Deuteranopia is an X-linked disorder that affects about 1 percent of males.</UncontrolledTooltip>\r\n                                    </Row>\r\n\r\n                                    <h6 class=\"text-success\">Blue-Yellow Colour Blindness</h6>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"tritanomaly\" id=\"tritanomaly\" label=\"Tritanomaly\" value={this.props.accessibility.visual.tritanomaly} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"tritanomalyTooltip\"><i class=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"tritanomalyTooltip\">Tritanomaly: People with tritanomaly have functionally limited blue cone cells. Blue appears greener and it can be difficult to tell yellow and red from pink. Tritanomaly is extremely rare. It is an autosomal dominant disorder affecting males and females equally.</UncontrolledTooltip>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"tritanopia\" id=\"tritanopia\" label=\"Tritanopia\" value={this.props.accessibility.visual.tritanopia} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"tritanopiaTooltip\"><i class=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"tritanopiaTooltip\">Tritanopia: People with tritanopia, also known as blue-yellow color blindness, lack blue cone cells. Blue appears green and yellow appears violet or light grey. Tritanopia is an extremely rare autosomal recessive disorder affecting males and females equally.</UncontrolledTooltip>\r\n                                    </Row>\r\n            \r\n                                    <h6 class=\"text-success\">Complete Colour Blindness</h6>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"coneMonochromacy\" id=\"coneMonochromacy\" label=\"Cone Monochromacy\" value={this.props.accessibility.visual.coneMonochromacy} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"coneMonochromacyTooltip\"><i class=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"coneMonochromacyTooltip\">Cone Monochromacy: This rare form of color blindness results from a failure of two of the three cone cell photopigments to work. There is red cone monochromacy, green cone monochromacy, and blue cone monochromacy. People with cone monochromacy have trouble distinguishing colors because the brain needs to compare the signals from different types of cones in order to see color. When only one type of cone works, this comparison isn’t possible. People with blue cone monochromacy, may also have reduced visual acuity, near-sightedness, and uncontrollable eye movements, a condition known as nystagmus. Cone monochromacy is an autosomal recessive disorder.</UncontrolledTooltip>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"rodMonochromacy\" id=\"rodMonochromacy\" label=\"Rod Monochromacy\" value={this.props.accessibility.visual.rodMonochromacy} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"rodMonochromacyTooltip\"><i class=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"rodMonochromacyTooltip\">Rod Monochromacy: This type of monochromacy is rare and is the most severe form of color blindness. It is present at birth. None of the cone cells have functional photopigments. Lacking all cone vision, people with rod monochromacy see the world in black, white, and gray. And since rods respond to dim light, people with rod monochromacy tend to be photophobic – very uncomfortable in bright environments. They also experience nystagmus. Rod monochromacy is an autosomal recessive disorder.</UncontrolledTooltip>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col>\r\n                                <Card>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"largeFonts\" id=\"largeFonts\" label=\"Large Fonts\" value={this.props.accessibility.visual.largeFonts} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"largeFontsTooltip\"><i class=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"largeFontsTooltip\">If your design requires larger fonts as you are expecting players with issues with short sightedness, this is a suitable option to select</UncontrolledTooltip>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"highContrast\" id=\"highContrast\" label=\"High Contrast\" value={this.props.accessibility.visual.highContrast} onChange={this.handleVisualChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"highContrastTooltip\"><i class=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"highContrastTooltip\">If your design requires a contrasting colour scheme to be used to make text more readable, select this option</UncontrolledTooltip>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 className=\"text-center text-primary\">Physical Accessibility</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <p>\r\n                                    These options are to indicate restrictions on the design related to physical impairments for example wheelchair accessibility and motor functions\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"> <CustomInput type=\"checkbox\" name=\"wheelchairAccessible\" id=\"wheelchairAccessible\" label=\"Wheelchair Accessible\" value={this.props.accessibility.physical.wheelchairAccessible} onChange={this.handlePhysicalChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"wheelchairAccessibleTooltip\"><i class=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"wheelchairAccessibleTooltip\">If your design is required to be wheelchair accessible select this option</UncontrolledTooltip>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs=\"8\"><CustomInput type=\"checkbox\" name=\"motorAccessible\" id=\"motorAccessible\" label=\"Accessible for players with motor function issues\" value={this.props.accessibility.physical.motorAccessible} onChange={this.handlePhysicalChange}/></Col>\r\n                                        <Col xs=\"4\" id=\"motorAccessibleTooltip\"><i class=\"fa fa-question-circle full-width-right\" aria-hidden=\"true\"></i></Col>\r\n                                        <UncontrolledTooltip target=\"motorAccessibleTooltip\">If your design is required to be wheelchair accessible select this option</UncontrolledTooltip>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <p>\r\n                            These options are designed to indicate the attempted accessibility of your design. These options will flag puzzles in your design that do not meet these restrictions\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Accessibility;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Alert, Button, Form, FormGroup, Label, Input, FormText} from 'reactstrap';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            errorMessage: \"\"\r\n        }\r\n    }\r\n\r\n    //Handles login form submit event\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        //Authenticate credentials \r\n        if(this.props.authenticateCredentials){\r\n            var err = await this.props.authenticateCredentials({strategy:'local',email:this.state.email,password:this.state.password});\r\n            this.setState({errorMessage:err});\r\n        }\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    //Handles error dismiss\r\n    handleDismiss = (event) => {\r\n        this.setState({errorMessage: \"\"});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login full-container verticaly-center-content\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup>\r\n                                    <Label for=\"email\">Email</Label>\r\n                                    <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"password\">Password</Label>\r\n                                    <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <Button>Login</Button>\r\n                                <FormText>\r\n                                    Don't have an account? Sign Up <Link to=\"/signup\">Here</Link>\r\n                                </FormText>\r\n                                <Alert isOpen={this.state.errorMessage !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.errorMessage}</Alert>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Alert, Button, Form, FormGroup, Label, Input, FormText} from 'reactstrap';\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            password2:\"\",\r\n            errorMessage: \"\"\r\n        }\r\n    }\r\n\r\n    //Handles login form submit event\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(this.props.password!==this.props.password2){\r\n            this.setState({errorMessage:\"Passwords Must Match\"});\r\n        }\r\n        if(this.props.signUp){\r\n            let err = await this.props.signUp({email:this.state.email,password:this.state.password});\r\n            this.setState({errorMessage:err});\r\n        }\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        },()=>{\r\n            if(this.state.password!==\"\"&&this.state.password!==this.state.password2){\r\n                this.setState({errorMessage:\"Passwords Must Match\"});\r\n            } else {\r\n                this.setState({errorMessage:\"\"});\r\n            }\r\n        });\r\n    }\r\n\r\n    //Handles error dismiss\r\n    handleDismiss = (event) => {\r\n        this.setState({errorMessage: \"\"});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sign-up full-container verticaly-center-content\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup>\r\n                                    <Label for=\"email\">Email</Label>\r\n                                    <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"password\">Password</Label>\r\n                                    <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"password2\">Re-Type Password</Label>\r\n                                    <Input type=\"password\" name=\"password2\" id=\"password2\" value={this.state.password2} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <Button>Sign Up</Button>\r\n                                <FormText>\r\n                                    Have an account? Log In <Link to=\"/login\">Here</Link>\r\n                                </FormText>\r\n                                <Alert isOpen={this.state.errorMessage !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.errorMessage}</Alert>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Signup;","import React, {Component}  from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col>\r\n                        <p>\r\n                            This is my honours project for BsC(Hons) Computing: Application Software Development at Robert Gordon University\r\n                            This is a web app for designing an escape room using drag and drop components\r\n                        </p>       \r\n                    </Col>\r\n                    <Col>\r\n                        <ul>\r\n                            <li><a href=\"https://github.com/AldoAbdn/Escape-Room-Generator/\">Github Repo</a></li>\r\n                            <li><a href=\"https://ninjamock.com/s/KCMW2Tx\">Wireframe</a></li>\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default About;","import React, {Component}  from 'react';\r\nimport YouTubePlaylist from 'react-youtube-playlist';\r\nimport '../styles/Tutorials.css';\r\n\r\nclass Tutorials extends Component {\r\n    render() {\r\n        return (\r\n            <YouTubePlaylist\r\n                width={'100%'}\r\n                height={'70%'}\r\n                api_key={process.env.REACT_APP_YOUTUBE_API_KEY}\r\n                playlist_id={process.env.REACT_APP_TUTORIALS_PLAYLIST_URL}\r\n                scrolling={\"auto\"}\r\n            />\r\n        )\r\n    }\r\n};\r\n\r\nexport default Tutorials;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass ProtectedRoute extends Component {\r\n    render(){\r\n        if (window.localStorage.getItem('feathers-jwt')){\r\n            if(this.props.condition!==undefined){\r\n                if(!this.props.condition){\r\n                    return(<Redirect to={this.props.redirect} state={this.props.location}/>)\r\n                } else {\r\n                    return (<Route {...this.props}/>)\r\n                }\r\n            } else {\r\n                return (<Route {...this.props}/>)\r\n            }\r\n        } else {\r\n            return (<Redirect to='/login' state={this.props.location}/>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default ProtectedRoute;","import React, {Component}  from 'react';\r\nimport { Container, Row } from 'reactstrap';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <h1>404 Page Not Found</h1>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default NotFound;","import RandomWords from 'random-words';\r\n\r\nclass LockGenerator {\r\n    generateNumericCombination(length){\r\n        let number = \"\";\r\n        for(let i = 0 ; i<length; i++){\r\n            number += parseInt(Math.floor(Math.random()*9));\r\n        }\r\n        return number;\r\n    }\r\n\r\n    generateWords(amount=1,wordsPerString=1){\r\n        let words = RandomWords({min:amount,max:amount,exactly:amount,wordsPerString:wordsPerString});\r\n        return words.slice(0,amount);\r\n    }\r\n\r\n    generateDirectionSequence(length){\r\n        let sequence = [];\r\n        let directions = [\"UP\",\"DOWN\",\"LEFT\",\"RIGHT\"];\r\n        let number;\r\n        for(let i = 0 ; i<length; i++){\r\n            number = Math.floor(Math.random()*3);\r\n            sequence.push(directions[number]);\r\n        }\r\n        return sequence.join(',');\r\n    }\r\n}\r\n\r\nexport default LockGenerator;","import React, {Component}  from 'react';\r\nimport {Row,Col,Button,Input} from 'reactstrap'\r\nimport lockGen from '../generators/LockGenerator';\r\n\r\nclass LockGenerator extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={length:1,wordsPerString:1}\r\n        this.lockGenerator = new lockGen();\r\n    }\r\n\r\n    handleChange = (event) => { \r\n        let state = {};\r\n        state[event.target.name] = event.target.value;  \r\n        this.setState(state);\r\n    }\r\n\r\n    handleNumericClick = (e)=>{\r\n        let output = this.lockGenerator.generateNumericCombination(this.state.length);\r\n        this.props.handleOutputChange(output);\r\n    }\r\n\r\n    handleWordClick = (e) => {\r\n        let output = this.lockGenerator.generateWords(this.state.length,this.state.wordsPerString);\r\n        this.props.handleOutputChange(output);\r\n    }\r\n\r\n    handleDirectionalClick = (e) => {\r\n        let output = this.lockGenerator.generateDirectionSequence(this.state.length);\r\n        this.props.handleOutputChange(output);\r\n    }\r\n\r\n    render() {\r\n        switch(this.props.lockType){\r\n            case 'Numeric':\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Input name=\"length\" placeholder=\"length\" type=\"number\" step=\"1\" min=\"1\" value={this.state.length} onChange={this.handleChange}/>\r\n                            <Button block onClick={this.handleNumericClick} color=\"primary\">Generate Random Number</Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            case 'Word':\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Input name=\"length\" placeholder=\"length\" type=\"number\" step=\"1\" min=\"1\" value={this.state.length} onChange={this.handleChange}/>\r\n                            <Input name=\"wordsPerString\" placeholder=\"words per string\" type=\"number\" step=\"1\" min=\"1\" value={this.state.wordsPerString} onChange={this.handleChange}/>\r\n                            <Button block onClick={this.handleWordClick} color=\"primary\">Generate Words</Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            case 'Directional':\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Input name=\"length\" placeholder=\"length\" type=\"number\" step=\"1\" min=\"1\" value={this.state.length} onChange={this.handleChange}/>\r\n                            <Button block onClick={this.handleDirectionalClick} color=\"primary\">Generate Directional Sequence</Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            default:\r\n                return null;\r\n            \r\n        }\r\n    }\r\n};\r\n\r\nexport default LockGenerator;","class Puzzle {\r\n    constructor(type){\r\n        this.type=type;\r\n    }\r\n}\r\nexport default Puzzle;","import Puzzle from './Puzzle';\r\nclass Colour extends Puzzle{\r\n    constructor(){\r\n        super('Colour')\r\n        let numbers = this.generateNumbers();\r\n        this.output = numbers.num1.toString() + numbers.num2.toString() + numbers.num3.toString() + numbers.num4.toString();\r\n        this.answer= numbers.num1.toString() + numbers.num2.toString() + numbers.num3.toString() + numbers.num4.toString();\r\n        this.numbers = numbers.numbers;\r\n    }\r\n\r\n    generateNumbers(){\r\n        let num1 = Math.floor(Math.random()*4)+1;\r\n        let num2;\r\n        while(num2!==num1){\r\n            num2 = Math.floor(Math.random()*4)+1;\r\n        }\r\n        let num3 = num1 + num2;\r\n        let num4 = Math.floor(Math.random()*4)+1;\r\n        let numbers = [{number:num1,colour:'red'},{number:num2,colour:'blue'},{number:num3,colour:'purple'},{number:num4,colour:'green'}];\r\n        return {num1,num2,num3,num4,numbers};\r\n    }\r\n}\r\nexport default Colour;","import CrosswordGenerator from 'cwg';\r\nimport Puzzle from './Puzzle';\r\nclass Crossword extends Puzzle {\r\n    constructor(output=\"\",words,hints,answers){\r\n        super('Crossword');\r\n        this.type=\"crossword\";\r\n        this.output=\"\";\r\n        this.words=words;\r\n        this.hints=hints;\r\n        this.answers=answers;\r\n        this.crossword=CrosswordGenerator(words);\r\n    }\r\n}\r\nexport default Crossword;","import Puzzle from './Puzzle';\r\nclass HiddenWord extends Puzzle{\r\n    constructor(word,words,hints,answers){\r\n        super('HiddenWord');\r\n        this.output=word;\r\n        this.word=word;\r\n        this.words=words;\r\n        this.hints=hints;\r\n        this.answers=answers;\r\n        this.hiddenWord=this.generateHiddenWord(word,words);\r\n    }\r\n\r\n    generateHiddenWord(word,words){\r\n        let matrix = [];\r\n        for (let i=0;i<words.length;i++){\r\n            matrix.push(words[i].indexOf(word[i]));\r\n        }\r\n\r\n        return matrix;\r\n    }\r\n}\r\nexport default HiddenWord;","import riddles from '../generators/riddle.json';\r\nimport Puzzle from './Puzzle';\r\nclass Riddle extends Puzzle {\r\n    constructor(){\r\n        super('Riddle');\r\n        let riddle = this.generateRandomRiddle();\r\n        this.output=riddle.answer;\r\n        this.riddle=riddle;\r\n    }\r\n    generateRandomRiddle(){\r\n        return riddles[Math.floor(Math.random()*riddles.length)];\r\n    }\r\n}\r\nexport default Riddle;","import Puzzle from './Puzzle';\r\nimport encoders from '../ciphers/encoders.json';\r\nimport decoders from '../ciphers/decoders.json';\r\nclass Cipher extends Puzzle{\r\n    constructor(cipherType=\"pigpen\",encoder=encoders['pigpen'],decoder=decoders['pigpen']){\r\n        super('Cipher')\r\n        this.cipherType = cipherType;\r\n        this.encoderDATA = encoder;\r\n        this.decoderDATA = decoder;\r\n    }\r\n}\r\nexport default Cipher;","import {Crossword,HiddenWord,Riddle,Colour,Cipher} from '../puzzles/index';\r\nclass PuzzleGenerator {\r\n    generateCipher(type=\"pigpen\"){\r\n        switch(type){\r\n            case 'pigpen':\r\n                return new Cipher();\r\n            default:\r\n                return new Cipher();\r\n        }\r\n    }\r\n\r\n    generateWord(type=\"crossword\",options) {\r\n        switch(type){\r\n            case 'crossword':\r\n                return new Crossword(\"\",options.words,options.hints,options.answers);\r\n            case 'hidden':\r\n                return new HiddenWord(options.word,options.words,options.hints,options.answers);\r\n            case 'riddle':\r\n                return new Riddle();\r\n            default:\r\n                return new Riddle();\r\n        }\r\n    }\r\n\r\n    generateColour(){\r\n        return new Colour();\r\n    }\r\n}\r\n\r\nexport default PuzzleGenerator;","import React, {Component}  from 'react';\r\nimport {Row, Col, Button, Input, InputGroup, InputGroupAddon, InputGroupText} from 'reactstrap';\r\n\r\nclass ListCreator extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {items:[\"\"]};\r\n    }\r\n\r\n    handleChange = (event) => { \r\n        let index = event.target.id;\r\n        let items = [...this.state.items];\r\n        items[index] = event.target.value;\r\n        this.setState({items},()=>{\r\n            this.props.handleChange(items);\r\n        });\r\n    }\r\n\r\n    addItem =  (e) => {\r\n        alert('item');\r\n        let items = [...this.state.items];\r\n        items.push(\"\");\r\n        this.setState({items},()=>{\r\n            console.log(this.state);\r\n        })\r\n    }\r\n\r\n    removeItem = (index) => (e) => {\r\n        let items = [...this.state.items];\r\n        items = [...items.slice(0,index),...items.slice(index+1)];\r\n        this.setState({items});\r\n    }\r\n    \r\n    mapItemsToInputs = (item,index,array)=>{\r\n        return (\r\n            <InputGroup key={index}>\r\n                <Input type=\"text\" id={index} onChange={this.handleChange}/>\r\n                <InputGroupAddon>\r\n                    <InputGroupText onClick={this.removeItem(index)} addonType=\"append\">\r\n                        delete\r\n                    </InputGroupText>\r\n                </InputGroupAddon>\r\n            </InputGroup>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let items = this.state.items.map(this.mapItemsToInputs);\r\n        console.log(this.state.items);\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    <Button onClick={this.addItem}>Add Item</Button>\r\n                    {items}\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ListCreator;","import React, {Component}  from 'react';\r\nimport {Row,Col,Button,Input} from 'reactstrap'\r\nimport puzzleGenerator from '../generators/PuzzleGenerator';\r\nimport ListCreator from '../components/ListCreator';\r\n\r\nclass PuzzleGenerator extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {word:\"\",words:[],hints:[],answers:[],cipher:\"pigpen\"};\r\n        this.PuzzleGenerator = new puzzleGenerator();\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => { \r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleListChange = (key) => (list) => {\r\n        this.setState({[key]:list});\r\n    }\r\n\r\n    handleWordClick = (e) => {\r\n        let options = {...this.state};\r\n        this.props.handlePuzzleChange(this.PuzzleGenerator.generateWord('hidden',options))\r\n    }\r\n\r\n    handleRiddleClick = (e) => {\r\n        this.props.handlePuzzleChange(this.PuzzleGenerator.generateWord('riddle'))\r\n    }\r\n\r\n    handleCipherClick = (e) => {\r\n        this.props.handlePuzzleChange(this.PuzzleGenerator.generateCipher(this.state.cipher))\r\n    }\r\n\r\n    render() {\r\n        switch(this.props.puzzleType){\r\n            case 'Hidden Word':\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Input type=\"text\" name='word' id='word' placeholder='hidden word'value={this.state.word} onChange={this.handleChange}></Input>\r\n                            <p>Words</p>\r\n                            <ListCreator handleChange={this.handleListChange('words')}/>\r\n                            <p>Hints</p>\r\n                            <ListCreator handleChange={this.handleListChange('hints')}/>\r\n                            <p>Answers</p>\r\n                            <ListCreator handleChange={this.handleListChange('answers')}/>\r\n                            <Button block onClick={this.handleWordClick} color=\"primary\">Generate Hidden Word</Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            case 'Riddle':\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Button block onClick={this.handleRiddleClick} color=\"primary\">Generate Random Riddle</Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            case 'Cipher':\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <Input type=\"select\" name=\"cipher\" id=\"cipher\" placeholder=\"cipher\" value={this.state.cipher} onChange={this.handleChange}>\r\n                                <option>pigpen</option>\r\n                            </Input>\r\n                            <Button block onClick={this.handleCipherClick} color=\"primary\">Generate Cipher</Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            default:\r\n                return null;\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport default PuzzleGenerator;","import React, {Component}  from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\n//Components\r\nimport { Dashboard, EscapeRoomDesigner, Login, Signup, Tutorials, About, ProtectedRoute, NotFound } from '../components/index.js';\r\nimport EscapeRoom from '../models/EscapeRoom.js';\r\n/**\r\n * Business logic of app \r\n * handles creating and updating of data \r\n * handles navigation \r\n * @class\r\n * @author Alistair Quinn\r\n */\r\nclass BusinessLogic extends Component {\r\n    /**\r\n     * Main construcutor\r\n     * handles initialising state\r\n     * @constructor\r\n     */\r\n    constructor(){\r\n        super();\r\n        this.state = {profile:null};\r\n    }\r\n    /**\r\n     * Authenticates login credentials \r\n     * @function\r\n     * @param {Object} credentials \r\n     */\r\n    authenticateCredentials = async(credentials)=>{\r\n        try {\r\n            await this.props.feathersClient.authenticate(credentials);\r\n            let queryResult = await this.props.services.users.find({query:{email:credentials.email}});\r\n            if(queryResult.action.type.includes('FULFILLED')&&queryResult.value.total>0){\r\n                var user = queryResult.value.data[0];\r\n                user.token = window.localStorage.getItem('feathers-jwt');\r\n                this.props.redux.actions.user.login(user);\r\n                this.props.history.push('/dashboard');\r\n            } else {\r\n                this.setState({})\r\n            }\r\n        } catch(err){\r\n            return err.message;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a new user \r\n     * @function\r\n     * @param {Object} credentials \r\n     */\r\n    signUp = async(credentials)=>{\r\n        //Create a new user \r\n        try{\r\n            await this.props.services.users.create(credentials);\r\n            //Authenticate with feathersjs\r\n            await this.props.feathersClient.authenticate({strategy:'local',email:credentials.email,password:credentials.password});\r\n            //Get User Details and Update Redux Store\r\n            let queryResult = await this.props.services.users.find({query:{email:credentials.email}});\r\n            if(queryResult.action.type.includes('FULFILLED')){\r\n                var user = queryResult.value.data[0];\r\n                user.token = window.localStorage.getItem('feathers-jwt');\r\n                this.props.redux.actions.user.login(user);\r\n                this.props.history.push('/dashboard');\r\n            }\r\n        } catch(error){\r\n            return error.message;\r\n        }\r\n    }\r\n    /**\r\n     * Opens escape room designer\r\n     * @function\r\n     * @param {EscapeRoom} escapeRoom\r\n     */\r\n    editEscapeRoom = (escapeRoom) => {\r\n        this.props.redux.actions.escapeRoom.setSelectedEscapeRoom(escapeRoom);\r\n        this.props.history.push('/designer');\r\n    }\r\n    /**\r\n     * Creates a new escape room \r\n     * then opens designer\r\n     * @function\r\n     */\r\n    newEscapeRoom = async() => {\r\n        const userId = this.props.redux.state.user._id;\r\n        const newEscapeRoom = new EscapeRoom(userId);\r\n        let response = await this.props.services['escape-rooms'].create(newEscapeRoom)\r\n        if(response.action.type.includes('FULFILLED')){\r\n            const escapeRoom = response.value;\r\n            if (escapeRoom!==null){\r\n                this.props.redux.actions.escapeRooms.addEscapeRoom(escapeRoom);\r\n                this.props.redux.actions.escapeRoom.setSelectedEscapeRoom(escapeRoom);\r\n                this.props.history.push('/designer');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Deletes an escape room\r\n     * @function\r\n     * @param {EscapeRoom} escapeRoom\r\n     */\r\n    deleteEscapeRoom = (escapeRoom) => {\r\n        this.props.services['escape-rooms'].remove(escapeRoom._id);\r\n        this.props.redux.actions.escapeRooms.removeEscapeRoom(escapeRoom);\r\n    }\r\n\r\n    /**\r\n     * Saves an escape room\r\n     * @function\r\n     * @param {EscapeRoom} escapeRoom\r\n     */\r\n    saveEscapeRoom = async(escapeRoom) => {\r\n        if(escapeRoom._id!==undefined){\r\n            escapeRoom.estimatedCost = EscapeRoom.calculateCost(escapeRoom);\r\n            await this.props.services['escape-rooms'].update(escapeRoom._id,escapeRoom);\r\n            await this.props.redux.actions.escapeRooms.updateEscapeRoom(escapeRoom);\r\n        }\r\n        this.props.history.push('/');\r\n    }\r\n    /**\r\n     * React lifecycle method\r\n     * Renders navigation \r\n     * @function\r\n     */\r\n    render() {\r\n        const escapeRooms = this.props.redux.state.escapeRooms;\r\n        const escapeRoom = this.props.redux.state.escapeRoom;\r\n        const escapeRoomActions = this.props.redux.actions.escapeRoom;\r\n        const showModal = this.props.redux.actions.modal.showModal;\r\n        return (\r\n            <Switch>\r\n                <Redirect exact from=\"/\" to=\"dashboard\"/>\r\n                <ProtectedRoute path=\"/dashboard\" render={(routeProps) => (<Dashboard escapeRooms={escapeRooms} showModal={showModal} editEscapeRoom={this.editEscapeRoom} newEscapeRoom={this.newEscapeRoom} deleteEscapeRoom={this.deleteEscapeRoom}/>)}/>\r\n                <ProtectedRoute path=\"/designer\" condition={Object.keys(escapeRoom).length > 0 &&escapeRoom!==undefined} redirect={'/'} render={(routeProps) =>(<EscapeRoomDesigner showModal={showModal} escapeRoom={escapeRoom} saveEscapeRoom={this.saveEscapeRoom} updateDetails={escapeRoomActions.updateDetails} updateAccessibility={escapeRoomActions.updateAccessibility} addComponent={escapeRoomActions.addComponent} removeComponent={escapeRoomActions.removeComponent} updateComponent={escapeRoomActions.updateComponent} addRelationship={escapeRoomActions.addRelationship} removeRelationship={escapeRoomActions.removeRelationship}/>)}/>\r\n                <Route path=\"/login\" render={(routeProps) => (<Login authenticateCredentials={this.authenticateCredentials}/>)}/>\r\n                <Route path=\"/signup\" render={(routeProps) => (<Signup signUp={this.signUp}/>)}/>\r\n                <Route path=\"/about\" component={About}/>\r\n                <Route path=\"/tutorials\" component={Tutorials}/>\r\n                <Route component={NotFound}/>\r\n            </Switch> \r\n        )\r\n    }\r\n};\r\n\r\nexport default BusinessLogic;","import React, {Component}  from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Navbar, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem, NavLink, Dropdown, DropdownToggle, DropdownMenu} from 'reactstrap';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport Profile from '../components/Profile';\r\nimport '../styles/Main.css';\r\n\r\n/**\r\n * Defines main layout of app \r\n * Handles re-authentication of logged in user \r\n * Renders business logic \r\n * @class Main \r\n * @author Alistair Quinn\r\n */\r\nimport BusinessLogic from './BusinessLogic.js';\r\nclass Main extends Component {\r\n    /**\r\n     * Main constructor to set initial state\r\n     * @constructor\r\n     */\r\n    constructor(){\r\n        super();\r\n        this.state = {profile:false, isProfileOpen:false,tooltipOpen:false, isOpen:false};\r\n    }\r\n\r\n    /**\r\n     * Toggles for bootstrap\r\n     */\r\n    toggle=()=>{\r\n        this.setState({isOpen:!this.state.isOpen});\r\n    }\r\n    toggleProfile=()=>{\r\n        this.setState({isProfileOpen:!this.state.isProfileOpen});\r\n    }\r\n\r\n    /**\r\n     * React lifecycle method\r\n     * Updates profile if user has changed\r\n     * @function\r\n     * @param {Object} prevProps \r\n     */\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.redux.state.user.email!==this.props.redux.state.user.email){\r\n            this.populateEscapeRooms(this.props.redux.state.user._id);\r\n            if(this.props.redux.state.user.email !== undefined){\r\n                this.setState({profile:true});\r\n            } else {\r\n                this.setState({profile:false});\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * React lifecycle method \r\n     * Updates profile is logged in\r\n     * @function\r\n     */\r\n    componentDidMount() {\r\n        if (window.localStorage.getItem('feathers-jwt') && this.props.redux.state.user.email!==undefined){\r\n            this.setState({profile:true});\r\n        } else if (window.localStorage.getItem('feathers-jwt') && this.props.redux.state.user.email===undefined){\r\n            this.authenticate();\r\n        }\r\n    }\r\n    /**\r\n     * Authentication\r\n     * @function\r\n     */\r\n    authenticate = async() => {\r\n        //Authenticates JWT and then populates user/escapeRooms\r\n        let jwt = await this.authenticateJWT();\r\n        let user = await this.populateUserFromJWT(jwt);\r\n        if(user!=null)\r\n            await this.populateEscapeRooms(user._id);\r\n    }\r\n    /**\r\n     * Authenticates JWT \r\n     * @function \r\n     * @returns string\r\n     */\r\n    authenticateJWT = async() => {\r\n        try {\r\n            let response = await this.props.feathersClient.authenticate();\r\n            return response.accessToken;\r\n        } catch(error) {\r\n            this.logout();\r\n        }\r\n    }\r\n    /**\r\n     * Populates user from a jwt\r\n     * @function\r\n     * @param {String} jwt \r\n     * @returns {Object}\r\n     */\r\n    populateUserFromJWT = async(jwt) => {\r\n        if(jwt===undefined||jwt===null||jwt===\"\"){\r\n            this.setState({profile:false});\r\n            return null;\r\n        }\r\n        let response = await this.props.feathersClient.passport.verifyJWT(jwt);\r\n        response = await this.props.services.users.get(response.userId);\r\n        var user = response.value;\r\n        if(user.email===undefined||user.email===\"\"){\r\n            this.setState({profile:false});\r\n            return null;\r\n        }\r\n        user.token = window.localStorage.getItem('feathers-jwt');\r\n        this.props.redux.actions.user.login(user);\r\n        this.setState({profile:true});\r\n        return user;\r\n    }\r\n    /**\r\n     * Popultes escape rooms by user ID\r\n     * @function\r\n     * @param {String} userId\r\n     * @returns {Array}\r\n     */\r\n    populateEscapeRooms = async (userId) => {\r\n        //Get User Details and Update Redux Store\r\n        if (userId !== null && userId !== undefined){\r\n            let queryResult = await this.props.services['escape-rooms'].find({query:{userId:userId}});\r\n            if(queryResult.action.type.includes('FULFILLED')){\r\n                const escapeRooms = queryResult.value.data;\r\n                if (escapeRooms!==null && escapeRooms!==undefined)\r\n                    this.props.redux.actions.escapeRooms.updateEscapeRooms(escapeRooms);\r\n                    this.setState({loading:false});\r\n                }\r\n        }\r\n    }\r\n    /**\r\n     * Logs out user, tidys up\r\n     * @function\r\n     */\r\n    logout = () => {\r\n        window.localStorage.removeItem('feathers-jwt');\r\n        this.setState({profile:null});\r\n        this.props.redux.actions.user.logout();\r\n        this.props.history.push('/');\r\n    }\r\n    /**\r\n     * Updates users details \r\n     * @function\r\n     * @param {Object} update\r\n     */\r\n    updateUser = async (update) => {\r\n        try{\r\n            const user = this.props.redux.state.user;\r\n            let response = await this.props.services.users.patch(user._id,update);\r\n            this.props.redux.actions.user.login(response.value);\r\n            return true;\r\n        }catch(error){\r\n            return error.message;\r\n        }\r\n    }\r\n    /**\r\n     * React lifecycle method \r\n     * Renders main layout\r\n     * @function\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        const loading = this.state.loading || this.props.redux.state.usersService.isLoading || this.props.redux.state.escapeRoomsService.isLoading;\r\n        const modal = this.props.redux.state.modal;\r\n        const hideModal = this.props.redux.actions.modal.hideModal;\r\n        let user = this.props.redux.state.user;\r\n        let profile;\r\n        if(this.state.profile){\r\n            profile =                                 \r\n            <Dropdown isOpen={this.state.isProfileOpen} toggle={this.toggleProfile} nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                Profile\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                    <Profile user={user} updateUser={this.updateUser}/>\r\n                    <Button id=\"LogoutButton\" onClick={this.logout} block>Logout</Button>\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        } else {\r\n            profile = null;\r\n        }\r\n        return (\r\n            <div>   \r\n                <LoadingOverlay className={'loading-overlay'} active={loading} spinner>       \r\n                    <header>\r\n                        <Navbar color=\"light\" light expand=\"md\">\r\n                            <NavbarBrand href=\"/\"><img src=\"/images/logos/main.svg\" alt=\"Logo\"/></NavbarBrand>\r\n                            <NavbarToggler onClick={this.toggle} />\r\n                            <Collapse isOpen={this.state.isOpen} navbar>\r\n                                <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <NavLink href=\"/\">Survey</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink href=\"https://github.com/AldoAbdn/Escape-Room-Generator\">GitHub</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <Link className=\"nav-link\" to=\"/tutorials\">Tutorials</Link>\r\n                                </NavItem>\r\n                                {profile}\r\n                                </Nav>\r\n                            </Collapse>\r\n                        </Navbar>\r\n                    </header>\r\n                    <main>\r\n                        <BusinessLogic history={this.props.history} feathersClient={this.props.feathersClient} redux={this.props.redux} services={this.props.services}/>\r\n                    </main>\r\n                </LoadingOverlay>\r\n                <Modal isOpen={modal.isOpen} >\r\n                    <ModalHeader>{modal.header}</ModalHeader>\r\n                    <ModalBody>\r\n                        {modal.body}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"success\" onClick={()=>{\r\n                            modal.confirm.action();\r\n                            hideModal();\r\n                        }}>{modal.confirm.text}</Button>\r\n                        <Button color=\"danger\" onClick={()=>{\r\n                            modal.cancel.action();\r\n                            hideModal();\r\n                        }}>{modal.cancel.text}</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Main;","export function login(user) {\r\n    return {\r\n        type: 'LOGIN', user\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return {\r\n        type: 'LOGOUT'\r\n    }\r\n}\r\n\r\n","export function addEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'ADD_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function removeEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'REMOVE_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function updateEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'UPDATE_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function updateEscapeRooms(escapeRooms){\r\n    return {\r\n        type: 'UPDATE_ESCAPE_ROOMS',\r\n        escapeRooms\r\n    }\r\n}","export function setSelectedEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'SET_SELECTED_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function clearSelectedEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'CLEAR_SELECTED_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function updateDetails(details){\r\n    return {\r\n        type: 'UPDATE_DETAILS',\r\n        details\r\n    }\r\n}\r\n\r\nexport function updateAccessibility(accessibility){\r\n    return {\r\n        type: 'UPDATE_ACCESSIBILITY',\r\n        accessibility\r\n    }\r\n}\r\n\r\nexport function addComponent(component, areaId){\r\n    return {\r\n        type: 'ADD_COMPONENT',\r\n        component,\r\n        areaId\r\n    }\r\n}\r\n\r\nexport function removeComponent(componentId){\r\n    return {\r\n        type: 'REMOVE_COMPONENT',\r\n        componentId\r\n    }\r\n}\r\n\r\nexport function updateComponent(component,areaId){\r\n    return {\r\n        type: 'UPDATE_COMPONENT',\r\n        component,\r\n        areaId\r\n    }\r\n}\r\n\r\nexport function addRelationship(componentId,parentId,isInput){\r\n    return {\r\n        type: 'ADD_RELATIONSHIP',\r\n        componentId,\r\n        parentId,\r\n        isInput\r\n    }\r\n}\r\n\r\nexport function removeRelationship(componentId,parentId,isInput){\r\n    return {\r\n        type: 'REMOVE_RELATIONSHIP',\r\n        componentId,\r\n        parentId,\r\n        isInput\r\n    }\r\n}\r\n\r\n","export function showModal(modal){\r\n    return {\r\n        type: 'SHOW_MODAL',\r\n        modal\r\n    }\r\n}\r\n\r\nexport function hideModal(){\r\n    return {\r\n        type: 'HIDE_MODAL'\r\n    }\r\n}","/**\r\n * Connects redux state and actions to the whole app,\r\n * makes sure routing is possible,\r\n * @class App\r\n * @author Alistair Quinn  \r\n */\r\n\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router'\r\nimport '../styles/App.css';\r\nimport Main from './Main';\r\nimport * as userActionCreators from '../actions/user';\r\nimport * as escapeRoomsActionCreators from '../actions/escapeRooms';\r\nimport * as escapeRoomActionCreators from '../actions/escapeRoom';\r\nimport * as modalActionCreators from '../actions/modal';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    redux: state\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  const user = bindActionCreators(userActionCreators, dispatch);\r\n  const escapeRooms = bindActionCreators(escapeRoomsActionCreators, dispatch);\r\n  const escapeRoom = bindActionCreators(escapeRoomActionCreators, dispatch);\r\n  const modal = bindActionCreators(modalActionCreators, dispatch);\r\n  return {user, escapeRooms, escapeRoom, modal};\r\n}\r\n\r\nfunction mergeProps(stateProps, dispatchProps, ownProps) {\r\n  return {\r\n    ...ownProps,\r\n    redux: {\r\n      state: stateProps.redux,\r\n      actions: dispatchProps\r\n    }\r\n  }\r\n}\r\n\r\nconst App = connect(mapStateToProps, mapDispatchToProps, mergeProps)(Main);\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/**\r\n * Main file, starts front end and renders App \r\n * @author Alistair Quinn\r\n */\r\n//Polyfills\r\nimport 'react-app-polyfill/ie9';\r\n//React Imports \r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n//Redux Imports\r\nimport { Provider } from 'react-redux';\r\n//Store \r\nimport configureStore from './stores/store'\r\n//Feathers\r\nimport io from 'socket.io-client';\r\nimport feathers from 'feathers-client';\r\n//Feathers-Redux\r\nimport reduxifyServices, {getServicesStatus, bindWithDispatch} from 'feathers-redux';\r\n//CSS\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//Components\r\nimport App from './components/App';\r\n//Service Worker \r\nimport * as serviceWorker from './serviceWorker';\r\n//ReactDnD\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport TouchBackend from 'react-dnd-touch-backend';\r\nimport MultiBackend, { TouchTransition } from 'react-dnd-multi-backend';\r\nimport { DragDropContextProvider } from 'react-dnd';\r\nlet pipline = {\r\n    backends: [\r\n        {backend: HTML5Backend},\r\n        {\r\n            backend: TouchBackend({enableMouseEvents:true}),\r\n            preview: true,\r\n            transition: TouchTransition\r\n        }\r\n    ]\r\n};\r\nlet backend = MultiBackend(pipline);\r\n\r\n//Feathers Configuration \r\nexport const feathersClient = feathers()\r\n    .configure(feathers.socketio(io()))\r\n    .configure(feathers.hooks())\r\n    .configure(feathers.authentication({\r\n        storage:window.localStorage\r\n    }));\r\n\r\n//Configure Redux\r\nconst rawServices = reduxifyServices(feathersClient, ['users', 'escape-rooms']);\r\nconst store = configureStore(rawServices,{user:{},escapeRooms:[],escapeRoom:{}});\r\nconst services = bindWithDispatch(store.dispatch, rawServices);\r\n\r\n//Router\r\nconst router = (\r\n    <DragDropContextProvider backend={backend}>\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <App feathersClient={feathersClient} services={services} getServicesStatus={getServicesStatus}/>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    </DragDropContextProvider>\r\n);\r\n\r\n//Render Router \r\nReactDOM.render(router, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport middlewares from '../middleware';\r\nimport rootReducer from '../reducers';\r\n\r\nexport default function configureStore(reduxifiedServices, initialState) {\r\n    const createStoreWithDevTools = window.devToolsExtension ? window.devToolsExtension()(createStore) : createStore;\r\n    const createStoreWithMiddlewares = applyMiddleware(...middlewares)(createStoreWithDevTools);\r\n    return createStoreWithMiddlewares(rootReducer(reduxifiedServices),initialState);\r\n}"],"sourceRoot":""}