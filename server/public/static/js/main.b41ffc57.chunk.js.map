{"version":3,"sources":["middleware/logger.js","middleware/index.js","reducers/user.js","reducers/escapeRooms.js","reducers/escapeRoom.js","models/Modal.js","reducers/modal.js","reducers/index.js","components/Dashboard.js","components/Profile.js","components/EscapeRoomDesigner.js","components/Details.js","components/Design.js","models/Component.js","models/Area.js","models/Puzzle.js","models/Prop.js","models/Lock.js","models/Event.js","models/Music.js","components/ComponentDnDTarget.js","components/ComponentDnDSource.js","components/AreaDnDTarget.js","components/AreaDnDSource.js","components/Pallet.js","components/ComponentArranger.js","components/ComponentDetails.js","components/Accessibility.js","components/Login.js","components/SignUp.js","components/About.js","components/Tutorials.js","components/ProtectedRoute.js","components/NotFound.js","components/LockGenerator.js","components/PuzzleGenerator.js","models/EscapeRoom.js","components/BusinessLogic.js","components/Main.js","actions/user.js","actions/escapeRooms.js","actions/escapeRoom.js","actions/modal.js","components/App.js","serviceWorker.js","index.js","stores/store.js"],"names":["logger","store","next","action","console","groupCollapsed","type","info","result","log","getState","groupEnd","middleware","reduxThunk","reduxPromiseMiddleware","user","state","arguments","length","undefined","Object","objectSpread","escapeRooms","i","push","escapeRoom","slice","findIndex","_id","concat","toConsumableArray","newState","details","accessibility","components","component","areaId","outputComponents","componentId","forEach","index","inputComponents","filter","inputId","outputId","parentId","isInput","indexOf","id","Modal","header","body","confirmText","confirmCallback","cancelText","cancelCallback","isOpen","classCallCheck","this","confirm","text","cancel","modal","reducers","reduxifiedServices","combineReducers","usersService","users","reducer","escapeRoomsService","routing","routerReducer","Dashboard","props","_this","possibleConstructorReturn","getPrototypeOf","call","handleToggle","e","dropdownOpen","setState","handleClick","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","newEscapeRoom","stop","_x","apply","handleItemClick","editEscapeRoom","saveJSON","savePDF","deleteEscapeRoom","showModal","name","mapEscapeRoomToList","react_default","createElement","ListGroupItem","key","Dropdown","style","display","position","right","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","onClick","blob","Blob","JSON","stringify","saveAs","doc","jsPDF","save","Container","Row","Col","Button","block","ListGroup","map","Component","Profile","handleSubmit","event","preventDefault","updateUser","email","password","handleChange","defineProperty","target","value","handleDismiss","errorMessage","_ref2","_callee2","_context2","t0","edit","abrupt","sent","_x2","oldProps","newProps","profile","Card","CardImg","height","src","avatar","alt","CardBody","CardTitle","className","editProfile","Form","onSubmit","FormGroup","Label","for","Input","onChange","Alert","color","EscapeRoomDesigner","saveEscapeRoom","handleNav","tab","activeTab","history","xs","md","lg","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","components_Details","updateDetails","components_Accessibility","updateAccessibility","components_Design","addComponent","removeComponent","updateComponent","addRelationship","removeRelationship","Details","placeholder","designers","theme","minPlayers","maxPlayers","targetTime","min","max","difficulty","objective","description","Design","handleComponentClick","stopPropagation","selected","findComponent","find","components_Pallet","components_ComponentArranger","components_ComponentDetails","uniqid","output","top","left","estimatedCost","Area","Puzzle","puzzleType","Prop","Lock","lockType","Event","eventType","Music","startTime","endTime","ComponentDnDTarget","item","classNames","isOver","canDrop","connectDropTarget","DropTarget","drop","monitor","didDrop","getItem","handleComponentDrop","moved","connect","dropTarget","isOverCurrent","shallow","itemType","getItemType","componentSource","canDrag","isDragging","beginDrag","endDrag","ComponentDnDSource","addRef","ref","_this2","isTarget","components_ComponentDnDTarget","connectDragSource","DragSource","dragSource","componentTarget","clientOffset","getClientOffset","targetRect","ReactDOM","findDOMNode","getBoundingClientRect","y","x","width","delta","getDifferenceFromInitialOffset","Math","round","AreaDnDTarget","render","origComponent","components_ComponentDnDSource","renderTrigger","areaSource","AreaDnDSource","components_AreaDnDTarget","Pallet","components_AreaDnDSource","areaArrangerTarget","AreaModel","ComponentArranger","mapAreas","area","includes","refs","update","forceUpdate","window","requestAnimationFrame","addEventListener","removeEventListener","lines","array","inputComponent","react_lineto_default","from","to","borderColor","outputComponent","ComponentDetails","mapDetailToInput","generator","components_LockGenerator","handleOutputChange","components_PuzzleGenerator","generateFromInputs","handleOnClick","oldId","mapIDToP","properties","inputs","outputs","inputRelationships","outputRelationships","keys","margin-bottom","Accessibility","CustomInput","label","checked","protanomaly","protanopia","deuteranomaly","deuteranopia","tritanomaly","tritanopia","coneMonochromacy","rodMonochromacy","largeFonts","highContrast","wheelchairAccessible","motorAccessible","Login","err","authenticateCredentials","strategy","FormText","Link","Signup","signUp","About","href","Tutorials","dist_default","api_key","process","youtubeAPIKey","playlist_id","scrolling","ProtectedRoute","localStorage","condition","Route","Redirect","redirect","location","NotFound","LockGenerator","PuzzleGenerator","EscapeRoom","userId","BusinessLogic","credentials","queryResult","feathersClient","authenticate","services","query","total","data","token","redux","actions","login","message","create","setSelectedEscapeRoom","_callee3","response","_context3","addEscapeRoom","remove","removeEscapeRoom","_ref4","_callee4","_context4","patch","_x3","_ref5","_callee5","_context5","updateEscapeRoom","_x4","escapeRoomActions","Switch","exact","components_ProtectedRoute","path","routeProps","components_Dashboard","components_Profile","components_EscapeRoomDesigner","components_Login","SignUp","Main","jwt","authenticateJWT","populateUserFromJWT","populateEscapeRooms","accessToken","logout","_ref3","setProfile","passport","verifyJWT","get","updateEscapeRooms","loading","removeItem","tooltipOpen","prevProps","loggedIn","isLoading","hideModal","LoadingOverlay_default","spinner","components_BusinessLogic","es_Modal","ModalHeader","ModalBody","ModalFooter","clearSelectedEscapeRoom","App","dispatch","bindActionCreators","userActionCreators","escapeRoomsActionCreators","escapeRoomActionCreators","modalActionCreators","stateProps","dispatchProps","ownProps","withRouter","Boolean","hostname","match","__webpack_require__","d","__webpack_exports__","pipline","backends","backend","HTML5Backend","TouchBackend","enableMouseEvents","preview","transition","TouchTransition","MultiBackend","feathers","configure","socketio","io","hooks","authentication","storage","rawServices","reduxifyServices","initialState","createStoreWithDevTools","devToolsExtension","createStore","applyMiddleware","middlewares","createStoreWithMiddlewares","rootReducer","configureStore","bindWithDispatch","router","react_dnd_lib","es","BrowserRouter","components_App","getServicesStatus","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b41ffc57.chunk.js","sourcesContent":["/*\r\n A basic middleware logger\r\n See http://redux.js.org/docs/advanced/Middleware.html\r\n */\r\n\r\nconst logger = store => next => action => {\r\n    console.groupCollapsed(action.type); // eslint-disable-line no-console\r\n    console.info('dispatching', action); // eslint-disable-line no-console\r\n    const result = next(action);\r\n    console.log('next state', store.getState()); // eslint-disable-line no-console\r\n    console.groupEnd(action.type); // eslint-disable-line no-console\r\n    return result;\r\n  };\r\n  \r\n  export default logger;","// eslint no-unused-vars: 0,\r\n\r\nimport reduxThunk from 'redux-thunk';\r\nimport reduxPromiseMiddleware from 'redux-promise-middleware';\r\n// import { routerMiddleware } from 'react-router-redux';\r\n// import { browserHistory } from 'react-router';\r\nimport logger from './logger'; // eslint-disable-line no-unused-vars\r\n\r\nexport default [\r\n  reduxThunk, // Thunk middleware for Redux\r\n  reduxPromiseMiddleware(), // Resolve, reject promises with conditional optimistic updates\r\n  // routerMiddleware(browserHistory), // !! IMPORTANT for location.href changes\r\n  logger, // A basic middleware logger\r\n];","function user(state={},action){\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            return {...action.user};\r\n            \r\n        case 'LOGOUT':\r\n            return {};\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default user;","function escapeRooms(state=[],action){\r\n    let i;\r\n    switch(action.type){\r\n        case 'ADD_ESCAPE_ROOM':\r\n            state.push(action.escapeRoom);\r\n            return state.slice();\r\n            \r\n        case 'REMOVE_ESCAPE_ROOM':\r\n            i = state.findIndex(escapeRoom => escapeRoom._id === action.escapeRoom._id);\r\n            return [...state.slice(0,i),...state.slice(i+1)];\r\n            \r\n        case 'UPDATE_ESCAPE_ROOM':\r\n            i = state.findIndex(escapeRoom=>escapeRoom._id === action.escapeRoom._id);\r\n            state[i] = action.escapeRoom;\r\n            return state.slice(); \r\n            \r\n        case 'UPDATE_ESCAPE_ROOMS':\r\n            return action.escapeRooms.slice();\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default escapeRooms;","function escapeRoom(state={},action){\r\n    let newState = {};\r\n    let i;\r\n    switch(action.type){\r\n        case 'SET_SELECTED_ESCAPE_ROOM':\r\n            return {...action.escapeRoom};\r\n        case 'CLEAR_SELECTED_ESCAPE_ROOM':\r\n            return {}\r\n        case 'UPDATE_DETAILS':\r\n            newState = {...state};\r\n            newState.details = {...newState.details, ...action.details};\r\n            return newState;\r\n        case 'UPDATE_ACCESSIBILITY':\r\n            newState = {...state};\r\n            newState.accessibility = {...newState.accessibility, ...action.accessibility};\r\n            return newState;\r\n        case 'ADD_COMPONENT':\r\n            newState = {...state};\r\n            newState.components.push(action.component);\r\n            if(action.areaId!==undefined){\r\n                i = newState.components.findIndex(component=>component._id===action.areaId);\r\n                newState.components[i].outputComponents.push(action.component._id);\r\n            }\r\n            return newState;\r\n        case 'REMOVE_COMPONENT':\r\n            newState = {...state};\r\n            i = newState.components.findIndex(component=>component._id===action.componentId);\r\n            newState.components = [...newState.components.slice(0,i),...newState.components.slice(i+1)]\r\n            newState.components.forEach((component,index,components)=>{\r\n                components[index].inputComponents = component.inputComponents.filter(inputId=>inputId!==action.componentId);\r\n                components[index].outputComponents = component.outputComponents.filter(outputId=>outputId!==action.componentId);\r\n            })\r\n            return newState;\r\n        case 'UPDATE_COMPONENT':\r\n            newState = {...state};\r\n            i = newState.components.findIndex(component=>component._id===action.component._id);\r\n            newState.components[i] = {...newState.components[i],...action.component};\r\n            return newState;\r\n        case 'ADD_RELATIONSHIP':\r\n            newState = {...state};\r\n            newState.components.forEach((component,index,components)=>{\r\n                if(component._id===action.parentId){\r\n                    if(action.isInput){\r\n                        if(component.inputComponents.indexOf(action.componentId)===-1)\r\n                            component.inputComponents.push(action.componentId);\r\n                    } else {\r\n                        if(component.outputComponents.indexOf(action.componentId)===-1)\r\n                            component.outputComponents.push(action.componentId);\r\n                    }\r\n                }\r\n            });\r\n            return newState;\r\n        case 'REMOVE_RELATIONSHIP':\r\n            newState = {...state};\r\n            newState.components.forEach((component,index,components)=>{\r\n                if(component._id===action.parentId){\r\n                    if(action.isInput){\r\n                        if(component.inputComponents.indexOf(action.componentId)===-1)\r\n                            component.inputComponents = component.inputComponents.filter(id=>id!==action.componentId);\r\n                    } else {\r\n                        if(component.outputComponents.indexOf(action.componentId)===-1)\r\n                            component.outputComponents = component.outputComponents.filter(id=>id!==action.componentId);\r\n                    }\r\n                }\r\n            });\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default escapeRoom;","class Modal {\r\n    constructor(header,body,confirmText,confirmCallback,cancelText,cancelCallback,isOpen=true){\r\n        this.header = header;\r\n        this.body = body;\r\n        this.confirm = {text:confirmText,action:confirmCallback}; //Converts callback to a string, because redux can't store funcs\r\n        this.cancel = {text:cancelText,action:cancelCallback};\r\n        this.isOpen = isOpen;\r\n    }\r\n}\r\n\r\nexport default Modal","import Modal from \"../models/Modal\";\r\n\r\nfunction modal(state=new Modal(\"\",\"\",\"\",()=>{},\"\",()=>{},false),action){\r\n    switch(action.type){\r\n        case 'SHOW_MODAL':\r\n            return {...action.modal,isOpen:true};\r\n        case 'HIDE_MODAL':\r\n            return new Modal(\"\",\"\",\"\",()=>{},\"\",()=>{},false)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default modal;","import { combineReducers } from 'redux';\r\nimport { routerReducer } from 'react-router-redux';\r\n\r\nimport user from './user';\r\nimport escapeRooms from './escapeRooms';\r\nimport escapeRoom from './escapeRoom';\r\nimport modal from './modal';\r\n\r\nexport default function(reduxifiedServices){\r\n    return combineReducers({\r\n        usersService: reduxifiedServices.users.reducer,\r\n        escapeRoomsService: reduxifiedServices['escape-rooms'].reducer,\r\n        routing: routerReducer,\r\n        user,\r\n        escapeRooms,\r\n        escapeRoom,\r\n        modal\r\n    })\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Dropdown, DropdownToggle, DropdownMenu, DropdownItem , ListGroup, ListGroupItem , Button } from 'reactstrap';\r\nimport { saveAs } from 'file-saver';\r\nimport jsPDF from 'jspdf';\r\nimport Modal from '../models/Modal';\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: [false,false]\r\n        }\r\n    }\r\n    handleToggle = (i) => (e) => {\r\n        var dropdownOpen = this.state.dropdownOpen;\r\n        dropdownOpen[i] = !dropdownOpen[i];\r\n        this.setState({dropdownOpen});\r\n    }\r\n    handleClick = async (e) => {\r\n        if(this.props.newEscapeRoom)\r\n            this.props.newEscapeRoom();\r\n    }\r\n    saveJSON(escapeRoom) {\r\n        const blob = new Blob([JSON.stringify(escapeRoom)],{type:'text/plain;charset=utf-8'});\r\n        saveAs(blob, escapeRoom.details.name+\".json\");\r\n    }\r\n    savePDF(escapeRoom) {\r\n        var doc = new jsPDF();\r\n        doc.text(JSON.stringify(escapeRoom),10,10);\r\n        doc.save(escapeRoom.details.name+'.pdf');\r\n    }\r\n    handleItemClick = (i, action) => (e) => {\r\n        const escapeRoom = this.props.escapeRooms[i];\r\n        switch(action){\r\n            case 'EDIT':\r\n                if(this.props.editEscapeRoom)   \r\n                    this.props.editEscapeRoom(escapeRoom);\r\n                break;\r\n            case 'JSON':\r\n                this.saveJSON(escapeRoom);\r\n                break;\r\n            case 'PDF':\r\n                this.savePDF(escapeRoom);\r\n                break;\r\n            case 'DELETE':\r\n                if(this.props.deleteEscapeRoom)\r\n                    this.props.showModal(new Modal(\"Warning\",\"Are you sure you want to delete \"+escapeRoom.details.name+\"?\",\"Yes\",()=>{this.props.deleteEscapeRoom(escapeRoom)},\"No\",()=>{}));\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    mapEscapeRoomToList = (escapeRoom,i) => {\r\n        return (\r\n        <ListGroupItem key={i}>{escapeRoom.details.name}\r\n            <Dropdown style={{display:'inline', position: 'absolute', right:'20px'}} isOpen={this.state.dropdownOpen[i]} toggle={this.handleToggle(i)}>\r\n                <DropdownToggle caret/>\r\n                <DropdownMenu right>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'EDIT')}>Edit</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'JSON')}>Export as JSON</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'PDF')}>Export as PDF</DropdownItem>\r\n                    <DropdownItem onClick={this.handleItemClick(i,'DELETE')}>Delete</DropdownItem>\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        </ListGroupItem>)\r\n    };\r\n    render() {\r\n        const escapeRooms = this.props.escapeRooms;\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Button block onClick={this.handleClick}>NEW</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <ListGroup>\r\n                            {escapeRooms.map(this.mapEscapeRoomToList)}\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Dashboard;","import React, {Component}  from 'react';\r\nimport { Container, Row, Col, Card, CardImg, CardBody,\r\n    CardTitle, Alert, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nclass Profile extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            edit: false,\r\n            errorMessage: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            _id: \"\"\r\n        };\r\n    }\r\n    //Handles login form submit event\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(this.props.updateUser)\r\n            this.props.updateUser({email:this.state.email,password:this.state.password});\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    //Handles error dismiss\r\n    handleDismiss = (event) => {\r\n        this.setState({errorMessage: \"\"});\r\n    }\r\n\r\n    handleClick = async (event) => {\r\n        switch (event.target.id) {\r\n            case 'editButton':\r\n                this.setState({edit:true});\r\n                break;\r\n            case 'saveButton':\r\n                let user = this.props.user;\r\n                if(this.state.email===\"\"){\r\n                    this.setState({errorMessage:\"Email Required\"});\r\n                    return;\r\n                } else {\r\n                    user.email = this.state.email;\r\n                }\r\n                if(this.state.password!==\"\")\r\n                    user.password = this.state.password;\r\n                if(this.props.updateUser!==undefined){\r\n                    let response = await this.props.updateUser(user);\r\n                    if(response===true){\r\n                        this.setState({edit:false});\r\n                    } else {\r\n                        this.setState({errorMessage:\"Error, Please Try Again Later\"});\r\n                    }\r\n                }\r\n                    \r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const user = this.props.user;\r\n        this.setState({\r\n            email: user.email\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(oldProps){\r\n        const newProps = this.props;\r\n        if(oldProps.user.email !== newProps.user.email){\r\n            const user = this.props.user;\r\n            this.setState({\r\n                email: user.email,\r\n                _id: user._id\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.profile = \r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <CardImg height=\"50%\" src={this.props.user.avatar} alt=\"Profile Image\" />\r\n                        <CardBody>\r\n                        <CardTitle className=\"text-center\">{this.props.user.email}</CardTitle>\r\n                        <Button id=\"editButton\" block={true} className=\"text-center\" onClick={this.handleClick}>Edit Profile</Button>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        this.editProfile = \r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup>\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"password\">Password</Label>\r\n                            <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <Button id=\"saveButton\" onClick={this.handleClick}>Save</Button>\r\n                        <Alert isOpen={this.state.errorMessage !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.errorMessage}</Alert>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        if(this.state.edit)\r\n            return this.editProfile;\r\n        else \r\n            return this.profile;\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, {Component}  from 'react';\r\nimport { Container, Dropdown, DropdownToggle , DropdownMenu , DropdownItem , Row, Col, Nav, NavItem, NavLink, TabContent, TabPane , Button } from 'reactstrap';\r\nimport { Details, Accessibility, Design } from './index';\r\nimport classnames from 'classnames';\r\nimport { saveAs } from 'file-saver';\r\nimport jsPDF from 'jspdf';\r\n\r\nclass EscapeRoomDesigner extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {activeTab:'design', dropdownOpen: false};\r\n    }\r\n    saveJSON(escapeRoom) {\r\n        const blob = new Blob([JSON.stringify(escapeRoom)],{type:'text/plain;charset=utf-8'});\r\n        saveAs(blob, escapeRoom.details.name+\".json\");\r\n    }\r\n    savePDF(escapeRoom) {\r\n        var doc = new jsPDF();\r\n        doc.text(JSON.stringify(escapeRoom),10,10);\r\n        doc.save(escapeRoom.details.name+'.pdf');\r\n    }\r\n    handleClick = (action) => (e) => {\r\n        switch(action){\r\n            case 'EXIT':\r\n                if(this.props.saveEscapeRoom)\r\n                    this.props.saveEscapeRoom(this.props.escapeRoom);\r\n                break;\r\n            case 'JSON':\r\n                if(this.props.saveEscapeRoom)\r\n                    this.props.saveEscapeRoom(this.props.escapeRoom);\r\n                this.saveJSON(this.props.escapeRoom);\r\n                break;\r\n            case 'PDF':\r\n                if(this.props.saveEscapeRoom)\r\n                    this.props.saveEscapeRoom(this.props.escapeRoom);\r\n                this.savePDF(this.props.escapeRoom);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    handleToggle = (e) => {\r\n        this.setState({dropdownOpen: !this.state.dropdownOpen});\r\n    }\r\n    handleNav = (tab) => (e) => {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const escapeRoom = this.props.escapeRoom;\r\n        if(escapeRoom===undefined){\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col xs=\"6\" md=\"3\" lg=\"3\"><Button block onClick={this.handleClick('EXIT')}>Save and Exit</Button></Col>\r\n                    <Col xs=\"6\" md=\"3\" lg=\"3\">\r\n                        <Dropdown block isOpen={this.state.dropdownOpen} toggle={this.handleToggle}>\r\n                            <DropdownToggle caret>Save and Export</DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem onClick={this.handleClick('JSON')}>Export as JSON</DropdownItem>\r\n                                <DropdownItem onClick={this.handleClick('PDF')}>Export as PDF</DropdownItem>\r\n                            </DropdownMenu>\r\n                        </Dropdown>\r\n                    </Col>\r\n                    <Col xs=\"6\"/>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Nav tabs>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'details'})}\r\n                                    onClick={this.handleNav('details')}    \r\n                                >\r\n                                    Details\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'accessibility'})}\r\n                                    onClick={this.handleNav('accessibility')}    \r\n                                >\r\n                                    Accessibility\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={classnames({active: this.state.activeTab === 'design'})}\r\n                                    onClick={this.handleNav('design')}    \r\n                                >\r\n                                    Design\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <TabContent activeTab={this.state.activeTab}>\r\n                            <TabPane tabId=\"details\">\r\n                                <Details details={this.props.escapeRoom.details} updateDetails={this.props.updateDetails}/>\r\n                            </TabPane>\r\n                            <TabPane tabId=\"accessibility\">\r\n                                <Accessibility accessibility={this.props.escapeRoom.accessibility} updateAccessibility={this.props.updateAccessibility}/>\r\n                            </TabPane>\r\n                            <TabPane tabId=\"design\">\r\n                                <Design components={{components:this.props.escapeRoom.components}} showModal={this.props.showModal} accessibility={this.props.escapeRoom.accessibility} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} updateComponent={this.props.updateComponent} addRelationship={this.props.addRelationship} removeRelationship={this.props.removeRelationship}/>\r\n                            </TabPane>\r\n                        </TabContent>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default EscapeRoomDesigner;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Form, FormGroup, Label, Input} from 'reactstrap';\r\n\r\nclass Details extends Component {\r\n    //Changes state on input change\r\n    handleChange = (event) => { \r\n        var state = {};\r\n        state[event.target.id] = event.target.value;    \r\n        this.props.updateDetails(state);\r\n    }\r\n    render(){\r\n        return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Room Name</Label>\r\n                            <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Room Name\" value={this.props.details.name} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"designers\">Designers</Label>\r\n                            <Input type=\"text\" name=\"designers\" id=\"designers\" placeholder=\"Designer(s)\" value={this.props.details.designers} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"theme\">Theme</Label>\r\n                            <Input type=\"text\" name=\"theme\" id=\"theme\" placeholder=\"theme\" value={this.props.details.theme} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label>Players</Label>\r\n                            <Input type=\"text\" name=\"minPlayers\" id=\"minPlayers\" placeholder=\"Min\" value={this.props.details.minPlayers} onChange={this.handleChange}/>\r\n                            <Input type=\"text\" name=\"maxPlayers\" id=\"maxPlayers\" placeholder=\"Max\" value={this.props.details.maxPlayers} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"targetTime\">Target Time</Label>\r\n                            <Input type=\"text\" name=\"targetTime\" id=\"targetTime\" placeholder=\"Time\" value={this.props.details.targetTime} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                        <FormGroup>\r\n                            <Label for=\"difficulty\">Difficulty</Label>\r\n                            <Input type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" id=\"difficulty\" value={this.props.details.difficulty} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </Col>\r\n                <Col>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"objective\">Objective</Label>\r\n                            <Input type=\"text\" name=\"objective\" id=\"objective\" placeholder=\"Main Objective\" value={this.props.details.objective} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"description\">Description</Label>\r\n                            <Input type=\"textarea\" name=\"description\" id=\"description\" placeholder=\"Description\" value={this.props.details.description} onChange={this.handleChange}/>\r\n                        </FormGroup>                        \r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>)\r\n    }\r\n}\r\n\r\nexport default Details;","import React, {Component} from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Pallet, ComponentArranger, ComponentDetails } from './index';\r\n\r\nclass Design extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {selected: {}};\r\n    }\r\n    handleComponentClick = (component) => (e) => {\r\n        e.stopPropagation();\r\n        this.setState({selected:component});\r\n    }\r\n    updateComponent = (component) => {\r\n        this.props.updateComponent(component);\r\n        this.setState({selected:{...this.state.selected,...component}})\r\n    }\r\n    findComponent = (id) => {\r\n        return this.props.components.components.find(component=>component._id===id);\r\n    }\r\n    render(){\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col md=\"2\">\r\n                        <Pallet/>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                        <ComponentArranger findComponent={this.findComponent} showModal={this.props.showModal} handleComponentClick={this.handleComponentClick} updateComponent={this.props.updateComponent} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship} components={this.props.components.components}/>            \r\n                    </Col>\r\n                    <Col md=\"2\">\r\n                        <ComponentDetails selected={this.state.selected} updateComponent={this.updateComponent}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Design;","import uniqid from 'uniqid';\r\n\r\nexport default class Component {\r\n    constructor(){\r\n        this._id = uniqid();\r\n        this.name = \"\";\r\n        this.description = \"\";\r\n        this.output = \"\";\r\n        this.inputComponents = [];\r\n        this.outputComponents = [];\r\n        this.type = \"Component\";\r\n        this.position = {top:0,left:0};\r\n        this.estimatedCost = \"\";\r\n    }\r\n}","import Component from './Component';\r\nexport default class Area extends Component {\r\n    constructor(){\r\n        super();\r\n        this.type=\"Area\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Puzzle extends Component {\r\n    constructor(){\r\n        super();\r\n        this.puzzleType=\"Cipher\";\r\n        this.type=\"Puzzle\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Prop extends Component {\r\n    constructor(){\r\n        super();\r\n        this.type=\"Prop\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Lock extends Component {\r\n    constructor(){\r\n        super();\r\n        this.lockType=\"Numeric\";\r\n        this.type=\"Lock\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Event extends Component {\r\n    constructor(){\r\n        super();\r\n        this.eventType=\"Sound Effect\";\r\n        this.type=\"Event\";\r\n    }   \r\n}","import Component from './Component';\r\nexport default class Music extends Component {\r\n    constructor(){\r\n        super();\r\n        this.startTime=\"\";\r\n        this.endTime=\"\"\r\n        this.type=\"Music\";\r\n    }   \r\n}","import React, {Component}  from 'react';\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport { DropTarget } from 'react-dnd';\r\nimport { Puzzle, Event, Music, Lock, Prop } from '../models/index';\r\n\r\nconst Types = {\r\n    COMPONENT: 'COMPONENT'\r\n}\r\n\r\nconst componentTarget = {\r\n    drop(props,monitor,component){\r\n        if (monitor.didDrop()){\r\n            return;\r\n        }\r\n        const item = monitor.getItem();\r\n        const isInput = props.isInput;\r\n        component.handleComponentDrop(item,isInput);\r\n        return {moved:true};\r\n    }\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        isOverCurrent: monitor.isOver({shallow:true}),\r\n        canDrop: monitor.canDrop(),\r\n        itemType: monitor.getItemType()\r\n    }\r\n}\r\n\r\nclass ComponentDnDTarget extends Component {\r\n    handleComponentDrop(item,isInput=true){\r\n        var component = null;\r\n        if (item.id!==undefined){\r\n            switch(item.id){\r\n                case 'Puzzle':\r\n                    component = new Puzzle();\r\n                    break;\r\n                case 'Lock':\r\n                    component = new Lock();\r\n                    break;\r\n                case 'Event':\r\n                    component = new Event();\r\n                    break;\r\n                case 'Music':\r\n                    component = new Music();\r\n                    break;\r\n                case 'Prop':\r\n                    component = new Prop();\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            this.props.addComponent(component,this.props.component._id);\r\n        }else {\r\n            component = item;\r\n            if(component._id!==this.props.component._id)\r\n                this.props.addRelationship(component._id,this.props.component._id,isInput);\r\n        }\r\n\r\n    }\r\n    render() {\r\n        var classNames;\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames=\"canDrop\";\r\n        } else if(this.props.isOver){\r\n            classNames=\"cantDrop\";\r\n        }\r\n        return this.props.connectDropTarget(\r\n            <div className={classNames} key={this.props.component._id}>\r\n                <Card onClick={this.props.handleComponentClick(this.props.component)}>\r\n                    <CardBody>\r\n\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DropTarget(Types.COMPONENT, componentTarget, collect)(ComponentDnDTarget);","import React, {Component} from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport ComponentDnDTarget from './ComponentDnDTarget';\r\nimport { Row, Col } from 'reactstrap'\r\nimport '../styles/Component.css';\r\nimport { ArcherElement } from 'react-archer';\r\nimport Modal from '../models/Modal';\r\n\r\n// Drag sources and drop targets only interact\r\n// if they have the same string type.\r\n// You want to keep types in a separate file with\r\n// the rest of your app's constants.\r\nconst Types = {\r\n  COMPONENT: 'COMPONENT'\r\n};\r\n\r\n/**\r\n * Specifies the drag source contract.\r\n * Only `beginDrag` function is required.\r\n */\r\nconst componentSource = {\r\n  canDrag(props) {\r\n    // You can disallow drag based on props\r\n    return true;\r\n  },\r\n\r\n  isDragging(props, monitor) {\r\n    return monitor.getItem().id === props.id;\r\n  },\r\n\r\n  beginDrag(props, monitor, component) {\r\n    // Return the data describing the dragged item\r\n    var item\r\n    if(props.component === undefined){\r\n      item = {id: props.id}\r\n    } else {\r\n      item = {...props.component};\r\n    }\r\n    return item;\r\n  },\r\n\r\n  endDrag(props, monitor, component) {\r\n    if (!monitor.didDrop()) {\r\n      if(props.component!==undefined||props.component!==null)\r\n        props.showModal(new Modal(\"Warning\", \"Are you sure you want to delete this component?\",\"Yes\",component.removeComponent,\"No\",()=>{}));\r\n        return;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    // Call this function inside render()\r\n    // to let React DnD handle the drag events:\r\n    connectDragSource: connect.dragSource(),\r\n    // You can ask the monitor about the current drag state:\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nclass ComponentDnDSource extends Component{\r\n  removeComponent = ()=>{\r\n    this.props.removeComponent(this.props.component._id);\r\n  }\r\n  componentDidMount(){\r\n    console.log(this.props);\r\n    if(this.props.addRef)\r\n      this.props.addRef(this.ref);\r\n  }\r\n  findComponent(component){\r\n    if(this.props.findComponent!==undefined){\r\n      return this.props.findComponent(component);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  render() {\r\n      var target;\r\n      if (this.props.isTarget){\r\n        target = (\r\n          <Row>\r\n              <Col xs=\"6\"><ComponentDnDTarget isInput={true} component={this.props.component} handleComponentClick={this.props.handleComponentClick} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/></Col>\r\n              <Col xs=\"6\"><ComponentDnDTarget isInput={false} component={this.props.component} handleComponentClick={this.props.handleComponentClick} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/></Col>\r\n          </Row>  \r\n        );\r\n      }\r\n      var style = {};\r\n      let id=\"\";\r\n      let classNames = \"component\";\r\n      if(this.props.component!==undefined){\r\n        style.top = this.props.component.position.top;\r\n        style.left = this.props.component.position.left;\r\n        style.position = 'relative';\r\n        classNames += \" \" + this.props.component.type + \" \" + this.props.component._id;\r\n        id=this.props.component._id;\r\n      } \r\n      return this.props.connectDragSource(\r\n          <div className={classNames} id={id} ref={(ref)=>this.ref=ref} style={style} onClick={this.props.handleComponentClick(this.props.component)}>\r\n            <span>{this.props.id||id}</span>\r\n            {target}\r\n            <span>{id}</span>\r\n          </div>\r\n      )\r\n  }\r\n};\r\n\r\nexport default DragSource(Types.COMPONENT, componentSource, collect)(ComponentDnDSource);","import React, {Component}  from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Card, CardBody ,CardTitle } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport { DropTarget } from 'react-dnd';\r\nimport ComponentDnDSource from './ComponentDnDSource';\r\nimport { Puzzle, Prop, Lock, Music, Event } from '../models/index.js';\r\nimport { ArcherContainer } from 'react-archer';\r\n\r\nconst Types = {\r\n    COMPONENT: 'COMPONENT'\r\n}\r\n\r\nconst componentTarget = {\r\n    drop(props,monitor,component){\r\n        if (monitor.didDrop() || !component || typeof props.component===undefined){\r\n            return;\r\n        }\r\n        const item = monitor.getItem();\r\n        if (item.position === undefined){\r\n            let clientOffset = monitor.getClientOffset();\r\n            let targetRect = ReactDOM.findDOMNode(component).getBoundingClientRect();\r\n            item.position = {top:clientOffset.y-targetRect.y-(targetRect.height*0.20),left:clientOffset.x-targetRect.x-(targetRect.width*0.10)};\r\n        } else {\r\n            const delta = monitor.getDifferenceFromInitialOffset()\r\n            item.position.left = Math.round(item.position.left + delta.x);\r\n            item.position.top = Math.round(item.position.top + delta.y);\r\n        }\r\n        component.handleComponentDrop(item);\r\n        return {moved:true};\r\n    }\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        isOverCurrent: monitor.isOver(),\r\n        canDrop: monitor.canDrop(),\r\n        itemType: monitor.getItemType()\r\n    }\r\n}\r\n\r\nclass AreaDnDTarget extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={render:true};\r\n    }\r\n    handleComponentDrop(item,isInput=false){\r\n        var component = null;\r\n        if (item.id!==undefined && item._id === undefined){\r\n            switch(item.id){\r\n                case 'Puzzle':\r\n                    component = new Puzzle();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Prop':\r\n                    component = new Prop();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Lock':\r\n                    component = new Lock();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Event':\r\n                    component = new Event();\r\n                    component.position = item.position;\r\n                    break;\r\n                case 'Music':\r\n                    component = new Music();\r\n                    component.position = item.position;\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            this.props.addComponent(component,this.props.component._id);\r\n        } else {\r\n            component = item;\r\n            this.props.updateComponent(component);\r\n        }\r\n    }\r\n    render() {\r\n        var classNames;\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames=\"canDrop\";\r\n        } else if(this.props.isOver){\r\n            classNames=\"cantDrop\";\r\n        }\r\n        return this.props.connectDropTarget(\r\n            <div className={classNames} key={this.props.component._id}>                \r\n                <Card className={this.props.component.type} onClick={this.props.handleComponentClick(this.props.component)}>\r\n                    <CardBody>\r\n                        <CardTitle>{this.props.component.type}</CardTitle>  \r\n                            {this.props.outputComponents.map((origComponent,i)=>{\r\n                                let component;\r\n                                component = this.props.findComponent(origComponent._id);\r\n                                return(<ComponentDnDSource addRef={this.props.addRef} key={i} renderTrigger={JSON.stringify(this.props.outputComponents)} isTarget handleComponentClick={this.props.handleComponentClick}  component={component} findComponent={this.props.findComponent} id={component.type} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/>)\r\n                            })}\r\n                    </CardBody>\r\n                </Card>   \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DropTarget(Types.COMPONENT, componentTarget, collect)(AreaDnDTarget);","import React, {Component} from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport AreaDnDTarget from './AreaDnDTarget';\r\nimport '../styles/Component.css';\r\nimport { Card } from 'reactstrap';\r\nimport Modal from '../models/Modal';\r\n\r\n// Drag sources and drop targets only interact\r\n// if they have the same string type.\r\n// You want to keep types in a separate file with\r\n// the rest of your app's constants.\r\nconst Types = {\r\n  AREA: 'AREA'\r\n};\r\n\r\n/**\r\n * Specifies the drag source contract.\r\n * Only `beginDrag` function is required.\r\n */\r\nconst areaSource = {\r\n  canDrag(props) {\r\n    // You can disallow drag based on props\r\n    return true;\r\n  },\r\n\r\n  isDragging(props, monitor) {\r\n    // If your component gets unmounted while dragged\r\n    // (like a card in Kanban board dragged between lists)\r\n    // you can implement something like this to keep its\r\n    // appearance dragged:\r\n    return monitor.getItem().id === props.id;\r\n  },\r\n\r\n  beginDrag(props, monitor, component) {\r\n    // Return the data describing the dragged item\r\n    var item = null;\r\n    if (props.id!==undefined){\r\n       item = { id: props.id };\r\n    } else {\r\n       item = { component: props.component };\r\n    }\r\n    return item;\r\n  },\r\n\r\n  endDrag(props, monitor, component) {\r\n    if (!monitor.didDrop() && component!=null) {\r\n      props.showModal(new Modal(\"Warning\", \"Are you sure you want to delete this component?\",\"Yes\",component.removeComponent,\"No\",()=>{}));\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    // Call this function inside render()\r\n    // to let React DnD handle the drag events:\r\n    connectDragSource: connect.dragSource(),\r\n    // You can ask the monitor about the current drag state:\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nclass AreaDnDSource extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state={render:true};\r\n  }\r\n  removeComponent = ()=>{\r\n    this.props.removeComponent(this.props.component._id);\r\n  }\r\n  addComponent = (component,parentId)=>{\r\n    console.log(this.props);\r\n    console.log(component);\r\n    console.log(parentId);\r\n    this.props.addComponent(component,this.props.component._id);\r\n    this.props.addRelationship(component._id,parentId);\r\n  }  \r\n  render() {\r\n    console.log('area-render');\r\n    var target;\r\n    if (this.props.isTarget){\r\n      target = (\r\n        <AreaDnDTarget addRef={this.props.addRef} findComponent={this.props.findComponent} handleComponentClick={this.props.handleComponentClick} outputComponents={this.props.outputComponents} component={this.props.component} showModal={this.props.showModal} addComponent={this.addComponent} updateComponent={this.props.updateComponent} removeComponent={this.props.removeComponent} addRelationship={this.props.addRelationship}/>\r\n      );\r\n    }\r\n\r\n    return this.props.connectDragSource(\r\n        <div onClick={this.props.handleComponentClick(this.props.component)}>\r\n          <Card className={\"component\"}>\r\n            {this.props.id}\r\n            {target}\r\n          </Card>\r\n        </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default DragSource(Types.AREA, areaSource, collect)(AreaDnDSource);","import React, {Component}  from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport AreaDnD from './AreaDnDSource';\r\nimport ComponentDnD from './ComponentDnDSource';\r\n\r\nclass Pallet extends Component {\r\n    handleComponentClick = (e) => {\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h3>Pallet</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <AreaDnD id=\"Area\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <ComponentDnD id=\"Puzzle\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <ComponentDnD id=\"Prop\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <ComponentDnD id=\"Lock\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <ComponentDnD id=\"Event\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                    <Col xs=\"3\" md=\"12\" lg=\"12\">\r\n                        <ComponentDnD id=\"Music\" handleComponentClick={this.handleComponentClick}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Pallet;","import React, {Component}  from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport '../styles/Component.css';\r\nimport '../styles/ComponentArranger.css';\r\nimport Area from './AreaDnDSource';\r\nimport AreaModel from '../models/Area';\r\nimport { DropTarget } from 'react-dnd';\r\nimport { ArcherContainer } from 'react-archer';\r\nimport LineTo from 'react-lineto';\r\n\r\nconst Types = {\r\n    AREA: 'AREA'\r\n}\r\n\r\nconst areaArrangerTarget = {\r\n    drop(props, monitor, component){\r\n        const item = monitor.getItem();\r\n        if(item.component===undefined || item.component===null){\r\n            component.props.addComponent(new AreaModel());\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n    return {\r\n      // Call this function inside render()\r\n      // to let React DnD handle the drag events:\r\n      connectDropTarget: connect.dropTarget(),\r\n      // You can ask the monitor about the current drag state:\r\n      isOver: monitor.isOver(),\r\n      isOverCurrent: monitor.isOver({ shallow: true }),\r\n      canDrop: monitor.canDrop(),\r\n      itemType: monitor.getItemType()\r\n    };\r\n  }\r\n\r\nclass ComponentArranger extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {refs:[]}\r\n    }\r\n    mapAreas = (area,i)=>{\r\n        if(area.type==='Area'){\r\n            console.log(area.outputComponents);\r\n            let outputComponents = this.props.components.filter((component)=>{\r\n                return area.outputComponents.includes(component._id);\r\n            });\r\n            console.log(outputComponents);\r\n            return (\r\n                <Col key={area._id} xs=\"12\"> \r\n                    <Area addRef={this.addRef} isTarget findComponent={this.props.findComponent} handleComponentClick={this.props.handleComponentClick} component={area} outputComponents={outputComponents} showModal={this.props.showModal} addComponent={this.props.addComponent} removeComponent={this.props.removeComponent} updateComponent={this.props.updateComponent} addRelationship={this.props.addRelationship}/>\r\n                </Col>\r\n            )  \r\n        }\r\n    }\r\n    addRef = (ref)=>{\r\n        console.log(ref);\r\n        if(ref!=undefined){\r\n            console.log(this.state.refs.push(ref));\r\n            this.setState({refs:[...this.state.refs,ref]},(refs)=>{\r\n                console.log(this.state);\r\n            });\r\n        }\r\n    }\r\n    componentDidUpdate(props,state) {\r\n        if(JSON.stringify(this.props.components)!==JSON.stringify(props.components)){\r\n            this.setState({render:true});\r\n        } else if(this.state.refs.length!=state.refs.length) {\r\n            window.requestAnimationFrame(()=>{\r\n\r\n            });\r\n        }\r\n    }\r\n    update = () => this.forceUpdate()\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.update, true);\r\n        window.addEventListener('resize', this.update);\r\n    }\r\n      \r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.update);\r\n        window.removeEventListener('resize', this.update)\r\n    }\r\n\r\n    render() {\r\n        var classNames;\r\n        if(this.props.isOver && this.props.canDrop){\r\n            classNames=\"canDrop\"\r\n        } else if (this.props.isOver){\r\n            classNames=\"cantDrop\"\r\n        }\r\n        let lines = [];\r\n        this.props.components.forEach((component,index,array)=>{\r\n            console.log(this.props.components);\r\n            if(component!=undefined && component.inputComponents!=undefined && component.type!=\"Area\"){\r\n                let inputComponents = component.inputComponents;\r\n                let outputComponents = component.outputComponents;\r\n                inputComponents.forEach((inputComponent,index,array)=>{\r\n                    inputComponent = this.props.findComponent(inputComponent);\r\n                    lines.push(<LineTo key={index} from={component._id} to={inputComponent._id} borderColor={\"#007bff\"}/>);\r\n                });\r\n                outputComponents.forEach((outputComponent,index,array)=>{\r\n                    outputComponent = this.props.findComponent(outputComponent);\r\n                    lines.push(<LineTo key={index} from={component._id} to={outputComponent._id} borderColor={\"#28a745\"}/>)\r\n                });\r\n            }\r\n        });\r\n        return this.props.connectDropTarget(\r\n            <div className={classNames}>\r\n                {lines}\r\n                <Container className=\"component-arranger\">\r\n                <Row>\r\n                    <Col>\r\n                        <h3>Components</h3>\r\n                    </Col>\r\n                </Row>\r\n                    <Row>\r\n                        {this.props.components.map(this.mapAreas)}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DropTarget(Types.AREA, areaArrangerTarget,collect)(ComponentArranger);","import React, {Component}  from 'react';\r\nimport { Container, Row, Col, Input, Label, ListGroupItem, Button, ListGroup } from 'reactstrap';\r\nimport {LockGenerator,PuzzleGenerator} from './index';\r\n\r\nclass ComponentDetails extends Component {\r\n    //Changes state on input change\r\n    handleChange = (event) => { \r\n        let state = {};\r\n        state[event.target.id] = event.target.value;  \r\n        state._id = this.props.selected._id;  \r\n        this.props.updateComponent(state);\r\n    }\r\n    mapDetailToInput = (key,i) => {\r\n        if(typeof this.props.selected[key] === \"string\" && key!==\"_id\" && key!==\"type\"){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{key}</Label>\r\n                        <Input type=\"text\" name={key} id={key} placeholder={key} value={this.props.selected[key]} onChange={this.handleChange}/>\r\n                    </Col>\r\n                </Row>)\r\n        } else if(key==='output') {\r\n            let generator;\r\n            if(this.props.selected.type==='Lock')\r\n                generator = <LockGenerator lockType={this.props.selected.lockType} handleOutputChange={this.handleOutputChange}></LockGenerator>\r\n            else if(this.props.selected.type==='Puzzle') {\r\n                generator = <PuzzleGenerator puzzleType={this.props.selected.puzzleType} handleOutputChange={this.handleOutputChange}></PuzzleGenerator>\r\n            }\r\n            return (<Row key={i}>\r\n                <Col>\r\n                    <Label for={key}>{key}</Label>\r\n                    <Input type=\"text\" name={key} id={key} placeholder={key} value={this.props.selected[key]} onChange={this.handleChange}/>\r\n                    <button onClick={this.generateFromInputs}>Generate From Inputs</button>\r\n                    {generator}\r\n                </Col>\r\n            </Row>)\r\n        } else if (key==='lockType'){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{key}</Label>\r\n                        <Input type=\"text\" name={key} id={key} placeholder={key} value={this.props.selected[key]} onChange={this.handleChange}>\r\n                            <option>Numeric</option>\r\n                            <option>Word</option>\r\n                            <option>Directional</option>\r\n                            <option>Contactless</option>\r\n                            <option>Key</option>\r\n                        </Input>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        } else if (key==='eventType'){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{key}</Label>\r\n                        <Input type=\"text\" name={key} id={key} placeholder={key} value={this.props.selected[key]} onChange={this.handleChange}>\r\n                            <option>Sound Effect</option>\r\n                            <option>New Area</option>\r\n                            <option>Objective Complete</option>\r\n                            <option>Custom</option>\r\n                        </Input>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        } else if (key==='puzzleType'){\r\n            return (\r\n                <Row key={i}>\r\n                    <Col>\r\n                        <Label for={key}>{key}</Label>\r\n                        <Input type=\"text\" name={key} id={key} placeholder={key} value={this.props.selected[key]} onChange={this.handleChange}>\r\n                            <option>Cipher</option>\r\n                            <option>Word</option>\r\n                            <option>Colour</option>\r\n                            <option>Hidden Word</option>\r\n                            <option>Hidden Object</option>\r\n                            <option>Riddle</option>\r\n                        </Input>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        }\r\n    };\r\n    handleOnClick = (id,isInput)=> (e) => {\r\n        let component = {...this.props.selected};\r\n        let state = {};\r\n        state._id = component._id;\r\n        if(isInput){\r\n            state.inputComponents = component.inputComponents.filter(oldId => oldId!==id);\r\n        } else {\r\n            state.outputComponents = component.outputComponents.filter(oldId => oldId!==id);\r\n        }\r\n        this.props.updateComponent(state);\r\n    }\r\n    mapIDToP = (id,i,isInput) => {\r\n        return (\r\n            <ListGroupItem key={i}>\r\n                {id}\r\n                <Button onClick={this.handleOnClick(id,isInput)} color=\"danger\" style={{display:'inline', position: 'absolute', right:'2px', top:'0.3rem'}}>\r\n                    X\r\n                </Button>\r\n            </ListGroupItem>\r\n        )\r\n    }\r\n    render() {\r\n        let component = this.props.selected;\r\n        let type;\r\n        let properties;\r\n        let inputs;\r\n        let outputs;\r\n        let inputRelationships;\r\n        let outputRelationships;\r\n        if(component!==undefined || component!==null){\r\n            properties = Object.keys(component).map(this.mapDetailToInput)\r\n            type = this.props.selected.type;\r\n            if(component.type!=='Area'&&component.inputComponents!==undefined&&component.outputComponents!==undefined&&(component.inputComponents.length>0||component.outputComponents.length>0)){\r\n                inputs = component.inputComponents.map((id,i)=>this.mapIDToP(id,i,true));\r\n                outputs = component.outputComponents.map((id,i)=>this.mapIDToP(id,i,false));\r\n                inputRelationships = (\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>Inputs</h4>\r\n                            <ListGroup>\r\n                                {inputs}\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n                outputRelationships = (\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>Outputs</h4>\r\n                            <ListGroup>\r\n                                {outputs}\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            }\r\n        }\r\n        return (\r\n            <Container style={{\"margin-bottom\":\"5vh\"}}>\r\n                <Row>\r\n                    <Col>\r\n                        <h3>Details</h3>\r\n                        <h4>{type}</h4>\r\n                    </Col>\r\n                </Row>\r\n                {properties}\r\n                {inputRelationships}\r\n                {outputRelationships}\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ComponentDetails;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, Card, CustomInput } from 'reactstrap';\r\n\r\nclass Accessibility extends Component {\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        var state = {};\r\n        state[event.target.id] = event.target.value;    \r\n        this.props.updateAccessibility(state);\r\n    }\r\n    render(){\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 className=\"text-center\">Visual Accessibility</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h2>Colour Blindness</h2>\r\n                                <p>\r\n                                    Please select the types of colour blindness your design must take into account\r\n                                </p>\r\n                            </Col>\r\n                            <Col>\r\n                                <h2>Other</h2>\r\n                                <p>\r\n                                    These are options to indicate restrictions on the design related to visual impairments such as blindness \r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card>\r\n                                   <CustomInput type=\"checkbox\" name=\"protanomaly\" id=\"protanomaly\" label=\"Protanomaly\" checked={this.props.accessibility.protanomaly} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"protanopia\" id=\"protanopia\" label=\"Protanopia\" checked={this.props.accessibility.protanopia} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"deuteranomaly\" id=\"deuteranomaly\" label=\"Deuteranomaly\" checked={this.props.accessibility.deuteranomaly} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"deuteranopia\" id=\"deuteranopia\" label=\"Deuteranopia\" checked={this.props.accessibility.deuteranopia} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"tritanomaly\" id=\"tritanomaly\" label=\"Tritanomaly\" checked={this.props.accessibility.tritanomaly} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"tritanopia\" id=\"tritanopia\" label=\"Tritanopia\" checked={this.props.accessibility.tritanopia} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"coneMonochromacy\" id=\"coneMonochromacy\" label=\"Cone Monochromacy\" checked={this.props.accessibility.coneMonochromacy} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"rodMonochromacy\" id=\"rodMonochromacy\" label=\"Rod Monochromacy\" checked={this.props.accessibility.rodMonochromacy} onChange={this.handleChange}/>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col>\r\n                                <Card>\r\n                                   <CustomInput type=\"checkbox\" name=\"largeFonts\" id=\"largeFonts\" label=\"Large Fonts\" value={this.props.accessibility.largeFonts} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"highContrast\" id=\"highContrast\" label=\"High Contrast\" value={this.props.accessibility.highContrast} onChange={this.handleChange}/>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 className=\"text-center\">Physical Accessibility</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <p>\r\n                                    These options are to indicate restrictions on the design related to physical impairments for example wheelchair accessibility and motor functions\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card>\r\n                                   <CustomInput type=\"checkbox\" name=\"Wheelchair Accessible\" id=\"heelchairAccessible\" label=\"wheelchairAccessible\" value={this.props.accessibility.wheelchairAccessible} onChange={this.handleChange}/>\r\n                                   <CustomInput type=\"checkbox\" name=\"motorAccessible\" id=\"motorAccessible\" label=\"Accessible for players with motor function issues\" value={this.props.accessibility.motorAccessible} onChange={this.handleChange}/>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <p>\r\n                            These options are designed to indicate the attempted accessibility of your design. These options will flag puzzles in your design that do not meet these restrictions\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Accessibility;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Alert, Button, Form, FormGroup, Label, Input, FormText} from 'reactstrap';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            errorMessage: \"\"\r\n        }\r\n    }\r\n\r\n    //Handles login form submit event\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        //Authenticate credentials \r\n        if(this.props.authenticateCredentials){\r\n            var err = await this.props.authenticateCredentials({strategy:'local',email:this.state.email,password:this.state.password});\r\n            this.setState({errorMessage:err});\r\n        }\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    //Handles error dismiss\r\n    handleDismiss = (event) => {\r\n        this.setState({errorMessage: \"\"});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"full-container verticaly-center-content\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup>\r\n                                    <Label for=\"email\">Email</Label>\r\n                                    <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"password\">Password</Label>\r\n                                    <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <Button>Login</Button>\r\n                                <FormText>\r\n                                    Don't have an account? Sign Up <Link to=\"/signup\">Here</Link>\r\n                                </FormText>\r\n                                <Alert isOpen={this.state.errorMessage !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.errorMessage}</Alert>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Alert, Button, Form, FormGroup, Label, Input, FormText} from 'reactstrap';\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            errorMessage: \"\"\r\n        }\r\n    }\r\n\r\n    //Handles login form submit event\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(this.props.signUp){\r\n            let err = await this.props.signUp({email:this.state.email,password:this.state.password});\r\n            this.setState({errorMessage:err});\r\n        }\r\n    }\r\n\r\n    //Changes state on input change\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    //Handles error dismiss\r\n    handleDismiss = (event) => {\r\n        this.setState({errorMessage: \"\"});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"full-container verticaly-center-content\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup>\r\n                                    <Label for=\"email\">Email</Label>\r\n                                    <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"password\">Password</Label>\r\n                                    <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                                </FormGroup>\r\n                                <Button>Sign Up</Button>\r\n                                <FormText>\r\n                                    Have an account? Log In <Link to=\"/login\">Here</Link>\r\n                                </FormText>\r\n                                <Alert isOpen={this.state.errorMessage !== \"\"} toggle={this.handleDismiss} color=\"danger\">{this.state.errorMessage}</Alert>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Signup;","import React, {Component}  from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <p>\r\n                            This is my honours project for BsC(Hons) Computing: Application Software Development at Robert Gordon University\r\n                            This is a web app for designing an escape room using drag and drop components\r\n                        </p>       \r\n                    </Col>\r\n                    <Col>\r\n                        <ul>\r\n                            <li><a href=\"https://github.com/AldoAbdn/Escape-Room-Generator/\">Github Repo</a></li>\r\n                            <li><a href=\"https://ninjamock.com/s/KCMW2Tx\">Wireframe</a></li>\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default About;","import React, {Component}  from 'react';\r\nimport YouTubePlaylist from 'react-youtube-playlist';\r\n\r\nclass Tutorials extends Component {\r\n    render() {\r\n        return (\r\n            <YouTubePlaylist\r\n                width={'85%'}\r\n                height={'100%'}\r\n                api_key={process.env.youtubeAPIKey}\r\n                playlist_id=\"PLWRRwFEmEuDKX5sobzWeb50xD14cpfkk3\"\r\n                scrolling={true}\r\n            />\r\n        )\r\n    }\r\n};\r\n\r\nexport default Tutorials;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass ProtectedRoute extends Component {\r\n    render(){\r\n        if (window.localStorage.getItem('feathers-jwt')){\r\n            if(this.props.condition!==undefined){\r\n                if(!this.props.condition){\r\n                    return(<Redirect to={this.props.redirect} state={this.props.location}/>)\r\n                } else {\r\n                    return (<Route {...this.props}/>)\r\n                }\r\n            } else {\r\n                return (<Route {...this.props}/>)\r\n            }\r\n        } else {\r\n            return (<Redirect to='/login' state={this.props.location}/>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default ProtectedRoute;","import React, {Component}  from 'react';\r\nimport { Container, Row } from 'reactstrap';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <h1>404 Page Not Found</h1>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default NotFound;","import React, {Component}  from 'react';\r\n\r\nclass LockGenerator extends Component {\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default LockGenerator;","import React, {Component}  from 'react';\r\n\r\nclass PuzzleGenerator extends Component {\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default PuzzleGenerator;","import { Area } from \".\";\r\nexport default class EscapeRoom {\r\n    constructor(userId){\r\n        this.userId = userId;\r\n        this.details = {\r\n            name: \"Unnamed\",\r\n            designers: \"\",\r\n            theme: \"\",\r\n            minPlayers: \"\",\r\n            maxPlayers: \"\",\r\n            targetTime: \"\",\r\n            difficulty: \"3\",\r\n            objective: \"\",\r\n            description: \"\"\r\n        }\r\n        this.accessibility = {\r\n            protanomaly: false,\r\n            protanopia: false,\r\n            deuteranomaly: false,\r\n            deuteranopia: false,\r\n            tritanomaly: false,\r\n            tritanopia: false,\r\n            coneMonochromacy: false,\r\n            rodMonochromacy: false,\r\n            largeFonts: false,\r\n            highContrast: false\r\n        }\r\n        this.components = [new Area()]\r\n    }  \r\n}","import React, {Component}  from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\n//Components\r\nimport { Dashboard, EscapeRoomDesigner, Login, Signup, Tutorials, About, ProtectedRoute, Profile, NotFound } from '../components/index.js';\r\nimport EscapeRoom from '../models/EscapeRoom.js';\r\n/**\r\n * Business logic of app \r\n * handles creating and updating of data \r\n * handles navigation \r\n * @class\r\n * @author Alistair Quinn\r\n */\r\nclass BusinessLogic extends Component {\r\n    /**\r\n     * Main construcutor\r\n     * handles initialising state\r\n     * @constructor\r\n     */\r\n    constructor(){\r\n        super();\r\n        this.state = {profile:null};\r\n    }\r\n    /**\r\n     * Authenticates login credentials \r\n     * @function\r\n     * @param {Object} credentials \r\n     */\r\n    authenticateCredentials = async(credentials)=>{\r\n        try {\r\n            await this.props.feathersClient.authenticate(credentials);\r\n            let queryResult = await this.props.services.users.find({query:{email:credentials.email}});\r\n            if(queryResult.action.type.includes('FULFILLED')&&queryResult.value.total>0){\r\n                var user = queryResult.value.data[0];\r\n                user.token = window.localStorage.getItem('feathers-jwt');\r\n                this.props.redux.actions.user.login(user);\r\n                this.props.history.push('/dashboard');\r\n            } else {\r\n                this.setState({})\r\n            }\r\n        } catch(err){\r\n            return err.message;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a new user \r\n     * @function\r\n     * @param {Object} credentials \r\n     */\r\n    signUp = async(credentials)=>{\r\n        //Create a new user \r\n        try{\r\n            await this.props.services.users.create(credentials);\r\n            //Authenticate with feathersjs\r\n            await this.props.feathersClient.authenticate({strategy:'local',email:credentials.email,password:credentials.password});\r\n            //Get User Details and Update Redux Store\r\n            let queryResult = await this.props.services.users.find({query:{email:credentials.email}});\r\n            if(queryResult.action.type.includes('FULFILLED')){\r\n                var user = queryResult.value.data[0];\r\n                user.token = window.localStorage.getItem('feathers-jwt');\r\n                this.props.redux.actions.user.login(user);\r\n                this.props.history.push('/dashboard');\r\n            }\r\n        } catch(error){\r\n            return error.message;\r\n        }\r\n    }\r\n    /**\r\n     * Opens escape room designer\r\n     * @function\r\n     * @param {EscapeRoom} escapeRoom\r\n     */\r\n    editEscapeRoom = (escapeRoom) => {\r\n        this.props.redux.actions.escapeRoom.setSelectedEscapeRoom(escapeRoom);\r\n        this.props.history.push('/designer');\r\n    }\r\n    /**\r\n     * Creates a new escape room \r\n     * then opens designer\r\n     * @function\r\n     */\r\n    newEscapeRoom = async() => {\r\n        const userId = this.props.redux.state.user._id;\r\n        const newEscapeRoom = new EscapeRoom(userId);\r\n        let response = await this.props.services['escape-rooms'].create(newEscapeRoom)\r\n        if(response.action.type.includes('FULFILLED')){\r\n            const escapeRoom = response.value;\r\n            if (escapeRoom!==null){\r\n                this.props.redux.actions.escapeRooms.addEscapeRoom(escapeRoom);\r\n                this.props.redux.actions.escapeRoom.setSelectedEscapeRoom(escapeRoom);\r\n                this.props.history.push('/designer');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Deletes an escape room\r\n     * @function\r\n     * @param {EscapeRoom} escapeRoom\r\n     */\r\n    deleteEscapeRoom = (escapeRoom) => {\r\n        this.props.services['escape-rooms'].remove(escapeRoom._id);\r\n        this.props.redux.actions.escapeRooms.removeEscapeRoom(escapeRoom);\r\n    }\r\n    /**\r\n     * Updates users details \r\n     * @function\r\n     * @param {Object} update\r\n     */\r\n    updateUser = async (update) => {\r\n        try{\r\n            const user = this.props.redux.state.user;\r\n            let response = await this.props.services.users.patch(user._id,update);\r\n            this.props.redux.actions.user.login(response.value);\r\n            this.props.history.push('/profile');\r\n            return true;\r\n        }catch(error){\r\n            return error.message;\r\n        }\r\n    }\r\n    /**\r\n     * Saves an escape room\r\n     * @function\r\n     * @param {EscapeRoom} escapeRoom\r\n     */\r\n    saveEscapeRoom = async(escapeRoom) => {\r\n        if(escapeRoom._id!==undefined){\r\n            await this.props.services['escape-rooms'].update(escapeRoom._id,escapeRoom);\r\n            await this.props.redux.actions.escapeRooms.updateEscapeRoom(escapeRoom);\r\n        }\r\n        this.props.history.push('/');\r\n    }\r\n    /**\r\n     * React lifecycle method\r\n     * Renders navigation \r\n     * @function\r\n     */\r\n    render() {\r\n        const escapeRooms = this.props.redux.state.escapeRooms;\r\n        const escapeRoom = this.props.redux.state.escapeRoom;\r\n        const escapeRoomActions = this.props.redux.actions.escapeRoom;\r\n        const user = this.props.redux.state.user;\r\n        const showModal = this.props.redux.actions.modal.showModal;\r\n        return (\r\n            <Switch>\r\n                <Redirect exact from=\"/\" to=\"dashboard\"/>\r\n                <ProtectedRoute path=\"/dashboard\" render={(routeProps) => (<Dashboard escapeRooms={escapeRooms} showModal={showModal} editEscapeRoom={this.editEscapeRoom} newEscapeRoom={this.newEscapeRoom} deleteEscapeRoom={this.deleteEscapeRoom}/>)}/>\r\n                <ProtectedRoute path=\"/profile\" condition={Object.keys(user).length > 0 && user!==undefined} redirect={'/login'} render={(routeProps) => (<Profile user={user} updateUser={this.updateUser}/>)}/>\r\n                <ProtectedRoute path=\"/designer\" condition={Object.keys(escapeRoom).length > 0 &&escapeRoom!==undefined} redirect={'/'} render={(routeProps) =>(<EscapeRoomDesigner showModal={showModal} escapeRoom={escapeRoom} saveEscapeRoom={this.saveEscapeRoom} updateDetails={escapeRoomActions.updateDetails} updateAccessibility={escapeRoomActions.updateAccessibility} addComponent={escapeRoomActions.addComponent} removeComponent={escapeRoomActions.removeComponent} updateComponent={escapeRoomActions.updateComponent} addRelationship={escapeRoomActions.addRelationship} removeRelationship={escapeRoomActions.removeRelationship}/>)}/>\r\n                <Route path=\"/login\" render={(routeProps) => (<Login authenticateCredentials={this.authenticateCredentials}/>)}/>\r\n                <Route path=\"/signup\" render={(routeProps) => (<Signup signUp={this.signUp}/>)}/>\r\n                <Route path=\"/about\" component={About}/>\r\n                <Route path=\"/tutorials\" component={Tutorials}/>\r\n                <Route component={NotFound}/>\r\n            </Switch> \r\n        )\r\n    }\r\n};\r\n\r\nexport default BusinessLogic;","import React, {Component}  from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport '../styles/Main.css';\r\n\r\n/**\r\n * Defines main layout of app \r\n * Handles re-authentication of logged in user \r\n * Renders business logic \r\n * @class Main \r\n * @author Alistair Quinn\r\n */\r\nimport BusinessLogic from './BusinessLogic.js';\r\nclass Main extends Component {\r\n    /**\r\n     * Main constructor to set initial state\r\n     * @constructor\r\n     */\r\n    constructor(){\r\n        super();\r\n        this.state = {profile:null,tooltipOpen:false};\r\n    }\r\n    /**\r\n     * React lifecycle method\r\n     * Updates profile if user has changed\r\n     * @function\r\n     * @param {Object} prevProps \r\n     */\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.redux.state.user.email!==this.props.redux.state.user.email){\r\n            this.populateEscapeRooms(this.props.redux.state.user._id);\r\n            if(this.props.redux.state.user.email !== undefined){\r\n                this.setProfile(true);\r\n            } else {\r\n                this.setProfile(false);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * React lifecycle method \r\n     * Updates profile is logged in\r\n     * @function\r\n     */\r\n    componentDidMount() {\r\n        if (window.localStorage.getItem('feathers-jwt') && this.props.redux.state.user.email!==undefined){\r\n            this.setProfile(true);\r\n        } else if (window.localStorage.getItem('feathers-jwt') && this.props.redux.state.user.email===undefined){\r\n            this.authenticate();\r\n        }\r\n    }\r\n    /**\r\n     * Authentication\r\n     * @function\r\n     */\r\n    authenticate = async() => {\r\n        //Authenticates JWT and then populates user/escapeRooms\r\n        let jwt = await this.authenticateJWT();\r\n        let user = await this.populateUserFromJWT(jwt);\r\n        if(user!=null)\r\n            await this.populateEscapeRooms(user._id);\r\n    }\r\n    /**\r\n     * Authenticates JWT \r\n     * @function \r\n     * @returns string\r\n     */\r\n    authenticateJWT = async() => {\r\n        try {\r\n            let response = await this.props.feathersClient.authenticate();\r\n            return response.accessToken;\r\n        } catch(error) {\r\n            this.logout();\r\n        }\r\n    }\r\n    /**\r\n     * Populates user from a jwt\r\n     * @function\r\n     * @param {String} jwt \r\n     * @returns {Object}\r\n     */\r\n    populateUserFromJWT = async(jwt) => {\r\n        if(jwt===undefined||jwt===null||jwt===\"\"){\r\n            this.setProfile(false);\r\n            return null;\r\n        }\r\n        let response = await this.props.feathersClient.passport.verifyJWT(jwt);\r\n        response = await this.props.services.users.get(response.userId);\r\n        var user = response.value;\r\n        if(user.email===undefined||user.email===\"\"){\r\n            this.setProfile(false);\r\n            return null;\r\n        }\r\n        user.token = window.localStorage.getItem('feathers-jwt');\r\n        this.props.redux.actions.user.login(user);\r\n        this.setProfile(true);\r\n        return user;\r\n    }\r\n    /**\r\n     * Popultes escape rooms by user ID\r\n     * @function\r\n     * @param {String} userId\r\n     * @returns {Array}\r\n     */\r\n    populateEscapeRooms = async (userId) => {\r\n        //Get User Details and Update Redux Store\r\n        if (userId !== null && userId !== undefined){\r\n            let queryResult = await this.props.services['escape-rooms'].find({query:{userId:userId}});\r\n            if(queryResult.action.type.includes('FULFILLED')){\r\n                const escapeRooms = queryResult.value.data;\r\n                if (escapeRooms!==null && escapeRooms!==undefined)\r\n                    this.props.redux.actions.escapeRooms.updateEscapeRooms(escapeRooms);\r\n                    this.setState({loading:false});\r\n                }\r\n        }\r\n    }\r\n    /**\r\n     * Logs out user, tidys up\r\n     * @function\r\n     */\r\n    logout = () => {\r\n        window.localStorage.removeItem('feathers-jwt');\r\n        this.setState({profile:null});\r\n        this.props.redux.actions.user.logout();\r\n        this.props.history.push('/');\r\n    }\r\n    /**\r\n     * Hides/shows user profile \r\n     * dependent on login status\r\n     * @param {Boolean} loggedIn \r\n     */\r\n    setProfile(loggedIn){\r\n        let state;\r\n        if(loggedIn){\r\n            state = \r\n            <div className=\"profile\" >\r\n                <Link to=\"/profile\">Profile</Link>\r\n                <Button onClick={this.logout}>Logout</Button>\r\n            </div>\r\n        } else {\r\n            state = null;\r\n        }\r\n        this.setState({profile:state});\r\n    }\r\n    /**\r\n     * React lifecycle method \r\n     * Renders main layout\r\n     * @function\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        const loading = this.state.loading || this.props.redux.state.usersService.isLoading || this.props.redux.state.escapeRoomsService.isLoading;\r\n        const modal = this.props.redux.state.modal;\r\n        const hideModal = this.props.redux.actions.modal.hideModal;\r\n        return (\r\n            <div>   \r\n                <LoadingOverlay className={'loading-overlay'} active={loading} spinner>       \r\n                    <header>\r\n                        <h1 className=\"title\">\r\n                            <Link to=\"/\">Escape Room Generator</Link>\r\n                        </h1>\r\n                    {this.state.profile}\r\n                    </header>\r\n                    \r\n                    <main>\r\n                        <BusinessLogic history={this.props.history} feathersClient={this.props.feathersClient} redux={this.props.redux} services={this.props.services}/>\r\n                    </main>\r\n                    <footer>\r\n                        <Link to=\"/about\">About</Link>\r\n                        <Link to=\"/tutorials\">Tutorials</Link>\r\n                    </footer>\r\n                </LoadingOverlay>\r\n                <Modal isOpen={modal.isOpen} >\r\n                    <ModalHeader>{modal.header}</ModalHeader>\r\n                    <ModalBody>\r\n                        {modal.body}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"success\" onClick={()=>{\r\n                            modal.confirm.action();\r\n                            hideModal();\r\n                        }}>{modal.confirm.text}</Button>\r\n                        <Button color=\"danger\" onClick={()=>{\r\n                            modal.cancel.action();\r\n                            hideModal();\r\n                        }}>{modal.cancel.text}</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Main;","export function login(user) {\r\n    return {\r\n        type: 'LOGIN', user\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return {\r\n        type: 'LOGOUT'\r\n    }\r\n}\r\n\r\n","export function addEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'ADD_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function removeEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'REMOVE_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function updateEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'UPDATE_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function updateEscapeRooms(escapeRooms){\r\n    return {\r\n        type: 'UPDATE_ESCAPE_ROOMS',\r\n        escapeRooms\r\n    }\r\n}","export function setSelectedEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'SET_SELECTED_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function clearSelectedEscapeRoom(escapeRoom){\r\n    return {\r\n        type: 'CLEAR_SELECTED_ESCAPE_ROOM',\r\n        escapeRoom\r\n    }\r\n}\r\n\r\nexport function updateDetails(details){\r\n    return {\r\n        type: 'UPDATE_DETAILS',\r\n        details\r\n    }\r\n}\r\n\r\nexport function updateAccessibility(accessibility){\r\n    return {\r\n        type: 'UPDATE_ACCESSIBILITY',\r\n        accessibility\r\n    }\r\n}\r\n\r\nexport function addComponent(component, areaId){\r\n    return {\r\n        type: 'ADD_COMPONENT',\r\n        component,\r\n        areaId\r\n    }\r\n}\r\n\r\nexport function removeComponent(componentId){\r\n    return {\r\n        type: 'REMOVE_COMPONENT',\r\n        componentId\r\n    }\r\n}\r\n\r\nexport function updateComponent(component){\r\n    return {\r\n        type: 'UPDATE_COMPONENT',\r\n        component\r\n    }\r\n}\r\n\r\nexport function addRelationship(componentId,parentId,isInput){\r\n    return {\r\n        type: 'ADD_RELATIONSHIP',\r\n        componentId,\r\n        parentId,\r\n        isInput\r\n    }\r\n}\r\n\r\nexport function removeRelationship(componentId,parentId,isInput){\r\n    return {\r\n        type: 'REMOVE_RELATIONSHIP',\r\n        componentId,\r\n        parentId,\r\n        isInput\r\n    }\r\n}\r\n\r\n","export function showModal(modal){\r\n    return {\r\n        type: 'SHOW_MODAL',\r\n        modal\r\n    }\r\n}\r\n\r\nexport function hideModal(){\r\n    return {\r\n        type: 'HIDE_MODAL'\r\n    }\r\n}","/**\r\n * Connects redux state and actions to the whole app,\r\n * makes sure routing is possible,\r\n * @class App\r\n * @author Alistair Quinn  \r\n */\r\n\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router'\r\nimport '../styles/App.css';\r\nimport Main from './Main';\r\nimport * as userActionCreators from '../actions/user';\r\nimport * as escapeRoomsActionCreators from '../actions/escapeRooms';\r\nimport * as escapeRoomActionCreators from '../actions/escapeRoom';\r\nimport * as modalActionCreators from '../actions/modal';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    redux: state\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  const user = bindActionCreators(userActionCreators, dispatch);\r\n  const escapeRooms = bindActionCreators(escapeRoomsActionCreators, dispatch);\r\n  const escapeRoom = bindActionCreators(escapeRoomActionCreators, dispatch);\r\n  const modal = bindActionCreators(modalActionCreators, dispatch);\r\n  return {user, escapeRooms, escapeRoom, modal};\r\n}\r\n\r\nfunction mergeProps(stateProps, dispatchProps, ownProps) {\r\n  return {\r\n    ...ownProps,\r\n    redux: {\r\n      state: stateProps.redux,\r\n      actions: dispatchProps\r\n    }\r\n  }\r\n}\r\n\r\nconst App = connect(mapStateToProps, mapDispatchToProps, mergeProps)(Main);\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/**\r\n * Main file, starts front end and renders App \r\n * @author Alistair Quinn\r\n */\r\n\r\n//React Imports \r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n//Redux Imports\r\nimport { Provider } from 'react-redux';\r\n//Store \r\nimport configureStore from './stores/store'\r\n//Feathers\r\nimport io from 'socket.io-client';\r\nimport feathers from 'feathers-client';\r\n//Feathers-Redux\r\nimport reduxifyServices, {getServicesStatus, bindWithDispatch} from 'feathers-redux';\r\n//CSS\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//Components\r\nimport App from './components/App';\r\n//Service Worker \r\nimport * as serviceWorker from './serviceWorker';\r\n//ReactDnD\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport TouchBackend from 'react-dnd-touch-backend';\r\nimport MultiBackend, { TouchTransition } from 'react-dnd-multi-backend';\r\nimport { DragDropContextProvider } from 'react-dnd';\r\nlet pipline = {\r\n    backends: [\r\n        {backend: HTML5Backend},\r\n        {\r\n            backend: TouchBackend({enableMouseEvents:true}),\r\n            preview: true,\r\n            transition: TouchTransition\r\n        }\r\n    ]\r\n};\r\nlet backend = MultiBackend(pipline);\r\n\r\n//Feathers Configuration \r\nexport const feathersClient = feathers()\r\n    .configure(feathers.socketio(io()))\r\n    .configure(feathers.hooks())\r\n    .configure(feathers.authentication({\r\n        storage:window.localStorage\r\n    }));\r\n\r\n//Configure Redux\r\nconst rawServices = reduxifyServices(feathersClient, ['users', 'escape-rooms']);\r\nconst store = configureStore(rawServices,{user:{},escapeRooms:[],escapeRoom:{}});\r\nconst services = bindWithDispatch(store.dispatch, rawServices);\r\n\r\n//Router\r\nconst router = (\r\n    <DragDropContextProvider backend={backend}>\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <App feathersClient={feathersClient} services={services} getServicesStatus={getServicesStatus}/>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    </DragDropContextProvider>\r\n);\r\n\r\n//Render Router \r\nReactDOM.render(router, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport middlewares from '../middleware';\r\nimport rootReducer from '../reducers';\r\n\r\nexport default function configureStore(reduxifiedServices, initialState) {\r\n    const createStoreWithDevTools = window.devToolsExtension ? window.devToolsExtension()(createStore) : createStore;\r\n    const createStoreWithMiddlewares = applyMiddleware(...middlewares)(createStoreWithDevTools);\r\n    return createStoreWithMiddlewares(rootReducer(reduxifiedServices),initialState);\r\n}"],"sourceRoot":""}